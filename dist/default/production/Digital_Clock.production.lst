

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Jan 10 18:49:41 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	intentry,global,class=CODE,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text32,local,class=CODE,merge=1,delta=2
    46                           	dabs	1,0x7E,2
    47  0000                     
    48                           ; Version 2.10
    49                           ; Generated 31/07/2019 GMT
    50                           ; 
    51                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC16F877A Definitions
    80                           ; 
    81                           ; SFR Addresses
    82  0000                     	;# 
    83  0001                     	;# 
    84  0002                     	;# 
    85  0003                     	;# 
    86  0004                     	;# 
    87  0005                     	;# 
    88  0006                     	;# 
    89  0007                     	;# 
    90  0008                     	;# 
    91  0009                     	;# 
    92  000A                     	;# 
    93  000B                     	;# 
    94  000C                     	;# 
    95  000D                     	;# 
    96  000E                     	;# 
    97  000E                     	;# 
    98  000F                     	;# 
    99  0010                     	;# 
   100  0011                     	;# 
   101  0012                     	;# 
   102  0013                     	;# 
   103  0014                     	;# 
   104  0015                     	;# 
   105  0015                     	;# 
   106  0016                     	;# 
   107  0017                     	;# 
   108  0018                     	;# 
   109  0019                     	;# 
   110  001A                     	;# 
   111  001B                     	;# 
   112  001B                     	;# 
   113  001C                     	;# 
   114  001D                     	;# 
   115  001E                     	;# 
   116  001F                     	;# 
   117  0081                     	;# 
   118  0085                     	;# 
   119  0086                     	;# 
   120  0087                     	;# 
   121  0088                     	;# 
   122  0089                     	;# 
   123  008C                     	;# 
   124  008D                     	;# 
   125  008E                     	;# 
   126  0091                     	;# 
   127  0092                     	;# 
   128  0093                     	;# 
   129  0094                     	;# 
   130  0098                     	;# 
   131  0099                     	;# 
   132  009C                     	;# 
   133  009D                     	;# 
   134  009E                     	;# 
   135  009F                     	;# 
   136  010C                     	;# 
   137  010D                     	;# 
   138  010E                     	;# 
   139  010F                     	;# 
   140  018C                     	;# 
   141  018D                     	;# 
   142  0000                     	;# 
   143  0001                     	;# 
   144  0002                     	;# 
   145  0003                     	;# 
   146  0004                     	;# 
   147  0005                     	;# 
   148  0006                     	;# 
   149  0007                     	;# 
   150  0008                     	;# 
   151  0009                     	;# 
   152  000A                     	;# 
   153  000B                     	;# 
   154  000C                     	;# 
   155  000D                     	;# 
   156  000E                     	;# 
   157  000E                     	;# 
   158  000F                     	;# 
   159  0010                     	;# 
   160  0011                     	;# 
   161  0012                     	;# 
   162  0013                     	;# 
   163  0014                     	;# 
   164  0015                     	;# 
   165  0015                     	;# 
   166  0016                     	;# 
   167  0017                     	;# 
   168  0018                     	;# 
   169  0019                     	;# 
   170  001A                     	;# 
   171  001B                     	;# 
   172  001B                     	;# 
   173  001C                     	;# 
   174  001D                     	;# 
   175  001E                     	;# 
   176  001F                     	;# 
   177  0081                     	;# 
   178  0085                     	;# 
   179  0086                     	;# 
   180  0087                     	;# 
   181  0088                     	;# 
   182  0089                     	;# 
   183  008C                     	;# 
   184  008D                     	;# 
   185  008E                     	;# 
   186  0091                     	;# 
   187  0092                     	;# 
   188  0093                     	;# 
   189  0094                     	;# 
   190  0098                     	;# 
   191  0099                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  018C                     	;# 
   201  018D                     	;# 
   202  0000                     	;# 
   203  0001                     	;# 
   204  0002                     	;# 
   205  0003                     	;# 
   206  0004                     	;# 
   207  0005                     	;# 
   208  0006                     	;# 
   209  0007                     	;# 
   210  0008                     	;# 
   211  0009                     	;# 
   212  000A                     	;# 
   213  000B                     	;# 
   214  000C                     	;# 
   215  000D                     	;# 
   216  000E                     	;# 
   217  000E                     	;# 
   218  000F                     	;# 
   219  0010                     	;# 
   220  0011                     	;# 
   221  0012                     	;# 
   222  0013                     	;# 
   223  0014                     	;# 
   224  0015                     	;# 
   225  0015                     	;# 
   226  0016                     	;# 
   227  0017                     	;# 
   228  0018                     	;# 
   229  0019                     	;# 
   230  001A                     	;# 
   231  001B                     	;# 
   232  001B                     	;# 
   233  001C                     	;# 
   234  001D                     	;# 
   235  001E                     	;# 
   236  001F                     	;# 
   237  0081                     	;# 
   238  0085                     	;# 
   239  0086                     	;# 
   240  0087                     	;# 
   241  0088                     	;# 
   242  0089                     	;# 
   243  008C                     	;# 
   244  008D                     	;# 
   245  008E                     	;# 
   246  0091                     	;# 
   247  0092                     	;# 
   248  0093                     	;# 
   249  0094                     	;# 
   250  0098                     	;# 
   251  0099                     	;# 
   252  009C                     	;# 
   253  009D                     	;# 
   254  009E                     	;# 
   255  009F                     	;# 
   256  010C                     	;# 
   257  010D                     	;# 
   258  010E                     	;# 
   259  010F                     	;# 
   260  018C                     	;# 
   261  018D                     	;# 
   262  0000                     	;# 
   263  0001                     	;# 
   264  0002                     	;# 
   265  0003                     	;# 
   266  0004                     	;# 
   267  0005                     	;# 
   268  0006                     	;# 
   269  0007                     	;# 
   270  0008                     	;# 
   271  0009                     	;# 
   272  000A                     	;# 
   273  000B                     	;# 
   274  000C                     	;# 
   275  000D                     	;# 
   276  000E                     	;# 
   277  000E                     	;# 
   278  000F                     	;# 
   279  0010                     	;# 
   280  0011                     	;# 
   281  0012                     	;# 
   282  0013                     	;# 
   283  0014                     	;# 
   284  0015                     	;# 
   285  0015                     	;# 
   286  0016                     	;# 
   287  0017                     	;# 
   288  0018                     	;# 
   289  0019                     	;# 
   290  001A                     	;# 
   291  001B                     	;# 
   292  001B                     	;# 
   293  001C                     	;# 
   294  001D                     	;# 
   295  001E                     	;# 
   296  001F                     	;# 
   297  0081                     	;# 
   298  0085                     	;# 
   299  0086                     	;# 
   300  0087                     	;# 
   301  0088                     	;# 
   302  0089                     	;# 
   303  008C                     	;# 
   304  008D                     	;# 
   305  008E                     	;# 
   306  0091                     	;# 
   307  0092                     	;# 
   308  0093                     	;# 
   309  0094                     	;# 
   310  0098                     	;# 
   311  0099                     	;# 
   312  009C                     	;# 
   313  009D                     	;# 
   314  009E                     	;# 
   315  009F                     	;# 
   316  010C                     	;# 
   317  010D                     	;# 
   318  010E                     	;# 
   319  010F                     	;# 
   320  018C                     	;# 
   321  018D                     	;# 
   322  0000                     	;# 
   323  0001                     	;# 
   324  0002                     	;# 
   325  0003                     	;# 
   326  0004                     	;# 
   327  0005                     	;# 
   328  0006                     	;# 
   329  0007                     	;# 
   330  0008                     	;# 
   331  0009                     	;# 
   332  000A                     	;# 
   333  000B                     	;# 
   334  000C                     	;# 
   335  000D                     	;# 
   336  000E                     	;# 
   337  000E                     	;# 
   338  000F                     	;# 
   339  0010                     	;# 
   340  0011                     	;# 
   341  0012                     	;# 
   342  0013                     	;# 
   343  0014                     	;# 
   344  0015                     	;# 
   345  0015                     	;# 
   346  0016                     	;# 
   347  0017                     	;# 
   348  0018                     	;# 
   349  0019                     	;# 
   350  001A                     	;# 
   351  001B                     	;# 
   352  001B                     	;# 
   353  001C                     	;# 
   354  001D                     	;# 
   355  001E                     	;# 
   356  001F                     	;# 
   357  0081                     	;# 
   358  0085                     	;# 
   359  0086                     	;# 
   360  0087                     	;# 
   361  0088                     	;# 
   362  0089                     	;# 
   363  008C                     	;# 
   364  008D                     	;# 
   365  008E                     	;# 
   366  0091                     	;# 
   367  0092                     	;# 
   368  0093                     	;# 
   369  0094                     	;# 
   370  0098                     	;# 
   371  0099                     	;# 
   372  009C                     	;# 
   373  009D                     	;# 
   374  009E                     	;# 
   375  009F                     	;# 
   376  010C                     	;# 
   377  010D                     	;# 
   378  010E                     	;# 
   379  010F                     	;# 
   380  018C                     	;# 
   381  018D                     	;# 
   382  0000                     	;# 
   383  0001                     	;# 
   384  0002                     	;# 
   385  0003                     	;# 
   386  0004                     	;# 
   387  0005                     	;# 
   388  0006                     	;# 
   389  0007                     	;# 
   390  0008                     	;# 
   391  0009                     	;# 
   392  000A                     	;# 
   393  000B                     	;# 
   394  000C                     	;# 
   395  000D                     	;# 
   396  000E                     	;# 
   397  000E                     	;# 
   398  000F                     	;# 
   399  0010                     	;# 
   400  0011                     	;# 
   401  0012                     	;# 
   402  0013                     	;# 
   403  0014                     	;# 
   404  0015                     	;# 
   405  0015                     	;# 
   406  0016                     	;# 
   407  0017                     	;# 
   408  0018                     	;# 
   409  0019                     	;# 
   410  001A                     	;# 
   411  001B                     	;# 
   412  001B                     	;# 
   413  001C                     	;# 
   414  001D                     	;# 
   415  001E                     	;# 
   416  001F                     	;# 
   417  0081                     	;# 
   418  0085                     	;# 
   419  0086                     	;# 
   420  0087                     	;# 
   421  0088                     	;# 
   422  0089                     	;# 
   423  008C                     	;# 
   424  008D                     	;# 
   425  008E                     	;# 
   426  0091                     	;# 
   427  0092                     	;# 
   428  0093                     	;# 
   429  0094                     	;# 
   430  0098                     	;# 
   431  0099                     	;# 
   432  009C                     	;# 
   433  009D                     	;# 
   434  009E                     	;# 
   435  009F                     	;# 
   436  010C                     	;# 
   437  010D                     	;# 
   438  010E                     	;# 
   439  010F                     	;# 
   440  018C                     	;# 
   441  018D                     	;# 
   442  0000                     	;# 
   443  0001                     	;# 
   444  0002                     	;# 
   445  0003                     	;# 
   446  0004                     	;# 
   447  0005                     	;# 
   448  0006                     	;# 
   449  0007                     	;# 
   450  0008                     	;# 
   451  0009                     	;# 
   452  000A                     	;# 
   453  000B                     	;# 
   454  000C                     	;# 
   455  000D                     	;# 
   456  000E                     	;# 
   457  000E                     	;# 
   458  000F                     	;# 
   459  0010                     	;# 
   460  0011                     	;# 
   461  0012                     	;# 
   462  0013                     	;# 
   463  0014                     	;# 
   464  0015                     	;# 
   465  0015                     	;# 
   466  0016                     	;# 
   467  0017                     	;# 
   468  0018                     	;# 
   469  0019                     	;# 
   470  001A                     	;# 
   471  001B                     	;# 
   472  001B                     	;# 
   473  001C                     	;# 
   474  001D                     	;# 
   475  001E                     	;# 
   476  001F                     	;# 
   477  0081                     	;# 
   478  0085                     	;# 
   479  0086                     	;# 
   480  0087                     	;# 
   481  0088                     	;# 
   482  0089                     	;# 
   483  008C                     	;# 
   484  008D                     	;# 
   485  008E                     	;# 
   486  0091                     	;# 
   487  0092                     	;# 
   488  0093                     	;# 
   489  0094                     	;# 
   490  0098                     	;# 
   491  0099                     	;# 
   492  009C                     	;# 
   493  009D                     	;# 
   494  009E                     	;# 
   495  009F                     	;# 
   496  010C                     	;# 
   497  010D                     	;# 
   498  010E                     	;# 
   499  010F                     	;# 
   500  018C                     	;# 
   501  018D                     	;# 
   502  0000                     	;# 
   503  0001                     	;# 
   504  0002                     	;# 
   505  0003                     	;# 
   506  0004                     	;# 
   507  0005                     	;# 
   508  0006                     	;# 
   509  0007                     	;# 
   510  0008                     	;# 
   511  0009                     	;# 
   512  000A                     	;# 
   513  000B                     	;# 
   514  000C                     	;# 
   515  000D                     	;# 
   516  000E                     	;# 
   517  000E                     	;# 
   518  000F                     	;# 
   519  0010                     	;# 
   520  0011                     	;# 
   521  0012                     	;# 
   522  0013                     	;# 
   523  0014                     	;# 
   524  0015                     	;# 
   525  0015                     	;# 
   526  0016                     	;# 
   527  0017                     	;# 
   528  0018                     	;# 
   529  0019                     	;# 
   530  001A                     	;# 
   531  001B                     	;# 
   532  001B                     	;# 
   533  001C                     	;# 
   534  001D                     	;# 
   535  001E                     	;# 
   536  001F                     	;# 
   537  0081                     	;# 
   538  0085                     	;# 
   539  0086                     	;# 
   540  0087                     	;# 
   541  0088                     	;# 
   542  0089                     	;# 
   543  008C                     	;# 
   544  008D                     	;# 
   545  008E                     	;# 
   546  0091                     	;# 
   547  0092                     	;# 
   548  0093                     	;# 
   549  0094                     	;# 
   550  0098                     	;# 
   551  0099                     	;# 
   552  009C                     	;# 
   553  009D                     	;# 
   554  009E                     	;# 
   555  009F                     	;# 
   556  010C                     	;# 
   557  010D                     	;# 
   558  010E                     	;# 
   559  010F                     	;# 
   560  018C                     	;# 
   561  018D                     	;# 
   562                           
   563                           	psect	idataBANK0
   564  07EE                     __pidataBANK0:	
   565                           
   566                           ;initializer for _SSD_LOT_ARR
   567  07EE  343F               	retlw	63
   568  07EF  3406               	retlw	6
   569  07F0  345B               	retlw	91
   570  07F1  344F               	retlw	79
   571  07F2  3466               	retlw	102
   572  07F3  346D               	retlw	109
   573  07F4  347D               	retlw	125
   574  07F5  3407               	retlw	7
   575  07F6  347F               	retlw	127
   576  07F7  346F               	retlw	111
   577  07F8  3400               	retlw	0
   578                           
   579                           ;initializer for Disp_Update@DISP_Time_Counter
   580  07F9  340A               	retlw	10
   581                           
   582                           ;initializer for CLOCK_Update@CLOCK_Time_Counter
   583  07FA  340A               	retlw	10
   584                           
   585                           ;initializer for SW_Update@SW_Time_Counter
   586  07FB  340F               	retlw	15
   587  0001                     _TMR0	set	1
   588  0008                     _PORTD	set	8
   589  0006                     _PORTB	set	6
   590  005F                     _GIE	set	95
   591  005D                     _TMR0IE	set	93
   592  005A                     _TMR0IF	set	90
   593  0089                     _TRISE	set	137
   594  0087                     _TRISC	set	135
   595  0085                     _TRISA	set	133
   596  0088                     _TRISD	set	136
   597  0086                     _TRISB	set	134
   598  040D                     _T0CS	set	1037
   599  0408                     _PS0	set	1032
   600  0409                     _PS1	set	1033
   601  040A                     _PS2	set	1034
   602                           
   603                           ; #config settings
   604  0000                     
   605                           	psect	cinit
   606  0013                     start_initialization:	
   607  0013                     __initialization:	
   608                           
   609                           ; Initialize objects allocated to BANK0
   610  0013  1383               	bcf	3,7	;select IRP bank0
   611  0014  305D               	movlw	low (__pdataBANK0+14)
   612  0015  00FD               	movwf	btemp+-1
   613  0016  3007               	movlw	high __pidataBANK0
   614  0017  00FE               	movwf	btemp
   615  0018  30EE               	movlw	low __pidataBANK0
   616  0019  00FF               	movwf	btemp+1
   617  001A  304F               	movlw	low __pdataBANK0
   618  001B  0084               	movwf	4
   619  001C  120A  158A  2797  120A  118A  	fcall	init_ram0
   620                           
   621                           ; Clear objects allocated to BANK0
   622  0021  3020               	movlw	low __pbssBANK0
   623  0022  0084               	movwf	4
   624  0023  3039               	movlw	low (__pbssBANK0+25)
   625  0024  120A  158A  276A  120A  118A  	fcall	clear_ram0
   626  0029                     end_of_initialization:	
   627                           ;End of C runtime variable initialization code
   628                           
   629  0029                     __end_of__initialization:	
   630  0029  0183               	clrf	3
   631  002A  120A  118A  2DAB   	ljmp	_main	;jump to C main() function
   632                           
   633                           	psect	bssBANK0
   634  0020                     __pbssBANK0:	
   635  0020                     _SW_DATA:	
   636  0020                     	ds	9
   637  0029                     _Buffer:	
   638  0029                     	ds	4
   639  002D                     _tempCounter:	
   640  002D                     	ds	2
   641  002F                     _Disp_Blink_counter:	
   642  002F                     	ds	1
   643  0030                     _CurrentMode:	
   644  0030                     	ds	1
   645  0031                     SSD_Update@SSD_Time_Counter:	
   646  0031                     	ds	1
   647  0032                     _Second_Dot_State:	
   648  0032                     	ds	1
   649  0033                     _currentSSD:	
   650  0033                     	ds	1
   651  0034                     _CurrentTime:	
   652  0034                     	ds	5
   653                           
   654                           	psect	dataBANK0
   655  004F                     __pdataBANK0:	
   656  004F                     _SSD_LOT_ARR:	
   657  004F                     	ds	11
   658  005A                     Disp_Update@DISP_Time_Counter:	
   659  005A                     	ds	1
   660  005B                     CLOCK_Update@CLOCK_Time_Counter:	
   661  005B                     	ds	1
   662  005C                     SW_Update@SW_Time_Counter:	
   663  005C                     	ds	1
   664                           
   665                           	psect	inittext
   666  0F93                     init_fetch0:	
   667                           ;	Called with low address in FSR and high address in W
   668                           
   669  0F93  087E               	movf	btemp,w
   670  0F94  008A               	movwf	10
   671  0F95  087F               	movf	btemp+1,w
   672  0F96  0082               	movwf	2
   673  0F97                     init_ram0:	
   674                           ;Called with:
   675                           ;	high address of idata address in btemp 
   676                           ;	low address of idata address in btemp+1 
   677                           ;	low address of data in FSR
   678                           ;	high address + 1 of data in btemp-1
   679                           
   680  0F97  120A  158A  2793  120A  158A  	fcall	init_fetch0
   681  0F9C  0080               	movwf	0
   682  0F9D  0A84               	incf	4,f
   683  0F9E  0804               	movf	4,w
   684  0F9F  067D               	xorwf	btemp+-1,w
   685  0FA0  1903               	btfsc	3,2
   686  0FA1  3400               	retlw	0
   687  0FA2  0AFF               	incf	btemp+1,f
   688  0FA3  1903               	btfsc	3,2
   689  0FA4  0AFE               	incf	btemp,f
   690  0FA5  2F97               	goto	init_ram0
   691                           
   692                           	psect	clrtext
   693  0F6A                     clear_ram0:	
   694                           ;	Called with FSR containing the base address, and
   695                           ;	W with the last address+1
   696                           
   697  0F6A  0064               	clrwdt	;clear the watchdog before getting into this loop
   698  0F6B                     clrloop0:	
   699  0F6B  0180               	clrf	0	;clear RAM location pointed to by FSR
   700  0F6C  0A84               	incf	4,f	;increment pointer
   701  0F6D  0604               	xorwf	4,w	;XOR with final address
   702  0F6E  1903               	btfsc	3,2	;have we reached the end yet?
   703  0F6F  3400               	retlw	0	;all done for this memory range, return
   704  0F70  0604               	xorwf	4,w	;XOR again to restore value
   705  0F71  2F6B               	goto	clrloop0	;do the next byte
   706                           
   707                           	psect	cstackCOMMON
   708  0070                     __pcstackCOMMON:	
   709  0070                     ?_SSD_Init:	
   710  0070                     ?_SW_Init:	
   711                           ; 1 bytes @ 0x0
   712                           
   713  0070                     ?_Disp_Init:	
   714                           ; 1 bytes @ 0x0
   715                           
   716  0070                     ?_CLOCK_Init:	
   717                           ; 1 bytes @ 0x0
   718                           
   719  0070                     ?_TMR_Init:	
   720                           ; 1 bytes @ 0x0
   721                           
   722  0070                     ?_TMR_Start:	
   723                           ; 1 bytes @ 0x0
   724                           
   725  0070                     ?_SSD_Disable:	
   726                           ; 1 bytes @ 0x0
   727                           
   728  0070                     ??_SSD_Disable:	
   729                           ; 1 bytes @ 0x0
   730                           
   731  0070                     ?_SSD_Data_write:	
   732                           ; 1 bytes @ 0x0
   733                           
   734  0070                     ??_SSD_Data_write:	
   735                           ; 1 bytes @ 0x0
   736                           
   737  0070                     ?_SSD_Enable:	
   738                           ; 1 bytes @ 0x0
   739                           
   740  0070                     ??_SSD_Enable:	
   741                           ; 1 bytes @ 0x0
   742                           
   743  0070                     ?_SW_UpdateState:	
   744                           ; 1 bytes @ 0x0
   745                           
   746  0070                     ?_DISP_Normal_Operation:	
   747                           ; 1 bytes @ 0x0
   748                           
   749  0070                     ?_DISP_Set_Hours_Operation:	
   750                           ; 1 bytes @ 0x0
   751                           
   752  0070                     ?_DISP_Set_Minutes_Operation:	
   753                           ; 1 bytes @ 0x0
   754                           
   755  0070                     ?_main:	
   756                           ; 1 bytes @ 0x0
   757                           
   758  0070                     ?_SSD_Update:	
   759                           ; 1 bytes @ 0x0
   760                           
   761  0070                     ?_SSD_Toggle_Second_Dot:	
   762                           ; 1 bytes @ 0x0
   763                           
   764  0070                     ??_SSD_Toggle_Second_Dot:	
   765                           ; 1 bytes @ 0x0
   766                           
   767  0070                     ?_SSD_Set_Second_Dot:	
   768                           ; 1 bytes @ 0x0
   769                           
   770  0070                     ??_SSD_Set_Second_Dot:	
   771                           ; 1 bytes @ 0x0
   772                           
   773  0070                     ?_SW_GetState:	
   774                           ; 1 bytes @ 0x0
   775                           
   776  0070                     ?_SW_Update:	
   777                           ; 1 bytes @ 0x0
   778                           
   779  0070                     ?_CLOCK_GetMode:	
   780                           ; 1 bytes @ 0x0
   781                           
   782  0070                     ??_CLOCK_GetMode:	
   783                           ; 1 bytes @ 0x0
   784                           
   785  0070                     ?_CLOCK_GetTime:	
   786                           ; 1 bytes @ 0x0
   787                           
   788  0070                     ??_CLOCK_GetTime:	
   789                           ; 1 bytes @ 0x0
   790                           
   791  0070                     ?_CLOCK_Increment:	
   792                           ; 1 bytes @ 0x0
   793                           
   794  0070                     ??_CLOCK_Increment:	
   795                           ; 1 bytes @ 0x0
   796                           
   797  0070                     ?_CLOCK_Update:	
   798                           ; 1 bytes @ 0x0
   799                           
   800  0070                     ?_Disp_Update:	
   801                           ; 1 bytes @ 0x0
   802                           
   803  0070                     ?_TMR0_ISR:	
   804                           ; 1 bytes @ 0x0
   805                           
   806  0070                     ?___bmul:	
   807                           ; 1 bytes @ 0x0
   808                           
   809  0070                     ?___awdiv:	
   810                           ; 1 bytes @ 0x0
   811                           
   812  0070                     ?___awmod:	
   813                           ; 2 bytes @ 0x0
   814                           
   815  0070                     ___bmul@multiplicand:	
   816                           ; 2 bytes @ 0x0
   817                           
   818  0070                     ___awdiv@divisor:	
   819                           ; 1 bytes @ 0x0
   820                           
   821  0070                     ___awmod@divisor:	
   822                           ; 2 bytes @ 0x0
   823                           
   824                           
   825                           ; 2 bytes @ 0x0
   826  0070                     	ds	1
   827  0071                     ??___bmul:	
   828  0071                     SSD_Set_Second_Dot@s:	
   829                           ; 1 bytes @ 0x1
   830                           
   831  0071                     CLOCK_GetTime@t:	
   832                           ; 1 bytes @ 0x1
   833                           
   834                           
   835                           ; 1 bytes @ 0x1
   836  0071                     	ds	1
   837  0072                     SSD_Disable@s:	
   838  0072                     SSD_Enable@s:	
   839                           ; 1 bytes @ 0x2
   840                           
   841  0072                     ___bmul@product:	
   842                           ; 1 bytes @ 0x2
   843                           
   844  0072                     ___awdiv@dividend:	
   845                           ; 1 bytes @ 0x2
   846                           
   847  0072                     ___awmod@dividend:	
   848                           ; 2 bytes @ 0x2
   849                           
   850                           
   851                           ; 2 bytes @ 0x2
   852  0072                     	ds	1
   853  0073                     ??_SSD_Update:	
   854  0073                     ___bmul@multiplier:	
   855                           ; 1 bytes @ 0x3
   856                           
   857                           
   858                           ; 1 bytes @ 0x3
   859  0073                     	ds	1
   860  0074                     ??_SW_UpdateState:	
   861  0074                     ??_SW_GetState:	
   862                           ; 1 bytes @ 0x4
   863                           
   864  0074                     ??___awdiv:	
   865                           ; 1 bytes @ 0x4
   866                           
   867  0074                     ??___awmod:	
   868                           ; 1 bytes @ 0x4
   869                           
   870                           
   871                           ; 1 bytes @ 0x4
   872  0074                     	ds	1
   873  0075                     ___awdiv@counter:	
   874  0075                     ___awmod@counter:	
   875                           ; 1 bytes @ 0x5
   876                           
   877                           
   878                           ; 1 bytes @ 0x5
   879  0075                     	ds	1
   880  0076                     SW_GetState@sw:	
   881  0076                     ___awdiv@sign:	
   882                           ; 1 bytes @ 0x6
   883                           
   884  0076                     ___awmod@sign:	
   885                           ; 1 bytes @ 0x6
   886                           
   887                           
   888                           ; 1 bytes @ 0x6
   889  0076                     	ds	1
   890  0077                     SW_GetState@ret:	
   891  0077                     SW_UpdateState@sw:	
   892                           ; 1 bytes @ 0x7
   893                           
   894  0077                     ___awdiv@quotient:	
   895                           ; 1 bytes @ 0x7
   896                           
   897                           
   898                           ; 2 bytes @ 0x7
   899  0077                     	ds	1
   900  0078                     ?_set_mode_process:	
   901  0078                     ??_SW_Update:	
   902                           ; 1 bytes @ 0x8
   903                           
   904  0078                     set_mode_process@limit:	
   905                           ; 1 bytes @ 0x8
   906                           
   907                           
   908                           ; 1 bytes @ 0x8
   909  0078                     	ds	1
   910  0079                     ??_set_mode_process:	
   911  0079                     ?i1_SSD_Set_Symbol:	
   912                           ; 1 bytes @ 0x9
   913                           
   914  0079                     i1SSD_Set_Symbol@index:	
   915                           ; 1 bytes @ 0x9
   916                           
   917                           
   918                           ; 1 bytes @ 0x9
   919  0079                     	ds	1
   920  007A                     ??i1_SSD_Set_Symbol:	
   921  007A                     set_mode_process@var:	
   922                           ; 1 bytes @ 0xA
   923                           
   924                           
   925                           ; 1 bytes @ 0xA
   926  007A                     	ds	1
   927  007B                     ??_CLOCK_Update:	
   928  007B                     i1SSD_Set_Symbol@symbol:	
   929                           ; 1 bytes @ 0xB
   930                           
   931                           
   932                           ; 1 bytes @ 0xB
   933  007B                     	ds	1
   934  007C                     ??_Disp_Update:	
   935                           
   936                           ; 1 bytes @ 0xC
   937  007C                     	ds	2
   938                           
   939                           	psect	cstackBANK0
   940  0039                     __pcstackBANK0:	
   941  0039                     ??_DISP_Normal_Operation:	
   942  0039                     ??_DISP_Set_Hours_Operation:	
   943                           ; 1 bytes @ 0x0
   944                           
   945  0039                     ??_DISP_Set_Minutes_Operation:	
   946                           ; 1 bytes @ 0x0
   947                           
   948                           
   949                           ; 1 bytes @ 0x0
   950  0039                     	ds	3
   951  003C                     DISP_Normal_Operation@tt:	
   952  003C                     DISP_Set_Hours_Operation@tt:	
   953                           ; 5 bytes @ 0x3
   954                           
   955  003C                     DISP_Set_Minutes_Operation@tt:	
   956                           ; 5 bytes @ 0x3
   957                           
   958                           
   959                           ; 5 bytes @ 0x3
   960  003C                     	ds	5
   961  0041                     ??_TMR0_ISR:	
   962                           
   963                           ; 1 bytes @ 0x8
   964  0041                     	ds	3
   965  0044                     ?_SSD_Set_Symbol:	
   966  0044                     ??_CLOCK_Init:	
   967                           ; 1 bytes @ 0xB
   968                           
   969  0044                     ??_TMR_Init:	
   970                           ; 1 bytes @ 0xB
   971                           
   972  0044                     ??_TMR_Start:	
   973                           ; 1 bytes @ 0xB
   974                           
   975  0044                     ?_GPIO_Init_Port:	
   976                           ; 1 bytes @ 0xB
   977                           
   978  0044                     ?_GPIO_Init_Pin:	
   979                           ; 1 bytes @ 0xB
   980                           
   981  0044                     SSD_Set_Symbol@index:	
   982                           ; 1 bytes @ 0xB
   983                           
   984  0044                     GPIO_Init_Port@DirRegAddress:	
   985                           ; 1 bytes @ 0xB
   986                           
   987  0044                     GPIO_Init_Pin@DirRegAddress:	
   988                           ; 2 bytes @ 0xB
   989                           
   990                           
   991                           ; 2 bytes @ 0xB
   992  0044                     	ds	1
   993  0045                     ??_SSD_Set_Symbol:	
   994                           
   995                           ; 1 bytes @ 0xC
   996  0045                     	ds	1
   997  0046                     GPIO_Init_Port@dir:	
   998  0046                     GPIO_Init_Pin@pin_number:	
   999                           ; 1 bytes @ 0xD
  1000                           
  1001  0046                     SSD_Set_Symbol@symbol:	
  1002                           ; 1 bytes @ 0xD
  1003                           
  1004                           
  1005                           ; 1 bytes @ 0xD
  1006  0046                     	ds	1
  1007  0047                     ??_GPIO_Init_Port:	
  1008  0047                     GPIO_Init_Pin@dir:	
  1009                           ; 1 bytes @ 0xE
  1010                           
  1011                           
  1012                           ; 1 bytes @ 0xE
  1013  0047                     	ds	1
  1014  0048                     ??_GPIO_Init_Pin:	
  1015                           
  1016                           ; 1 bytes @ 0xF
  1017  0048                     	ds	1
  1018  0049                     _GPIO_Init_Port$31:	
  1019                           
  1020                           ; 2 bytes @ 0x10
  1021  0049                     	ds	3
  1022  004C                     ??_SSD_Init:	
  1023  004C                     ??_SW_Init:	
  1024                           ; 1 bytes @ 0x13
  1025                           
  1026                           
  1027                           ; 1 bytes @ 0x13
  1028  004C                     	ds	1
  1029  004D                     ??_Disp_Init:	
  1030                           
  1031                           ; 1 bytes @ 0x14
  1032  004D                     	ds	1
  1033  004E                     ??_main:	
  1034                           
  1035                           ; 1 bytes @ 0x15
  1036  004E                     	ds	1
  1037                           
  1038                           	psect	maintext
  1039  05AB                     __pmaintext:	
  1040 ;;
  1041 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1042 ;;
  1043 ;; *************** function _main *****************
  1044 ;; Defined at:
  1045 ;;		line 18 in file "Digital_Clock.c"
  1046 ;; Parameters:    Size  Location     Type
  1047 ;;		None
  1048 ;; Auto vars:     Size  Location     Type
  1049 ;;  i               1    0        unsigned char 
  1050 ;; Return value:  Size  Location     Type
  1051 ;;                  1    wreg      void 
  1052 ;; Registers used:
  1053 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1054 ;; Tracked objects:
  1055 ;;		On entry : B00/0
  1056 ;;		On exit  : 0/0
  1057 ;;		Unchanged: 0/0
  1058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1059 ;;      Params:         0       0       0       0       0
  1060 ;;      Locals:         0       1       0       0       0
  1061 ;;      Temps:          0       1       0       0       0
  1062 ;;      Totals:         0       2       0       0       0
  1063 ;;Total ram usage:        2 bytes
  1064 ;; Hardware stack levels required when called:    8
  1065 ;; This function calls:
  1066 ;;		_CLOCK_Init
  1067 ;;		_Disp_Init
  1068 ;;		_SSD_Init
  1069 ;;		_SSD_Set_Symbol
  1070 ;;		_SW_Init
  1071 ;;		_TMR_Init
  1072 ;;		_TMR_Start
  1073 ;; This function is called by:
  1074 ;;		Startup code after reset
  1075 ;; This function uses a non-reentrant model
  1076 ;;
  1077                           
  1078                           
  1079                           ;psect for function _main
  1080  05AB                     _main:	
  1081  05AB                     l2010:	
  1082                           ;incstack = 0
  1083                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1084                           
  1085  05AB                     l2012:	
  1086                           
  1087                           ;Digital_Clock.c: 21:     SSD_Init();
  1088  05AB  120A  118A  24A1  120A  118A  	fcall	_SSD_Init
  1089  05B0                     l2014:	
  1090                           
  1091                           ;Digital_Clock.c: 22:     SW_Init();
  1092  05B0  120A  118A  25F8  120A  118A  	fcall	_SW_Init
  1093  05B5                     l2016:	
  1094                           
  1095                           ;Digital_Clock.c: 23:     Disp_Init();
  1096  05B5  120A  118A  2718  120A  118A  	fcall	_Disp_Init
  1097  05BA                     l2018:	
  1098                           
  1099                           ;Digital_Clock.c: 26:     SSD_Set_Symbol(i,SSD_MINUTES_UNITS);
  1100  05BA  1283               	bcf	3,5	;RP0=0, select bank0
  1101  05BB  1303               	bcf	3,6	;RP1=0, select bank0
  1102  05BC  01C4               	clrf	SSD_Set_Symbol@index
  1103  05BD  3000               	movlw	0
  1104  05BE  120A  158A  2787  120A  118A  	fcall	_SSD_Set_Symbol
  1105  05C3                     l2020:	
  1106                           
  1107                           ;Digital_Clock.c: 27:     SSD_Set_Symbol(2,SSD_MINUTES_TENS);
  1108  05C3  1283               	bcf	3,5	;RP0=0, select bank0
  1109  05C4  1303               	bcf	3,6	;RP1=0, select bank0
  1110  05C5  01C4               	clrf	SSD_Set_Symbol@index
  1111  05C6  0AC4               	incf	SSD_Set_Symbol@index,f
  1112  05C7  3002               	movlw	2
  1113  05C8  120A  158A  2787  120A  118A  	fcall	_SSD_Set_Symbol
  1114  05CD                     l2022:	
  1115                           
  1116                           ;Digital_Clock.c: 28:     SSD_Set_Symbol(3,SSD_HOURS_UNITS);
  1117  05CD  3002               	movlw	2
  1118  05CE  1283               	bcf	3,5	;RP0=0, select bank0
  1119  05CF  1303               	bcf	3,6	;RP1=0, select bank0
  1120  05D0  00CE               	movwf	??_main
  1121  05D1  084E               	movf	??_main,w
  1122  05D2  00C4               	movwf	SSD_Set_Symbol@index
  1123  05D3  3003               	movlw	3
  1124  05D4  120A  158A  2787  120A  118A  	fcall	_SSD_Set_Symbol
  1125  05D9                     l2024:	
  1126                           
  1127                           ;Digital_Clock.c: 29:     SSD_Set_Symbol(4,SSD_HOURS_TENS);
  1128  05D9  3003               	movlw	3
  1129  05DA  1283               	bcf	3,5	;RP0=0, select bank0
  1130  05DB  1303               	bcf	3,6	;RP1=0, select bank0
  1131  05DC  00CE               	movwf	??_main
  1132  05DD  084E               	movf	??_main,w
  1133  05DE  00C4               	movwf	SSD_Set_Symbol@index
  1134  05DF  3004               	movlw	4
  1135  05E0  120A  158A  2787  120A  118A  	fcall	_SSD_Set_Symbol
  1136  05E5                     l2026:	
  1137                           
  1138                           ;Digital_Clock.c: 32:     CLOCK_Init();
  1139  05E5  120A  158A  27BA  120A  118A  	fcall	_CLOCK_Init
  1140  05EA                     l2028:	
  1141                           
  1142                           ;Digital_Clock.c: 33:     TMR_Init();
  1143  05EA  120A  158A  275B  120A  118A  	fcall	_TMR_Init
  1144  05EF                     l2030:	
  1145                           
  1146                           ;Digital_Clock.c: 34:     TMR_Start();
  1147  05EF  120A  158A  277C  120A  118A  	fcall	_TMR_Start
  1148  05F4                     l43:	
  1149                           ;Digital_Clock.c: 37:     while(1)
  1150                           
  1151  05F4                     l44:	
  1152                           ;Digital_Clock.c: 38:     {;Digital_Clock.c: 39:     }
  1153                           
  1154  05F4  2DF4               	goto	l43
  1155  05F5  120A  118A  2810   	ljmp	start
  1156  05F8                     __end_of_main:	
  1157                           
  1158                           	psect	text1
  1159  0F7C                     __ptext1:	
  1160 ;; *************** function _TMR_Start *****************
  1161 ;; Defined at:
  1162 ;;		line 45 in file "Timer.c"
  1163 ;; Parameters:    Size  Location     Type
  1164 ;;		None
  1165 ;; Auto vars:     Size  Location     Type
  1166 ;;		None
  1167 ;; Return value:  Size  Location     Type
  1168 ;;                  1    wreg      void 
  1169 ;; Registers used:
  1170 ;;		wreg
  1171 ;; Tracked objects:
  1172 ;;		On entry : 0/0
  1173 ;;		On exit  : 0/0
  1174 ;;		Unchanged: 0/0
  1175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1176 ;;      Params:         0       0       0       0       0
  1177 ;;      Locals:         0       0       0       0       0
  1178 ;;      Temps:          0       0       0       0       0
  1179 ;;      Totals:         0       0       0       0       0
  1180 ;;Total ram usage:        0 bytes
  1181 ;; Hardware stack levels used:    1
  1182 ;; Hardware stack levels required when called:    5
  1183 ;; This function calls:
  1184 ;;		Nothing
  1185 ;; This function is called by:
  1186 ;;		_main
  1187 ;; This function uses a non-reentrant model
  1188 ;;
  1189                           
  1190                           
  1191                           ;psect for function _TMR_Start
  1192  0F7C                     _TMR_Start:	
  1193  0F7C                     l1898:	
  1194                           ;incstack = 0
  1195                           ; Regs used in _TMR_Start: [wreg]
  1196                           
  1197                           
  1198                           ;Timer.c: 48:     ((TMR0IF) = 0);
  1199  0F7C  110B               	bcf	11,2	;volatile
  1200  0F7D                     l1900:	
  1201                           
  1202                           ;Timer.c: 50:     ((TMR0) = 256 - (((5)) * 8));
  1203  0F7D  30D8               	movlw	216
  1204  0F7E  1283               	bcf	3,5	;RP0=0, select bank0
  1205  0F7F  1303               	bcf	3,6	;RP1=0, select bank0
  1206  0F80  0081               	movwf	1	;volatile
  1207  0F81                     l1902:	
  1208                           
  1209                           ;Timer.c: 52:     (TMR0IE = 1);
  1210  0F81  168B               	bsf	11,5	;volatile
  1211  0F82                     l1904:	
  1212                           
  1213                           ;Timer.c: 53:     (GIE = 1);
  1214  0F82  178B               	bsf	11,7	;volatile
  1215  0F83                     l1906:	
  1216                           
  1217                           ;Timer.c: 55:     (T0CS = 0);
  1218  0F83  1683               	bsf	3,5	;RP0=1, select bank1
  1219  0F84  1303               	bcf	3,6	;RP1=0, select bank1
  1220  0F85  1281               	bcf	1,5	;volatile
  1221  0F86                     l294:	
  1222  0F86  0008               	return
  1223  0F87                     __end_of_TMR_Start:	
  1224                           
  1225                           	psect	text2
  1226  0F5B                     __ptext2:	
  1227 ;; *************** function _TMR_Init *****************
  1228 ;; Defined at:
  1229 ;;		line 22 in file "Timer.c"
  1230 ;; Parameters:    Size  Location     Type
  1231 ;;		None
  1232 ;; Auto vars:     Size  Location     Type
  1233 ;;		None
  1234 ;; Return value:  Size  Location     Type
  1235 ;;                  1    wreg      void 
  1236 ;; Registers used:
  1237 ;;		None
  1238 ;; Tracked objects:
  1239 ;;		On entry : 0/0
  1240 ;;		On exit  : 0/0
  1241 ;;		Unchanged: 0/0
  1242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1243 ;;      Params:         0       0       0       0       0
  1244 ;;      Locals:         0       0       0       0       0
  1245 ;;      Temps:          0       0       0       0       0
  1246 ;;      Totals:         0       0       0       0       0
  1247 ;;Total ram usage:        0 bytes
  1248 ;; Hardware stack levels used:    1
  1249 ;; Hardware stack levels required when called:    5
  1250 ;; This function calls:
  1251 ;;		Nothing
  1252 ;; This function is called by:
  1253 ;;		_main
  1254 ;; This function uses a non-reentrant model
  1255 ;;
  1256                           
  1257                           
  1258                           ;psect for function _TMR_Init
  1259  0F5B                     _TMR_Init:	
  1260  0F5B                     l1896:	
  1261                           ;incstack = 0
  1262                           ; Regs used in _TMR_Init: []
  1263                           
  1264                           
  1265                           ;Timer.c: 26:     PS2 = 1; PS1 = 1; PS0 = 1;
  1266  0F5B  1683               	bsf	3,5	;RP0=1, select bank1
  1267  0F5C  1303               	bcf	3,6	;RP1=0, select bank1
  1268  0F5D  1501               	bsf	1,2	;volatile
  1269  0F5E  1481               	bsf	1,1	;volatile
  1270  0F5F  1401               	bsf	1,0	;volatile
  1271                           
  1272                           ;Timer.c: 28:     (T0CS = 1);
  1273  0F60  1681               	bsf	1,5	;volatile
  1274  0F61                     l286:	
  1275  0F61  0008               	return
  1276  0F62                     __end_of_TMR_Init:	
  1277                           
  1278                           	psect	text3
  1279  05F8                     __ptext3:	
  1280 ;; *************** function _SW_Init *****************
  1281 ;; Defined at:
  1282 ;;		line 55 in file "SW.c"
  1283 ;; Parameters:    Size  Location     Type
  1284 ;;		None
  1285 ;; Auto vars:     Size  Location     Type
  1286 ;;		None
  1287 ;; Return value:  Size  Location     Type
  1288 ;;                  1    wreg      void 
  1289 ;; Registers used:
  1290 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1291 ;; Tracked objects:
  1292 ;;		On entry : 0/0
  1293 ;;		On exit  : 0/0
  1294 ;;		Unchanged: 0/0
  1295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1296 ;;      Params:         0       0       0       0       0
  1297 ;;      Locals:         0       0       0       0       0
  1298 ;;      Temps:          0       1       0       0       0
  1299 ;;      Totals:         0       1       0       0       0
  1300 ;;Total ram usage:        1 bytes
  1301 ;; Hardware stack levels used:    1
  1302 ;; Hardware stack levels required when called:    6
  1303 ;; This function calls:
  1304 ;;		_GPIO_Init_Pin
  1305 ;; This function is called by:
  1306 ;;		_main
  1307 ;; This function uses a non-reentrant model
  1308 ;;
  1309                           
  1310                           
  1311                           ;psect for function _SW_Init
  1312  05F8                     _SW_Init:	
  1313  05F8                     l1864:	
  1314                           ;incstack = 0
  1315                           ; Regs used in _SW_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1316                           
  1317                           
  1318                           ;SW.c: 59:     GPIO_Init_Pin(&(TRISB),(0),(1));
  1319  05F8  3086               	movlw	134
  1320  05F9  1283               	bcf	3,5	;RP0=0, select bank0
  1321  05FA  1303               	bcf	3,6	;RP1=0, select bank0
  1322  05FB  00C4               	movwf	GPIO_Init_Pin@DirRegAddress
  1323  05FC  3000               	movlw	0
  1324  05FD  00C5               	movwf	GPIO_Init_Pin@DirRegAddress+1
  1325  05FE  01C6               	clrf	GPIO_Init_Pin@pin_number
  1326  05FF  01C7               	clrf	GPIO_Init_Pin@dir
  1327  0600  0AC7               	incf	GPIO_Init_Pin@dir,f
  1328  0601  120A  118A  22F7  120A  118A  	fcall	_GPIO_Init_Pin
  1329  0606                     l1866:	
  1330                           
  1331                           ;SW.c: 60:     SW_DATA[SW_PLUS].state = SW_RELEASED;
  1332  0606  1283               	bcf	3,5	;RP0=0, select bank0
  1333  0607  1303               	bcf	3,6	;RP1=0, select bank0
  1334  0608  01A2               	clrf	_SW_DATA+2
  1335  0609                     l1868:	
  1336                           
  1337                           ;SW.c: 61:     SW_DATA[SW_PLUS].samples[0] = (1);
  1338  0609  01A0               	clrf	_SW_DATA
  1339  060A  0AA0               	incf	_SW_DATA,f
  1340  060B                     l1870:	
  1341                           
  1342                           ;SW.c: 62:     SW_DATA[SW_PLUS].samples[1] = (1);
  1343  060B  01A1               	clrf	_SW_DATA+1
  1344  060C  0AA1               	incf	_SW_DATA+1,f
  1345  060D                     l1872:	
  1346                           
  1347                           ;SW.c: 64:     GPIO_Init_Pin(&(TRISB),(1),(1));
  1348  060D  3086               	movlw	134
  1349  060E  00C4               	movwf	GPIO_Init_Pin@DirRegAddress
  1350  060F  3000               	movlw	0
  1351  0610  00C5               	movwf	GPIO_Init_Pin@DirRegAddress+1
  1352  0611  01C6               	clrf	GPIO_Init_Pin@pin_number
  1353  0612  0AC6               	incf	GPIO_Init_Pin@pin_number,f
  1354  0613  01C7               	clrf	GPIO_Init_Pin@dir
  1355  0614  0AC7               	incf	GPIO_Init_Pin@dir,f
  1356  0615  120A  118A  22F7  120A  118A  	fcall	_GPIO_Init_Pin
  1357                           
  1358                           ;SW.c: 65:     SW_DATA[SW_MINUS].state = SW_RELEASED;
  1359  061A  1283               	bcf	3,5	;RP0=0, select bank0
  1360  061B  1303               	bcf	3,6	;RP1=0, select bank0
  1361  061C  01A5               	clrf	_SW_DATA+5
  1362  061D                     l1874:	
  1363                           
  1364                           ;SW.c: 66:     SW_DATA[SW_MINUS].samples[0] = (1);
  1365  061D  01A3               	clrf	_SW_DATA+3
  1366  061E  0AA3               	incf	_SW_DATA+3,f
  1367  061F                     l1876:	
  1368                           
  1369                           ;SW.c: 67:     SW_DATA[SW_MINUS].samples[1] = (1);
  1370  061F  01A4               	clrf	_SW_DATA+4
  1371  0620  0AA4               	incf	_SW_DATA+4,f
  1372  0621                     l1878:	
  1373                           
  1374                           ;SW.c: 69:     GPIO_Init_Pin(&(TRISB),(2),(1));
  1375  0621  3086               	movlw	134
  1376  0622  00C4               	movwf	GPIO_Init_Pin@DirRegAddress
  1377  0623  3000               	movlw	0
  1378  0624  00C5               	movwf	GPIO_Init_Pin@DirRegAddress+1
  1379  0625  3002               	movlw	2
  1380  0626  00CC               	movwf	??_SW_Init
  1381  0627  084C               	movf	??_SW_Init,w
  1382  0628  00C6               	movwf	GPIO_Init_Pin@pin_number
  1383  0629  01C7               	clrf	GPIO_Init_Pin@dir
  1384  062A  0AC7               	incf	GPIO_Init_Pin@dir,f
  1385  062B  120A  118A  22F7  120A  118A  	fcall	_GPIO_Init_Pin
  1386  0630                     l1880:	
  1387                           
  1388                           ;SW.c: 70:     SW_DATA[SW_SET].state = SW_RELEASED;
  1389  0630  1283               	bcf	3,5	;RP0=0, select bank0
  1390  0631  1303               	bcf	3,6	;RP1=0, select bank0
  1391  0632  01A8               	clrf	_SW_DATA+8
  1392  0633                     l1882:	
  1393                           
  1394                           ;SW.c: 71:     SW_DATA[SW_SET].samples[0] = (1);
  1395  0633  01A6               	clrf	_SW_DATA+6
  1396  0634  0AA6               	incf	_SW_DATA+6,f
  1397  0635                     l1884:	
  1398                           
  1399                           ;SW.c: 72:     SW_DATA[SW_SET].samples[1] = (1);
  1400  0635  01A7               	clrf	_SW_DATA+7
  1401  0636  0AA7               	incf	_SW_DATA+7,f
  1402  0637                     l128:	
  1403  0637  0008               	return
  1404  0638                     __end_of_SW_Init:	
  1405                           
  1406                           	psect	text4
  1407  0718                     __ptext4:	
  1408 ;; *************** function _Disp_Init *****************
  1409 ;; Defined at:
  1410 ;;		line 49 in file "Disp.c"
  1411 ;; Parameters:    Size  Location     Type
  1412 ;;		None
  1413 ;; Auto vars:     Size  Location     Type
  1414 ;;		None
  1415 ;; Return value:  Size  Location     Type
  1416 ;;                  1    wreg      void 
  1417 ;; Registers used:
  1418 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1419 ;; Tracked objects:
  1420 ;;		On entry : 0/0
  1421 ;;		On exit  : 0/0
  1422 ;;		Unchanged: 0/0
  1423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1424 ;;      Params:         0       0       0       0       0
  1425 ;;      Locals:         0       0       0       0       0
  1426 ;;      Temps:          0       1       0       0       0
  1427 ;;      Totals:         0       1       0       0       0
  1428 ;;Total ram usage:        1 bytes
  1429 ;; Hardware stack levels used:    1
  1430 ;; Hardware stack levels required when called:    7
  1431 ;; This function calls:
  1432 ;;		_SSD_Init
  1433 ;;		_SSD_Set_Symbol
  1434 ;; This function is called by:
  1435 ;;		_main
  1436 ;; This function uses a non-reentrant model
  1437 ;;
  1438                           
  1439                           
  1440                           ;psect for function _Disp_Init
  1441  0718                     _Disp_Init:	
  1442  0718                     l1886:	
  1443                           ;incstack = 0
  1444                           ; Regs used in _Disp_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1445                           
  1446                           
  1447                           ;Disp.c: 52:     SSD_Init();
  1448  0718  120A  118A  24A1  120A  118A  	fcall	_SSD_Init
  1449                           
  1450                           ;Disp.c: 54:     SSD_Set_Symbol(SSD_0,SSD_MINUTES_UNITS);
  1451  071D  1283               	bcf	3,5	;RP0=0, select bank0
  1452  071E  1303               	bcf	3,6	;RP1=0, select bank0
  1453  071F  01C4               	clrf	SSD_Set_Symbol@index
  1454  0720  3000               	movlw	0
  1455  0721  120A  158A  2787  120A  118A  	fcall	_SSD_Set_Symbol
  1456                           
  1457                           ;Disp.c: 55:     SSD_Set_Symbol(SSD_0,SSD_MINUTES_TENS);
  1458  0726  1283               	bcf	3,5	;RP0=0, select bank0
  1459  0727  1303               	bcf	3,6	;RP1=0, select bank0
  1460  0728  01C4               	clrf	SSD_Set_Symbol@index
  1461  0729  0AC4               	incf	SSD_Set_Symbol@index,f
  1462  072A  3000               	movlw	0
  1463  072B  120A  158A  2787  120A  118A  	fcall	_SSD_Set_Symbol
  1464                           
  1465                           ;Disp.c: 56:     SSD_Set_Symbol(SSD_0,SSD_HOURS_UNITS);
  1466  0730  3002               	movlw	2
  1467  0731  1283               	bcf	3,5	;RP0=0, select bank0
  1468  0732  1303               	bcf	3,6	;RP1=0, select bank0
  1469  0733  00CD               	movwf	??_Disp_Init
  1470  0734  084D               	movf	??_Disp_Init,w
  1471  0735  00C4               	movwf	SSD_Set_Symbol@index
  1472  0736  3000               	movlw	0
  1473  0737  120A  158A  2787  120A  118A  	fcall	_SSD_Set_Symbol
  1474                           
  1475                           ;Disp.c: 57:     SSD_Set_Symbol(SSD_0,SSD_HOURS_TENS);
  1476  073C  3003               	movlw	3
  1477  073D  1283               	bcf	3,5	;RP0=0, select bank0
  1478  073E  1303               	bcf	3,6	;RP1=0, select bank0
  1479  073F  00CD               	movwf	??_Disp_Init
  1480  0740  084D               	movf	??_Disp_Init,w
  1481  0741  00C4               	movwf	SSD_Set_Symbol@index
  1482  0742  3000               	movlw	0
  1483  0743  120A  158A  2787  120A  118A  	fcall	_SSD_Set_Symbol
  1484  0748                     l1888:	
  1485                           
  1486                           ;Disp.c: 59:     Disp_Blink_counter = 0;
  1487  0748  1283               	bcf	3,5	;RP0=0, select bank0
  1488  0749  1303               	bcf	3,6	;RP1=0, select bank0
  1489  074A  01AF               	clrf	_Disp_Blink_counter
  1490  074B                     l230:	
  1491  074B  0008               	return
  1492  074C                     __end_of_Disp_Init:	
  1493                           
  1494                           	psect	text5
  1495  0F87                     __ptext5:	
  1496 ;; *************** function _SSD_Set_Symbol *****************
  1497 ;; Defined at:
  1498 ;;		line 87 in file "SSD.c"
  1499 ;; Parameters:    Size  Location     Type
  1500 ;;  symbol          1    wreg     enum E859
  1501 ;;  index           1   11[BANK0 ] enum E872
  1502 ;; Auto vars:     Size  Location     Type
  1503 ;;  symbol          1   13[BANK0 ] enum E859
  1504 ;; Return value:  Size  Location     Type
  1505 ;;                  1    wreg      void 
  1506 ;; Registers used:
  1507 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1508 ;; Tracked objects:
  1509 ;;		On entry : 0/0
  1510 ;;		On exit  : 0/0
  1511 ;;		Unchanged: 0/0
  1512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1513 ;;      Params:         0       1       0       0       0
  1514 ;;      Locals:         0       1       0       0       0
  1515 ;;      Temps:          0       1       0       0       0
  1516 ;;      Totals:         0       3       0       0       0
  1517 ;;Total ram usage:        3 bytes
  1518 ;; Hardware stack levels used:    1
  1519 ;; Hardware stack levels required when called:    5
  1520 ;; This function calls:
  1521 ;;		Nothing
  1522 ;; This function is called by:
  1523 ;;		_main
  1524 ;;		_Disp_Init
  1525 ;; This function uses a non-reentrant model
  1526 ;;
  1527                           
  1528                           
  1529                           ;psect for function _SSD_Set_Symbol
  1530  0F87                     _SSD_Set_Symbol:	
  1531                           
  1532                           ;incstack = 0
  1533                           ; Regs used in _SSD_Set_Symbol: [wreg-fsr0h+status,2+status,0]
  1534                           ;SSD_Set_Symbol@symbol stored from wreg
  1535  0F87  1283               	bcf	3,5	;RP0=0, select bank0
  1536  0F88  1303               	bcf	3,6	;RP1=0, select bank0
  1537  0F89  00C6               	movwf	SSD_Set_Symbol@symbol
  1538  0F8A                     l1702:	
  1539                           
  1540                           ;SSD.c: 87: void SSD_Set_Symbol(SSD_Symbol_t symbol,SSD_t index);SSD.c: 88: {;SSD.c: 90:
      +                               Buffer[index] = symbol;
  1541  0F8A  0846               	movf	SSD_Set_Symbol@symbol,w
  1542  0F8B  00C5               	movwf	??_SSD_Set_Symbol
  1543  0F8C  0844               	movf	SSD_Set_Symbol@index,w
  1544  0F8D  3E29               	addlw	(low (_Buffer| 0))& (0+255)
  1545  0F8E  0084               	movwf	4
  1546  0F8F  0845               	movf	??_SSD_Set_Symbol,w
  1547  0F90  1383               	bcf	3,7	;select IRP bank0
  1548  0F91  0080               	movwf	0
  1549  0F92                     l78:	
  1550  0F92  0008               	return
  1551  0F93                     __end_of_SSD_Set_Symbol:	
  1552                           
  1553                           	psect	text6
  1554  04A1                     __ptext6:	
  1555 ;; *************** function _SSD_Init *****************
  1556 ;; Defined at:
  1557 ;;		line 62 in file "SSD.c"
  1558 ;; Parameters:    Size  Location     Type
  1559 ;;		None
  1560 ;; Auto vars:     Size  Location     Type
  1561 ;;		None
  1562 ;; Return value:  Size  Location     Type
  1563 ;;                  1    wreg      void 
  1564 ;; Registers used:
  1565 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1566 ;; Tracked objects:
  1567 ;;		On entry : 0/0
  1568 ;;		On exit  : 0/0
  1569 ;;		Unchanged: 0/0
  1570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1571 ;;      Params:         0       0       0       0       0
  1572 ;;      Locals:         0       0       0       0       0
  1573 ;;      Temps:          0       1       0       0       0
  1574 ;;      Totals:         0       1       0       0       0
  1575 ;;Total ram usage:        1 bytes
  1576 ;; Hardware stack levels used:    1
  1577 ;; Hardware stack levels required when called:    6
  1578 ;; This function calls:
  1579 ;;		_GPIO_Init_Pin
  1580 ;;		_GPIO_Init_Port
  1581 ;; This function is called by:
  1582 ;;		_main
  1583 ;;		_Disp_Init
  1584 ;; This function uses a non-reentrant model
  1585 ;;
  1586                           
  1587                           
  1588                           ;psect for function _SSD_Init
  1589  04A1                     _SSD_Init:	
  1590  04A1                     l1688:	
  1591                           ;incstack = 0
  1592                           ; Regs used in _SSD_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1593                           
  1594                           
  1595                           ;SSD.c: 65:     GPIO_Init_Port(&(TRISD),(0));
  1596  04A1  3088               	movlw	136
  1597  04A2  1283               	bcf	3,5	;RP0=0, select bank0
  1598  04A3  1303               	bcf	3,6	;RP1=0, select bank0
  1599  04A4  00C4               	movwf	GPIO_Init_Port@DirRegAddress
  1600  04A5  3000               	movlw	0
  1601  04A6  00C5               	movwf	GPIO_Init_Port@DirRegAddress+1
  1602  04A7  01C6               	clrf	GPIO_Init_Port@dir
  1603  04A8  120A  118A  243D  120A  118A  	fcall	_GPIO_Init_Port
  1604                           
  1605                           ;SSD.c: 68:     GPIO_Init_Pin(&(TRISB),(4),(0));
  1606  04AD  3086               	movlw	134
  1607  04AE  1283               	bcf	3,5	;RP0=0, select bank0
  1608  04AF  1303               	bcf	3,6	;RP1=0, select bank0
  1609  04B0  00C4               	movwf	GPIO_Init_Pin@DirRegAddress
  1610  04B1  3000               	movlw	0
  1611  04B2  00C5               	movwf	GPIO_Init_Pin@DirRegAddress+1
  1612  04B3  3004               	movlw	4
  1613  04B4  00CC               	movwf	??_SSD_Init
  1614  04B5  084C               	movf	??_SSD_Init,w
  1615  04B6  00C6               	movwf	GPIO_Init_Pin@pin_number
  1616  04B7  01C7               	clrf	GPIO_Init_Pin@dir
  1617  04B8  120A  118A  22F7  120A  118A  	fcall	_GPIO_Init_Pin
  1618  04BD                     l1690:	
  1619                           
  1620                           ;SSD.c: 69:     (((PORTB))=((PORTB) & ~(1<<(4)))|(SSD_OFF<<(4)));
  1621  04BD  1283               	bcf	3,5	;RP0=0, select bank0
  1622  04BE  1303               	bcf	3,6	;RP1=0, select bank0
  1623  04BF  0806               	movf	6,w	;volatile
  1624  04C0  39EF               	andlw	239
  1625  04C1  0086               	movwf	6	;volatile
  1626  04C2                     l1692:	
  1627                           
  1628                           ;SSD.c: 71:     GPIO_Init_Pin(&(TRISB),(5),(0));
  1629  04C2  3086               	movlw	134
  1630  04C3  00C4               	movwf	GPIO_Init_Pin@DirRegAddress
  1631  04C4  3000               	movlw	0
  1632  04C5  00C5               	movwf	GPIO_Init_Pin@DirRegAddress+1
  1633  04C6  3005               	movlw	5
  1634  04C7  00CC               	movwf	??_SSD_Init
  1635  04C8  084C               	movf	??_SSD_Init,w
  1636  04C9  00C6               	movwf	GPIO_Init_Pin@pin_number
  1637  04CA  01C7               	clrf	GPIO_Init_Pin@dir
  1638  04CB  120A  118A  22F7  120A  118A  	fcall	_GPIO_Init_Pin
  1639                           
  1640                           ;SSD.c: 72:     (((PORTB))=((PORTB) & ~(1<<(5)))|(SSD_OFF<<(5)));
  1641  04D0  1283               	bcf	3,5	;RP0=0, select bank0
  1642  04D1  1303               	bcf	3,6	;RP1=0, select bank0
  1643  04D2  0806               	movf	6,w	;volatile
  1644  04D3  39DF               	andlw	223
  1645  04D4  0086               	movwf	6	;volatile
  1646  04D5                     l1694:	
  1647                           
  1648                           ;SSD.c: 74:     GPIO_Init_Pin(&(TRISB),(6),(0));
  1649  04D5  3086               	movlw	134
  1650  04D6  00C4               	movwf	GPIO_Init_Pin@DirRegAddress
  1651  04D7  3000               	movlw	0
  1652  04D8  00C5               	movwf	GPIO_Init_Pin@DirRegAddress+1
  1653  04D9  3006               	movlw	6
  1654  04DA  00CC               	movwf	??_SSD_Init
  1655  04DB  084C               	movf	??_SSD_Init,w
  1656  04DC  00C6               	movwf	GPIO_Init_Pin@pin_number
  1657  04DD  01C7               	clrf	GPIO_Init_Pin@dir
  1658  04DE  120A  118A  22F7  120A  118A  	fcall	_GPIO_Init_Pin
  1659  04E3                     l1696:	
  1660                           
  1661                           ;SSD.c: 75:     (((PORTB))=((PORTB) & ~(1<<(6)))|(SSD_OFF<<(6)));
  1662  04E3  1283               	bcf	3,5	;RP0=0, select bank0
  1663  04E4  1303               	bcf	3,6	;RP1=0, select bank0
  1664  04E5  0806               	movf	6,w	;volatile
  1665  04E6  39BF               	andlw	191
  1666  04E7  0086               	movwf	6	;volatile
  1667                           
  1668                           ;SSD.c: 77:     GPIO_Init_Pin(&(TRISB),(7),(0));
  1669  04E8  3086               	movlw	134
  1670  04E9  00C4               	movwf	GPIO_Init_Pin@DirRegAddress
  1671  04EA  3000               	movlw	0
  1672  04EB  00C5               	movwf	GPIO_Init_Pin@DirRegAddress+1
  1673  04EC  3007               	movlw	7
  1674  04ED  00CC               	movwf	??_SSD_Init
  1675  04EE  084C               	movf	??_SSD_Init,w
  1676  04EF  00C6               	movwf	GPIO_Init_Pin@pin_number
  1677  04F0  01C7               	clrf	GPIO_Init_Pin@dir
  1678  04F1  120A  118A  22F7  120A  118A  	fcall	_GPIO_Init_Pin
  1679  04F6                     l1698:	
  1680                           
  1681                           ;SSD.c: 78:     (((PORTB))=((PORTB) & ~(1<<(7)))|(SSD_OFF<<(7)));
  1682  04F6  1283               	bcf	3,5	;RP0=0, select bank0
  1683  04F7  1303               	bcf	3,6	;RP1=0, select bank0
  1684  04F8  0806               	movf	6,w	;volatile
  1685  04F9  397F               	andlw	127
  1686  04FA  0086               	movwf	6	;volatile
  1687  04FB                     l1700:	
  1688                           
  1689                           ;SSD.c: 81:     Second_Dot_State = SSD_OFF;
  1690  04FB  01B2               	clrf	_Second_Dot_State
  1691  04FC                     l75:	
  1692  04FC  0008               	return
  1693  04FD                     __end_of_SSD_Init:	
  1694                           
  1695                           	psect	text7
  1696  043D                     __ptext7:	
  1697 ;; *************** function _GPIO_Init_Port *****************
  1698 ;; Defined at:
  1699 ;;		line 14 in file "GPIO.c"
  1700 ;; Parameters:    Size  Location     Type
  1701 ;;  DirRegAddres    2   11[BANK0 ] PTR unsigned char 
  1702 ;;		 -> TRISD(1), 
  1703 ;;  dir             1   13[BANK0 ] unsigned char 
  1704 ;; Auto vars:     Size  Location     Type
  1705 ;;  ret             1    0        unsigned char 
  1706 ;; Return value:  Size  Location     Type
  1707 ;;                  1    wreg      unsigned char 
  1708 ;; Registers used:
  1709 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1710 ;; Tracked objects:
  1711 ;;		On entry : 0/0
  1712 ;;		On exit  : 0/0
  1713 ;;		Unchanged: 0/0
  1714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1715 ;;      Params:         0       3       0       0       0
  1716 ;;      Locals:         0       3       0       0       0
  1717 ;;      Temps:          0       1       0       0       0
  1718 ;;      Totals:         0       7       0       0       0
  1719 ;;Total ram usage:        7 bytes
  1720 ;; Hardware stack levels used:    1
  1721 ;; Hardware stack levels required when called:    5
  1722 ;; This function calls:
  1723 ;;		Nothing
  1724 ;; This function is called by:
  1725 ;;		_SSD_Init
  1726 ;; This function uses a non-reentrant model
  1727 ;;
  1728                           
  1729                           
  1730                           ;psect for function _GPIO_Init_Port
  1731  043D                     _GPIO_Init_Port:	
  1732  043D                     l1544:	
  1733                           ;incstack = 0
  1734                           ; Regs used in _GPIO_Init_Port: [wreg-fsr0h+status,2+status,0]
  1735                           
  1736  043D                     l1546:	
  1737                           
  1738                           ;GPIO.c: 18:     if(*DirRegAddress != (TRISA) && *DirRegAddress != (TRISB) &&
  1739  043D  1283               	bcf	3,5	;RP0=0, select bank0
  1740  043E  1303               	bcf	3,6	;RP1=0, select bank0
  1741  043F  0844               	movf	GPIO_Init_Port@DirRegAddress,w
  1742  0440  0084               	movwf	4
  1743  0441  1783               	bsf	3,7
  1744  0442  1C45               	btfss	GPIO_Init_Port@DirRegAddress+1,0
  1745  0443  1383               	bcf	3,7
  1746  0444  0800               	movf	0,w
  1747  0445  1683               	bsf	3,5	;RP0=1, select bank1
  1748  0446  1303               	bcf	3,6	;RP1=0, select bank1
  1749  0447  0605               	xorwf	5,w	;volatile
  1750  0448  1903               	skipnz
  1751  0449  2C4B               	goto	u711
  1752  044A  2C4C               	goto	u710
  1753  044B                     u711:	
  1754  044B  2C89               	goto	l1558
  1755  044C                     u710:	
  1756  044C                     l1548:	
  1757  044C  1283               	bcf	3,5	;RP0=0, select bank0
  1758  044D  1303               	bcf	3,6	;RP1=0, select bank0
  1759  044E  0844               	movf	GPIO_Init_Port@DirRegAddress,w
  1760  044F  0084               	movwf	4
  1761  0450  1783               	bsf	3,7
  1762  0451  1C45               	btfss	GPIO_Init_Port@DirRegAddress+1,0
  1763  0452  1383               	bcf	3,7
  1764  0453  0800               	movf	0,w
  1765  0454  1683               	bsf	3,5	;RP0=1, select bank1
  1766  0455  1303               	bcf	3,6	;RP1=0, select bank1
  1767  0456  0606               	xorwf	6,w	;volatile
  1768  0457  1903               	skipnz
  1769  0458  2C5A               	goto	u721
  1770  0459  2C5B               	goto	u720
  1771  045A                     u721:	
  1772  045A  2C89               	goto	l1558
  1773  045B                     u720:	
  1774  045B                     l1550:	
  1775  045B  1283               	bcf	3,5	;RP0=0, select bank0
  1776  045C  1303               	bcf	3,6	;RP1=0, select bank0
  1777  045D  0844               	movf	GPIO_Init_Port@DirRegAddress,w
  1778  045E  0084               	movwf	4
  1779  045F  1783               	bsf	3,7
  1780  0460  1C45               	btfss	GPIO_Init_Port@DirRegAddress+1,0
  1781  0461  1383               	bcf	3,7
  1782  0462  0800               	movf	0,w
  1783  0463  1683               	bsf	3,5	;RP0=1, select bank1
  1784  0464  1303               	bcf	3,6	;RP1=0, select bank1
  1785  0465  0607               	xorwf	7,w	;volatile
  1786  0466  1903               	skipnz
  1787  0467  2C69               	goto	u731
  1788  0468  2C6A               	goto	u730
  1789  0469                     u731:	
  1790  0469  2C89               	goto	l1558
  1791  046A                     u730:	
  1792  046A                     l1552:	
  1793  046A  1283               	bcf	3,5	;RP0=0, select bank0
  1794  046B  1303               	bcf	3,6	;RP1=0, select bank0
  1795  046C  0844               	movf	GPIO_Init_Port@DirRegAddress,w
  1796  046D  0084               	movwf	4
  1797  046E  1783               	bsf	3,7
  1798  046F  1C45               	btfss	GPIO_Init_Port@DirRegAddress+1,0
  1799  0470  1383               	bcf	3,7
  1800  0471  0800               	movf	0,w
  1801  0472  1683               	bsf	3,5	;RP0=1, select bank1
  1802  0473  1303               	bcf	3,6	;RP1=0, select bank1
  1803  0474  0608               	xorwf	8,w	;volatile
  1804  0475  1903               	skipnz
  1805  0476  2C78               	goto	u741
  1806  0477  2C79               	goto	u740
  1807  0478                     u741:	
  1808  0478  2C89               	goto	l1558
  1809  0479                     u740:	
  1810  0479                     l1554:	
  1811  0479  1283               	bcf	3,5	;RP0=0, select bank0
  1812  047A  1303               	bcf	3,6	;RP1=0, select bank0
  1813  047B  0844               	movf	GPIO_Init_Port@DirRegAddress,w
  1814  047C  0084               	movwf	4
  1815  047D  1783               	bsf	3,7
  1816  047E  1C45               	btfss	GPIO_Init_Port@DirRegAddress+1,0
  1817  047F  1383               	bcf	3,7
  1818  0480  0800               	movf	0,w
  1819  0481  1683               	bsf	3,5	;RP0=1, select bank1
  1820  0482  1303               	bcf	3,6	;RP1=0, select bank1
  1821  0483  0609               	xorwf	9,w	;volatile
  1822  0484  1903               	skipnz
  1823  0485  2C87               	goto	u751
  1824  0486  2C88               	goto	u750
  1825  0487                     u751:	
  1826  0487  2C89               	goto	l1558
  1827  0488                     u750:	
  1828  0488                     l1556:	
  1829                           
  1830                           ;GPIO.c: 24:     }
  1831  0488  2CA0               	goto	l19
  1832  0489                     l1558:	
  1833                           
  1834                           ;GPIO.c: 26:     {;GPIO.c: 27:         ((*DirRegAddress)=(dir)?(~0):(0));
  1835  0489  1283               	bcf	3,5	;RP0=0, select bank0
  1836  048A  1303               	bcf	3,6	;RP1=0, select bank0
  1837  048B  0846               	movf	GPIO_Init_Port@dir,w
  1838  048C  1D03               	btfss	3,2
  1839  048D  2C8F               	goto	u761
  1840  048E  2C90               	goto	u760
  1841  048F                     u761:	
  1842  048F  2C93               	goto	l1562
  1843  0490                     u760:	
  1844  0490                     l1560:	
  1845  0490  01C9               	clrf	_GPIO_Init_Port$31
  1846  0491  01CA               	clrf	_GPIO_Init_Port$31+1
  1847  0492  2C97               	goto	l1564
  1848  0493                     l1562:	
  1849  0493  30FF               	movlw	255
  1850  0494  00C9               	movwf	_GPIO_Init_Port$31
  1851  0495  30FF               	movlw	255
  1852  0496  00CA               	movwf	_GPIO_Init_Port$31+1
  1853  0497                     l1564:	
  1854  0497  0849               	movf	_GPIO_Init_Port$31,w
  1855  0498  00C7               	movwf	??_GPIO_Init_Port
  1856  0499  0844               	movf	GPIO_Init_Port@DirRegAddress,w
  1857  049A  0084               	movwf	4
  1858  049B  1783               	bsf	3,7
  1859  049C  1C45               	btfss	GPIO_Init_Port@DirRegAddress+1,0
  1860  049D  1383               	bcf	3,7
  1861  049E  0847               	movf	??_GPIO_Init_Port,w
  1862  049F  0080               	movwf	0
  1863  04A0                     l19:	
  1864  04A0  0008               	return
  1865  04A1                     __end_of_GPIO_Init_Port:	
  1866                           
  1867                           	psect	text8
  1868  02F7                     __ptext8:	
  1869 ;; *************** function _GPIO_Init_Pin *****************
  1870 ;; Defined at:
  1871 ;;		line 34 in file "GPIO.c"
  1872 ;; Parameters:    Size  Location     Type
  1873 ;;  DirRegAddres    2   11[BANK0 ] PTR unsigned char 
  1874 ;;		 -> TRISB(1), 
  1875 ;;  pin_number      1   13[BANK0 ] unsigned char 
  1876 ;;  dir             1   14[BANK0 ] unsigned char 
  1877 ;; Auto vars:     Size  Location     Type
  1878 ;;  ret             1    0        unsigned char 
  1879 ;; Return value:  Size  Location     Type
  1880 ;;                  1    wreg      unsigned char 
  1881 ;; Registers used:
  1882 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1883 ;; Tracked objects:
  1884 ;;		On entry : 0/0
  1885 ;;		On exit  : 0/0
  1886 ;;		Unchanged: 0/0
  1887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1888 ;;      Params:         0       4       0       0       0
  1889 ;;      Locals:         0       1       0       0       0
  1890 ;;      Temps:          0       3       0       0       0
  1891 ;;      Totals:         0       8       0       0       0
  1892 ;;Total ram usage:        8 bytes
  1893 ;; Hardware stack levels used:    1
  1894 ;; Hardware stack levels required when called:    5
  1895 ;; This function calls:
  1896 ;;		Nothing
  1897 ;; This function is called by:
  1898 ;;		_SSD_Init
  1899 ;;		_SW_Init
  1900 ;; This function uses a non-reentrant model
  1901 ;;
  1902                           
  1903                           
  1904                           ;psect for function _GPIO_Init_Pin
  1905  02F7                     _GPIO_Init_Pin:	
  1906  02F7                     l1568:	
  1907                           ;incstack = 0
  1908                           ; Regs used in _GPIO_Init_Pin: [wreg-fsr0h+status,2+status,0]
  1909                           
  1910  02F7                     l1570:	
  1911                           
  1912                           ;GPIO.c: 38:     if(*DirRegAddress != (TRISA) && *DirRegAddress != (TRISB) &&
  1913  02F7  1283               	bcf	3,5	;RP0=0, select bank0
  1914  02F8  1303               	bcf	3,6	;RP1=0, select bank0
  1915  02F9  0844               	movf	GPIO_Init_Pin@DirRegAddress,w
  1916  02FA  0084               	movwf	4
  1917  02FB  1783               	bsf	3,7
  1918  02FC  1C45               	btfss	GPIO_Init_Pin@DirRegAddress+1,0
  1919  02FD  1383               	bcf	3,7
  1920  02FE  0800               	movf	0,w
  1921  02FF  1683               	bsf	3,5	;RP0=1, select bank1
  1922  0300  1303               	bcf	3,6	;RP1=0, select bank1
  1923  0301  0605               	xorwf	5,w	;volatile
  1924  0302  1903               	skipnz
  1925  0303  2B05               	goto	u771
  1926  0304  2B06               	goto	u770
  1927  0305                     u771:	
  1928  0305  2B43               	goto	l1582
  1929  0306                     u770:	
  1930  0306                     l1572:	
  1931  0306  1283               	bcf	3,5	;RP0=0, select bank0
  1932  0307  1303               	bcf	3,6	;RP1=0, select bank0
  1933  0308  0844               	movf	GPIO_Init_Pin@DirRegAddress,w
  1934  0309  0084               	movwf	4
  1935  030A  1783               	bsf	3,7
  1936  030B  1C45               	btfss	GPIO_Init_Pin@DirRegAddress+1,0
  1937  030C  1383               	bcf	3,7
  1938  030D  0800               	movf	0,w
  1939  030E  1683               	bsf	3,5	;RP0=1, select bank1
  1940  030F  1303               	bcf	3,6	;RP1=0, select bank1
  1941  0310  0606               	xorwf	6,w	;volatile
  1942  0311  1903               	skipnz
  1943  0312  2B14               	goto	u781
  1944  0313  2B15               	goto	u780
  1945  0314                     u781:	
  1946  0314  2B43               	goto	l1582
  1947  0315                     u780:	
  1948  0315                     l1574:	
  1949  0315  1283               	bcf	3,5	;RP0=0, select bank0
  1950  0316  1303               	bcf	3,6	;RP1=0, select bank0
  1951  0317  0844               	movf	GPIO_Init_Pin@DirRegAddress,w
  1952  0318  0084               	movwf	4
  1953  0319  1783               	bsf	3,7
  1954  031A  1C45               	btfss	GPIO_Init_Pin@DirRegAddress+1,0
  1955  031B  1383               	bcf	3,7
  1956  031C  0800               	movf	0,w
  1957  031D  1683               	bsf	3,5	;RP0=1, select bank1
  1958  031E  1303               	bcf	3,6	;RP1=0, select bank1
  1959  031F  0607               	xorwf	7,w	;volatile
  1960  0320  1903               	skipnz
  1961  0321  2B23               	goto	u791
  1962  0322  2B24               	goto	u790
  1963  0323                     u791:	
  1964  0323  2B43               	goto	l1582
  1965  0324                     u790:	
  1966  0324                     l1576:	
  1967  0324  1283               	bcf	3,5	;RP0=0, select bank0
  1968  0325  1303               	bcf	3,6	;RP1=0, select bank0
  1969  0326  0844               	movf	GPIO_Init_Pin@DirRegAddress,w
  1970  0327  0084               	movwf	4
  1971  0328  1783               	bsf	3,7
  1972  0329  1C45               	btfss	GPIO_Init_Pin@DirRegAddress+1,0
  1973  032A  1383               	bcf	3,7
  1974  032B  0800               	movf	0,w
  1975  032C  1683               	bsf	3,5	;RP0=1, select bank1
  1976  032D  1303               	bcf	3,6	;RP1=0, select bank1
  1977  032E  0608               	xorwf	8,w	;volatile
  1978  032F  1903               	skipnz
  1979  0330  2B32               	goto	u801
  1980  0331  2B33               	goto	u800
  1981  0332                     u801:	
  1982  0332  2B43               	goto	l1582
  1983  0333                     u800:	
  1984  0333                     l1578:	
  1985  0333  1283               	bcf	3,5	;RP0=0, select bank0
  1986  0334  1303               	bcf	3,6	;RP1=0, select bank0
  1987  0335  0844               	movf	GPIO_Init_Pin@DirRegAddress,w
  1988  0336  0084               	movwf	4
  1989  0337  1783               	bsf	3,7
  1990  0338  1C45               	btfss	GPIO_Init_Pin@DirRegAddress+1,0
  1991  0339  1383               	bcf	3,7
  1992  033A  0800               	movf	0,w
  1993  033B  1683               	bsf	3,5	;RP0=1, select bank1
  1994  033C  1303               	bcf	3,6	;RP1=0, select bank1
  1995  033D  0609               	xorwf	9,w	;volatile
  1996  033E  1903               	skipnz
  1997  033F  2B41               	goto	u811
  1998  0340  2B42               	goto	u810
  1999  0341                     u811:	
  2000  0341  2B43               	goto	l1582
  2001  0342                     u810:	
  2002  0342                     l1580:	
  2003                           
  2004                           ;GPIO.c: 44:     }
  2005  0342  2B68               	goto	l24
  2006  0343                     l1582:	
  2007                           
  2008                           ;GPIO.c: 46:     {;GPIO.c: 47:         ((*DirRegAddress)=(*DirRegAddress & ~(1<<pin_numb
      +                          er))|(dir<<pin_number));
  2009  0343  1283               	bcf	3,5	;RP0=0, select bank0
  2010  0344  1303               	bcf	3,6	;RP1=0, select bank0
  2011  0345  0847               	movf	GPIO_Init_Pin@dir,w
  2012  0346  00C8               	movwf	??_GPIO_Init_Pin
  2013  0347  0A46               	incf	GPIO_Init_Pin@pin_number,w
  2014  0348  2B4B               	goto	u824
  2015  0349                     u825:	
  2016  0349  1003               	clrc
  2017  034A  0DC8               	rlf	??_GPIO_Init_Pin,f
  2018  034B                     u824:	
  2019  034B  3EFF               	addlw	-1
  2020  034C  1D03               	skipz
  2021  034D  2B49               	goto	u825
  2022  034E  0844               	movf	GPIO_Init_Pin@DirRegAddress,w
  2023  034F  0084               	movwf	4
  2024  0350  1783               	bsf	3,7
  2025  0351  1C45               	btfss	GPIO_Init_Pin@DirRegAddress+1,0
  2026  0352  1383               	bcf	3,7
  2027  0353  3001               	movlw	1
  2028  0354  00C9               	movwf	??_GPIO_Init_Pin+1
  2029  0355  0A46               	incf	GPIO_Init_Pin@pin_number,w
  2030  0356  2B59               	goto	u834
  2031  0357                     u835:	
  2032  0357  1003               	clrc
  2033  0358  0DC9               	rlf	??_GPIO_Init_Pin+1,f
  2034  0359                     u834:	
  2035  0359  3EFF               	addlw	-1
  2036  035A  1D03               	skipz
  2037  035B  2B57               	goto	u835
  2038  035C  0849               	movf	??_GPIO_Init_Pin+1,w
  2039  035D  3AFF               	xorlw	255
  2040  035E  0500               	andwf	0,w
  2041  035F  0448               	iorwf	??_GPIO_Init_Pin,w
  2042  0360  00CA               	movwf	??_GPIO_Init_Pin+2
  2043  0361  0844               	movf	GPIO_Init_Pin@DirRegAddress,w
  2044  0362  0084               	movwf	4
  2045  0363  1783               	bsf	3,7
  2046  0364  1C45               	btfss	GPIO_Init_Pin@DirRegAddress+1,0
  2047  0365  1383               	bcf	3,7
  2048  0366  084A               	movf	??_GPIO_Init_Pin+2,w
  2049  0367  0080               	movwf	0
  2050  0368                     l24:	
  2051  0368  0008               	return
  2052  0369                     __end_of_GPIO_Init_Pin:	
  2053                           
  2054                           	psect	text9
  2055  0FBA                     __ptext9:	
  2056 ;; *************** function _CLOCK_Init *****************
  2057 ;; Defined at:
  2058 ;;		line 47 in file "Clock.c"
  2059 ;; Parameters:    Size  Location     Type
  2060 ;;		None
  2061 ;; Auto vars:     Size  Location     Type
  2062 ;;		None
  2063 ;; Return value:  Size  Location     Type
  2064 ;;                  1    wreg      void 
  2065 ;; Registers used:
  2066 ;;		wreg, status,2
  2067 ;; Tracked objects:
  2068 ;;		On entry : 0/0
  2069 ;;		On exit  : 0/0
  2070 ;;		Unchanged: 0/0
  2071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2072 ;;      Params:         0       0       0       0       0
  2073 ;;      Locals:         0       0       0       0       0
  2074 ;;      Temps:          0       0       0       0       0
  2075 ;;      Totals:         0       0       0       0       0
  2076 ;;Total ram usage:        0 bytes
  2077 ;; Hardware stack levels used:    1
  2078 ;; Hardware stack levels required when called:    5
  2079 ;; This function calls:
  2080 ;;		Nothing
  2081 ;; This function is called by:
  2082 ;;		_main
  2083 ;; This function uses a non-reentrant model
  2084 ;;
  2085                           
  2086                           
  2087                           ;psect for function _CLOCK_Init
  2088  0FBA                     _CLOCK_Init:	
  2089  0FBA                     l1890:	
  2090                           ;incstack = 0
  2091                           ; Regs used in _CLOCK_Init: [wreg+status,2]
  2092                           
  2093                           
  2094                           ;Clock.c: 50:     CurrentTime.hours = 0;
  2095  0FBA  1283               	bcf	3,5	;RP0=0, select bank0
  2096  0FBB  1303               	bcf	3,6	;RP1=0, select bank0
  2097  0FBC  01B4               	clrf	_CurrentTime
  2098                           
  2099                           ;Clock.c: 51:     CurrentTime.minuts = 0;
  2100  0FBD  01B5               	clrf	_CurrentTime+1
  2101                           
  2102                           ;Clock.c: 52:     CurrentTime.seconds = 0;
  2103  0FBE  01B6               	clrf	_CurrentTime+2
  2104                           
  2105                           ;Clock.c: 53:     CurrentTime.mSeconds = 0;
  2106  0FBF  01B7               	clrf	_CurrentTime+3
  2107  0FC0  01B8               	clrf	_CurrentTime+4
  2108                           
  2109                           ;Clock.c: 56:     CurrentMode = CL_NORMAL;
  2110  0FC1  01B0               	clrf	_CurrentMode
  2111  0FC2                     l1892:	
  2112                           
  2113                           ;Clock.c: 60:     (((TRISB))=((TRISB) & ~(1<<(3)))|((0)<<(3)));
  2114  0FC2  1683               	bsf	3,5	;RP0=1, select bank1
  2115  0FC3  1303               	bcf	3,6	;RP1=0, select bank1
  2116  0FC4  0806               	movf	6,w	;volatile
  2117  0FC5  39F7               	andlw	247
  2118  0FC6  0086               	movwf	6	;volatile
  2119  0FC7                     l1894:	
  2120                           
  2121                           ;Clock.c: 61:     (((PORTB))=((PORTB) & ~(1<<(3)))|(1<<(3)));
  2122  0FC7  1283               	bcf	3,5	;RP0=0, select bank0
  2123  0FC8  1303               	bcf	3,6	;RP1=0, select bank0
  2124  0FC9  0806               	movf	6,w	;volatile
  2125  0FCA  39F7               	andlw	247
  2126  0FCB  3808               	iorlw	8
  2127  0FCC  0086               	movwf	6	;volatile
  2128  0FCD                     l167:	
  2129  0FCD  0008               	return
  2130  0FCE                     __end_of_CLOCK_Init:	
  2131                           
  2132                           	psect	text10
  2133  07AC                     __ptext10:	
  2134 ;; *************** function _TMR0_ISR *****************
  2135 ;; Defined at:
  2136 ;;		line 31 in file "Timer.c"
  2137 ;; Parameters:    Size  Location     Type
  2138 ;;		None
  2139 ;; Auto vars:     Size  Location     Type
  2140 ;;		None
  2141 ;; Return value:  Size  Location     Type
  2142 ;;                  1    wreg      void 
  2143 ;; Registers used:
  2144 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2145 ;; Tracked objects:
  2146 ;;		On entry : 0/0
  2147 ;;		On exit  : 0/0
  2148 ;;		Unchanged: 0/0
  2149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2150 ;;      Params:         0       0       0       0       0
  2151 ;;      Locals:         0       0       0       0       0
  2152 ;;      Temps:          0       3       0       0       0
  2153 ;;      Totals:         0       3       0       0       0
  2154 ;;Total ram usage:        3 bytes
  2155 ;; Hardware stack levels used:    1
  2156 ;; Hardware stack levels required when called:    4
  2157 ;; This function calls:
  2158 ;;		_CLOCK_Update
  2159 ;;		_Disp_Update
  2160 ;;		_SSD_Update
  2161 ;;		_SW_Update
  2162 ;; This function is called by:
  2163 ;;		Interrupt level 1
  2164 ;; This function uses a non-reentrant model
  2165 ;;
  2166                           
  2167                           
  2168                           ;psect for function _TMR0_ISR
  2169  07AC                     _TMR0_ISR:	
  2170  07AC                     i1l2032:	
  2171                           
  2172                           ;Timer.c: 35:     ((TMR0IF) = 0);
  2173  07AC  110B               	bcf	11,2	;volatile
  2174  07AD                     i1l2034:	
  2175                           
  2176                           ;Timer.c: 37:     ((TMR0) = 256 - (((5)) * 8));
  2177  07AD  30D8               	movlw	216
  2178  07AE  0081               	movwf	1	;volatile
  2179  07AF                     i1l2036:	
  2180                           
  2181                           ;Timer.c: 40:     SSD_Update();
  2182  07AF  120A  118A  277D  120A  118A  	fcall	_SSD_Update
  2183  07B4                     i1l2038:	
  2184                           
  2185                           ;Timer.c: 41:     SW_Update();
  2186  07B4  120A  118A  2556  120A  118A  	fcall	_SW_Update
  2187  07B9                     i1l2040:	
  2188                           
  2189                           ;Timer.c: 42:     CLOCK_Update();
  2190  07B9  120A  118A  2369  120A  118A  	fcall	_CLOCK_Update
  2191  07BE                     i1l2042:	
  2192                           
  2193                           ;Timer.c: 43:     Disp_Update();
  2194  07BE  120A  118A  2674  120A  118A  	fcall	_Disp_Update
  2195  07C3                     i1l291:	
  2196  07C3  1283               	bcf	3,5	;RP0=0, select bank0
  2197  07C4  1303               	bcf	3,6	;RP1=0, select bank0
  2198  07C5  0843               	movf	??_TMR0_ISR+2,w
  2199  07C6  008A               	movwf	10
  2200  07C7  0842               	movf	??_TMR0_ISR+1,w
  2201  07C8  0084               	movwf	4
  2202  07C9  0E41               	swapf	??_TMR0_ISR^0,w
  2203  07CA  0083               	movwf	3
  2204  07CB  0EFE               	swapf	btemp,f
  2205  07CC  0E7E               	swapf	btemp,w
  2206  07CD  0009               	retfie
  2207  07CE                     __end_of_TMR0_ISR:	
  2208                           
  2209                           	psect	intentry
  2210  0004                     __pintentry:	
  2211                           ;incstack = 0
  2212                           ; Regs used in _TMR0_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2213                           
  2214  0004                     interrupt_function:	
  2215  007E                     saved_w	set	btemp
  2216  0004  00FE               	movwf	btemp
  2217  0005  0E03               	swapf	3,w
  2218  0006  1283               	bcf	3,5	;RP0=0, select bank0
  2219  0007  1303               	bcf	3,6	;RP1=0, select bank0
  2220  0008  00C1               	movwf	??_TMR0_ISR
  2221  0009  0804               	movf	4,w
  2222  000A  00C2               	movwf	??_TMR0_ISR+1
  2223  000B  080A               	movf	10,w
  2224  000C  00C3               	movwf	??_TMR0_ISR+2
  2225  000D  120A  118A  2FAC   	ljmp	_TMR0_ISR
  2226                           
  2227                           	psect	text11
  2228  0556                     __ptext11:	
  2229 ;; *************** function _SW_Update *****************
  2230 ;; Defined at:
  2231 ;;		line 85 in file "SW.c"
  2232 ;; Parameters:    Size  Location     Type
  2233 ;;		None
  2234 ;; Auto vars:     Size  Location     Type
  2235 ;;		None
  2236 ;; Return value:  Size  Location     Type
  2237 ;;                  1    wreg      void 
  2238 ;; Registers used:
  2239 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2240 ;; Tracked objects:
  2241 ;;		On entry : 0/0
  2242 ;;		On exit  : 0/0
  2243 ;;		Unchanged: 0/0
  2244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2245 ;;      Params:         0       0       0       0       0
  2246 ;;      Locals:         0       0       0       0       0
  2247 ;;      Temps:          2       0       0       0       0
  2248 ;;      Totals:         2       0       0       0       0
  2249 ;;Total ram usage:        2 bytes
  2250 ;; Hardware stack levels used:    1
  2251 ;; Hardware stack levels required when called:    2
  2252 ;; This function calls:
  2253 ;;		_SW_UpdateState
  2254 ;; This function is called by:
  2255 ;;		_TMR0_ISR
  2256 ;; This function uses a non-reentrant model
  2257 ;;
  2258                           
  2259                           
  2260                           ;psect for function _SW_Update
  2261  0556                     _SW_Update:	
  2262  0556                     i1l1926:	
  2263                           ;incstack = 0
  2264                           ; Regs used in _SW_Update: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2265                           
  2266                           
  2267                           ;SW.c: 91:     static u8_t SW_Time_Counter = 15;;SW.c: 92:     SW_Time_Counter += (5);
  2268  0556  3005               	movlw	5
  2269  0557  00F8               	movwf	??_SW_Update
  2270  0558  0878               	movf	??_SW_Update,w
  2271  0559  1283               	bcf	3,5	;RP0=0, select bank0
  2272  055A  1303               	bcf	3,6	;RP1=0, select bank0
  2273  055B  07DC               	addwf	SW_Update@SW_Time_Counter,f
  2274                           
  2275                           ;SW.c: 94:     if(SW_Time_Counter != (20))
  2276  055C  3014               	movlw	20
  2277  055D  065C               	xorwf	SW_Update@SW_Time_Counter,w
  2278  055E  1903               	btfsc	3,2
  2279  055F  2D61               	goto	u130_21
  2280  0560  2D62               	goto	u130_20
  2281  0561                     u130_21:	
  2282  0561  2D63               	goto	i1l1930
  2283  0562                     u130_20:	
  2284  0562  2DAA               	goto	i1l137
  2285  0563                     i1l1930:	
  2286                           
  2287                           ;SW.c: 98:     SW_Time_Counter = 0;
  2288  0563  01DC               	clrf	SW_Update@SW_Time_Counter
  2289  0564                     i1l1932:	
  2290                           
  2291                           ;SW.c: 100:     SW_DATA[SW_PLUS].samples[0] = SW_DATA[SW_PLUS].samples[1];
  2292  0564  0821               	movf	_SW_DATA+1,w
  2293  0565  00F8               	movwf	??_SW_Update
  2294  0566  0878               	movf	??_SW_Update,w
  2295  0567  00A0               	movwf	_SW_DATA
  2296                           
  2297                           ;SW.c: 101:     SW_DATA[SW_PLUS].samples[1] = (((PORTB) >> (0))& 1);
  2298  0568  0806               	movf	6,w	;volatile
  2299  0569  3901               	andlw	1
  2300  056A  00F8               	movwf	??_SW_Update
  2301  056B  0878               	movf	??_SW_Update,w
  2302  056C  00A1               	movwf	_SW_DATA+1
  2303  056D                     i1l1934:	
  2304                           
  2305                           ;SW.c: 103:     SW_UpdateState(SW_PLUS);
  2306  056D  3000               	movlw	0
  2307  056E  120A  118A  202D  120A  118A  	fcall	_SW_UpdateState
  2308  0573                     i1l1936:	
  2309                           
  2310                           ;SW.c: 105:     SW_DATA[SW_MINUS].samples[0] = SW_DATA[SW_MINUS].samples[1];
  2311  0573  1283               	bcf	3,5	;RP0=0, select bank0
  2312  0574  1303               	bcf	3,6	;RP1=0, select bank0
  2313  0575  0824               	movf	_SW_DATA+4,w
  2314  0576  00F8               	movwf	??_SW_Update
  2315  0577  0878               	movf	??_SW_Update,w
  2316  0578  00A3               	movwf	_SW_DATA+3
  2317  0579                     i1l1938:	
  2318                           
  2319                           ;SW.c: 106:     SW_DATA[SW_MINUS].samples[1] = (((PORTB) >> (1))& 1);
  2320  0579  0806               	movf	6,w	;volatile
  2321  057A  00F8               	movwf	??_SW_Update
  2322  057B  1003               	clrc
  2323  057C  0C78               	rrf	??_SW_Update,w
  2324  057D  3901               	andlw	1
  2325  057E  00F9               	movwf	??_SW_Update+1
  2326  057F  0879               	movf	??_SW_Update+1,w
  2327  0580  00A4               	movwf	_SW_DATA+4
  2328  0581                     i1l1940:	
  2329                           
  2330                           ;SW.c: 108:     SW_UpdateState(SW_MINUS);
  2331  0581  3001               	movlw	1
  2332  0582  120A  118A  202D  120A  118A  	fcall	_SW_UpdateState
  2333  0587                     i1l1942:	
  2334                           
  2335                           ;SW.c: 111:     SW_DATA[SW_SET].samples[0] = SW_DATA[SW_SET].samples[1];
  2336  0587  1283               	bcf	3,5	;RP0=0, select bank0
  2337  0588  1303               	bcf	3,6	;RP1=0, select bank0
  2338  0589  0827               	movf	_SW_DATA+7,w
  2339  058A  00F8               	movwf	??_SW_Update
  2340  058B  0878               	movf	??_SW_Update,w
  2341  058C  00A6               	movwf	_SW_DATA+6
  2342  058D                     i1l1944:	
  2343                           
  2344                           ;SW.c: 112:     SW_DATA[SW_SET].samples[1] = (((PORTB) >> (2))& 1);
  2345  058D  0806               	movf	6,w	;volatile
  2346  058E  00F8               	movwf	??_SW_Update
  2347  058F  3002               	movlw	2
  2348  0590                     u131_25:	
  2349  0590  1003               	clrc
  2350  0591  0CF8               	rrf	??_SW_Update,f
  2351  0592  3EFF               	addlw	-1
  2352  0593  1D03               	skipz
  2353  0594  2D90               	goto	u131_25
  2354  0595  0878               	movf	??_SW_Update,w
  2355  0596  3901               	andlw	1
  2356  0597  00F9               	movwf	??_SW_Update+1
  2357  0598  0879               	movf	??_SW_Update+1,w
  2358  0599  00A7               	movwf	_SW_DATA+7
  2359  059A                     i1l1946:	
  2360                           
  2361                           ;SW.c: 114:     SW_UpdateState(SW_SET);
  2362  059A  3002               	movlw	2
  2363  059B  120A  118A  202D  120A  118A  	fcall	_SW_UpdateState
  2364  05A0                     i1l1948:	
  2365                           
  2366                           ;SW.c: 115:     if(SW_DATA[SW_SET].state == SW_PRE_PRESSED )
  2367  05A0  1283               	bcf	3,5	;RP0=0, select bank0
  2368  05A1  1303               	bcf	3,6	;RP1=0, select bank0
  2369  05A2  0328               	decf	_SW_DATA+8,w
  2370  05A3  1D03               	btfss	3,2
  2371  05A4  2DA6               	goto	u132_21
  2372  05A5  2DA7               	goto	u132_20
  2373  05A6                     u132_21:	
  2374  05A6  2DAA               	goto	i1l137
  2375  05A7                     u132_20:	
  2376  05A7                     i1l1950:	
  2377                           
  2378                           ;SW.c: 116:         (((PORTB))=((PORTB) ^(1<<(3))));
  2379  05A7  0806               	movf	6,w	;volatile
  2380  05A8  3A08               	xorlw	8
  2381  05A9  0086               	movwf	6	;volatile
  2382  05AA                     i1l137:	
  2383  05AA  0008               	return
  2384  05AB                     __end_of_SW_Update:	
  2385                           
  2386                           	psect	text12
  2387  002D                     __ptext12:	
  2388 ;; *************** function _SW_UpdateState *****************
  2389 ;; Defined at:
  2390 ;;		line 119 in file "SW.c"
  2391 ;; Parameters:    Size  Location     Type
  2392 ;;  sw              1    wreg     enum E859
  2393 ;; Auto vars:     Size  Location     Type
  2394 ;;  sw              1    7[COMMON] enum E859
  2395 ;; Return value:  Size  Location     Type
  2396 ;;                  1    wreg      void 
  2397 ;; Registers used:
  2398 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2399 ;; Tracked objects:
  2400 ;;		On entry : 0/0
  2401 ;;		On exit  : 0/0
  2402 ;;		Unchanged: 0/0
  2403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2404 ;;      Params:         0       0       0       0       0
  2405 ;;      Locals:         1       0       0       0       0
  2406 ;;      Temps:          3       0       0       0       0
  2407 ;;      Totals:         4       0       0       0       0
  2408 ;;Total ram usage:        4 bytes
  2409 ;; Hardware stack levels used:    1
  2410 ;; Hardware stack levels required when called:    1
  2411 ;; This function calls:
  2412 ;;		___bmul
  2413 ;; This function is called by:
  2414 ;;		_SW_Update
  2415 ;; This function uses a non-reentrant model
  2416 ;;
  2417                           
  2418                           
  2419                           ;psect for function _SW_UpdateState
  2420  002D                     _SW_UpdateState:	
  2421                           
  2422                           ;incstack = 0
  2423                           ; Regs used in _SW_UpdateState: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2424                           ;SW_UpdateState@sw stored from wreg
  2425  002D  00F7               	movwf	SW_UpdateState@sw
  2426  002E                     i1l1742:	
  2427                           
  2428                           ;SW.c: 119: void SW_UpdateState(SW_t sw);SW.c: 120: {;SW.c: 136:     switch(SW_DATA[sw].
      +                          state)
  2429  002E  2902               	goto	i1l1770
  2430  002F                     i1l1744:	
  2431                           
  2432                           ;SW.c: 140:             if(SW_DATA[sw].samples[0] == (1) && SW_DATA[sw].samples[1] == (1
      +                          ))
  2433  002F  3003               	movlw	3
  2434  0030  00F4               	movwf	??_SW_UpdateState
  2435  0031  0874               	movf	??_SW_UpdateState,w
  2436  0032  00F0               	movwf	___bmul@multiplicand
  2437  0033  0877               	movf	SW_UpdateState@sw,w
  2438  0034  120A  158A  27CE  120A  118A  	fcall	___bmul
  2439  0039  3E20               	addlw	(low (_SW_DATA| 0))& (0+255)
  2440  003A  0084               	movwf	4
  2441  003B  1383               	bcf	3,7	;select IRP bank0
  2442  003C  0300               	decf	0,w
  2443  003D  1D03               	btfss	3,2
  2444  003E  2840               	goto	u105_21
  2445  003F  2841               	goto	u105_20
  2446  0040                     u105_21:	
  2447  0040  2925               	goto	i1l152
  2448  0041                     u105_20:	
  2449  0041                     i1l1746:	
  2450  0041  3003               	movlw	3
  2451  0042  00F4               	movwf	??_SW_UpdateState
  2452  0043  0874               	movf	??_SW_UpdateState,w
  2453  0044  00F0               	movwf	___bmul@multiplicand
  2454  0045  0877               	movf	SW_UpdateState@sw,w
  2455  0046  120A  158A  27CE  120A  118A  	fcall	___bmul
  2456  004B  3E21               	addlw	(low ((_SW_DATA| 0+1)))& (0+255)
  2457  004C  0084               	movwf	4
  2458  004D  1383               	bcf	3,7	;select IRP bank0
  2459  004E  0300               	decf	0,w
  2460  004F  1D03               	btfss	3,2
  2461  0050  2852               	goto	u106_21
  2462  0051  2853               	goto	u106_20
  2463  0052                     u106_21:	
  2464  0052  2925               	goto	i1l152
  2465  0053                     u106_20:	
  2466  0053                     i1l1748:	
  2467                           
  2468                           ;SW.c: 141:                 SW_DATA[sw].state = SW_RELEASED;
  2469  0053  3003               	movlw	3
  2470  0054  00F4               	movwf	??_SW_UpdateState
  2471  0055  0874               	movf	??_SW_UpdateState,w
  2472  0056  00F0               	movwf	___bmul@multiplicand
  2473  0057  0877               	movf	SW_UpdateState@sw,w
  2474  0058  120A  158A  27CE  120A  118A  	fcall	___bmul
  2475  005D  3E22               	addlw	(low ((_SW_DATA| 0+2)))& (0+255)
  2476  005E  0084               	movwf	4
  2477  005F  1383               	bcf	3,7	;select IRP bank0
  2478  0060  0180               	clrf	0
  2479  0061  2925               	goto	i1l152
  2480  0062                     i1l1750:	
  2481                           
  2482                           ;SW.c: 144:             if(SW_DATA[sw].samples[0] == (0) && SW_DATA[sw].samples[1] == (0
      +                          ))
  2483  0062  3003               	movlw	3
  2484  0063  00F4               	movwf	??_SW_UpdateState
  2485  0064  0874               	movf	??_SW_UpdateState,w
  2486  0065  00F0               	movwf	___bmul@multiplicand
  2487  0066  0877               	movf	SW_UpdateState@sw,w
  2488  0067  120A  158A  27CE  120A  118A  	fcall	___bmul
  2489  006C  3E20               	addlw	(low (_SW_DATA| 0))& (0+255)
  2490  006D  0084               	movwf	4
  2491  006E  1383               	bcf	3,7	;select IRP bank0
  2492  006F  0800               	movf	0,w
  2493  0070  1D03               	btfss	3,2
  2494  0071  2873               	goto	u107_21
  2495  0072  2874               	goto	u107_20
  2496  0073                     u107_21:	
  2497  0073  2925               	goto	i1l152
  2498  0074                     u107_20:	
  2499  0074                     i1l1752:	
  2500  0074  3003               	movlw	3
  2501  0075  00F4               	movwf	??_SW_UpdateState
  2502  0076  0874               	movf	??_SW_UpdateState,w
  2503  0077  00F0               	movwf	___bmul@multiplicand
  2504  0078  0877               	movf	SW_UpdateState@sw,w
  2505  0079  120A  158A  27CE  120A  118A  	fcall	___bmul
  2506  007E  3E21               	addlw	(low ((_SW_DATA| 0+1)))& (0+255)
  2507  007F  0084               	movwf	4
  2508  0080  1383               	bcf	3,7	;select IRP bank0
  2509  0081  0800               	movf	0,w
  2510  0082  1D03               	btfss	3,2
  2511  0083  2885               	goto	u108_21
  2512  0084  2886               	goto	u108_20
  2513  0085                     u108_21:	
  2514  0085  2925               	goto	i1l152
  2515  0086                     u108_20:	
  2516  0086                     i1l1754:	
  2517                           
  2518                           ;SW.c: 145:                 SW_DATA[sw].state = SW_PRE_PRESSED;
  2519  0086  3003               	movlw	3
  2520  0087  00F4               	movwf	??_SW_UpdateState
  2521  0088  0874               	movf	??_SW_UpdateState,w
  2522  0089  00F0               	movwf	___bmul@multiplicand
  2523  008A  0877               	movf	SW_UpdateState@sw,w
  2524  008B  120A  158A  27CE  120A  118A  	fcall	___bmul
  2525  0090  3E22               	addlw	(low ((_SW_DATA| 0+2)))& (0+255)
  2526  0091  0084               	movwf	4
  2527  0092  1383               	bcf	3,7	;select IRP bank0
  2528  0093  0180               	clrf	0
  2529  0094  0A80               	incf	0,f
  2530  0095  2925               	goto	i1l152
  2531  0096                     i1l1756:	
  2532                           
  2533                           ;SW.c: 148:             if(SW_DATA[sw].samples[0] == (0) && SW_DATA[sw].samples[1] == (0
      +                          ))
  2534  0096  3003               	movlw	3
  2535  0097  00F4               	movwf	??_SW_UpdateState
  2536  0098  0874               	movf	??_SW_UpdateState,w
  2537  0099  00F0               	movwf	___bmul@multiplicand
  2538  009A  0877               	movf	SW_UpdateState@sw,w
  2539  009B  120A  158A  27CE  120A  118A  	fcall	___bmul
  2540  00A0  3E20               	addlw	(low (_SW_DATA| 0))& (0+255)
  2541  00A1  0084               	movwf	4
  2542  00A2  1383               	bcf	3,7	;select IRP bank0
  2543  00A3  0800               	movf	0,w
  2544  00A4  1D03               	btfss	3,2
  2545  00A5  28A7               	goto	u109_21
  2546  00A6  28A8               	goto	u109_20
  2547  00A7                     u109_21:	
  2548  00A7  2925               	goto	i1l152
  2549  00A8                     u109_20:	
  2550  00A8                     i1l1758:	
  2551  00A8  3003               	movlw	3
  2552  00A9  00F4               	movwf	??_SW_UpdateState
  2553  00AA  0874               	movf	??_SW_UpdateState,w
  2554  00AB  00F0               	movwf	___bmul@multiplicand
  2555  00AC  0877               	movf	SW_UpdateState@sw,w
  2556  00AD  120A  158A  27CE  120A  118A  	fcall	___bmul
  2557  00B2  3E21               	addlw	(low ((_SW_DATA| 0+1)))& (0+255)
  2558  00B3  0084               	movwf	4
  2559  00B4  1383               	bcf	3,7	;select IRP bank0
  2560  00B5  0800               	movf	0,w
  2561  00B6  1D03               	btfss	3,2
  2562  00B7  28B9               	goto	u110_21
  2563  00B8  28BA               	goto	u110_20
  2564  00B9                     u110_21:	
  2565  00B9  2925               	goto	i1l152
  2566  00BA                     u110_20:	
  2567  00BA                     i1l1760:	
  2568                           
  2569                           ;SW.c: 149:                 SW_DATA[sw].state = SW_PRESSED;
  2570  00BA  3002               	movlw	2
  2571  00BB  00F4               	movwf	??_SW_UpdateState
  2572  00BC  3003               	movlw	3
  2573  00BD  00F5               	movwf	??_SW_UpdateState+1
  2574  00BE  0875               	movf	??_SW_UpdateState+1,w
  2575  00BF  00F0               	movwf	___bmul@multiplicand
  2576  00C0  0877               	movf	SW_UpdateState@sw,w
  2577  00C1  120A  158A  27CE  120A  118A  	fcall	___bmul
  2578  00C6  3E22               	addlw	(low ((_SW_DATA| 0+2)))& (0+255)
  2579  00C7  0084               	movwf	4
  2580  00C8  0874               	movf	??_SW_UpdateState,w
  2581  00C9  1383               	bcf	3,7	;select IRP bank0
  2582  00CA  0080               	movwf	0
  2583  00CB  2925               	goto	i1l152
  2584  00CC                     i1l1762:	
  2585                           
  2586                           ;SW.c: 152:             if(SW_DATA[sw].samples[0] == (1) && SW_DATA[sw].samples[1] == (1
      +                          ))
  2587  00CC  3003               	movlw	3
  2588  00CD  00F4               	movwf	??_SW_UpdateState
  2589  00CE  0874               	movf	??_SW_UpdateState,w
  2590  00CF  00F0               	movwf	___bmul@multiplicand
  2591  00D0  0877               	movf	SW_UpdateState@sw,w
  2592  00D1  120A  158A  27CE  120A  118A  	fcall	___bmul
  2593  00D6  3E20               	addlw	(low (_SW_DATA| 0))& (0+255)
  2594  00D7  0084               	movwf	4
  2595  00D8  1383               	bcf	3,7	;select IRP bank0
  2596  00D9  0300               	decf	0,w
  2597  00DA  1D03               	btfss	3,2
  2598  00DB  28DD               	goto	u111_21
  2599  00DC  28DE               	goto	u111_20
  2600  00DD                     u111_21:	
  2601  00DD  2925               	goto	i1l152
  2602  00DE                     u111_20:	
  2603  00DE                     i1l1764:	
  2604  00DE  3003               	movlw	3
  2605  00DF  00F4               	movwf	??_SW_UpdateState
  2606  00E0  0874               	movf	??_SW_UpdateState,w
  2607  00E1  00F0               	movwf	___bmul@multiplicand
  2608  00E2  0877               	movf	SW_UpdateState@sw,w
  2609  00E3  120A  158A  27CE  120A  118A  	fcall	___bmul
  2610  00E8  3E21               	addlw	(low ((_SW_DATA| 0+1)))& (0+255)
  2611  00E9  0084               	movwf	4
  2612  00EA  1383               	bcf	3,7	;select IRP bank0
  2613  00EB  0300               	decf	0,w
  2614  00EC  1D03               	btfss	3,2
  2615  00ED  28EF               	goto	u112_21
  2616  00EE  28F0               	goto	u112_20
  2617  00EF                     u112_21:	
  2618  00EF  2925               	goto	i1l152
  2619  00F0                     u112_20:	
  2620  00F0                     i1l1766:	
  2621                           
  2622                           ;SW.c: 153:                 SW_DATA[sw].state = SW_PRE_RELEASED;
  2623  00F0  3003               	movlw	3
  2624  00F1  00F4               	movwf	??_SW_UpdateState
  2625  00F2  3003               	movlw	3
  2626  00F3  00F5               	movwf	??_SW_UpdateState+1
  2627  00F4  0875               	movf	??_SW_UpdateState+1,w
  2628  00F5  00F0               	movwf	___bmul@multiplicand
  2629  00F6  0877               	movf	SW_UpdateState@sw,w
  2630  00F7  120A  158A  27CE  120A  118A  	fcall	___bmul
  2631  00FC  3E22               	addlw	(low ((_SW_DATA| 0+2)))& (0+255)
  2632  00FD  0084               	movwf	4
  2633  00FE  0874               	movf	??_SW_UpdateState,w
  2634  00FF  1383               	bcf	3,7	;select IRP bank0
  2635  0100  0080               	movwf	0
  2636  0101  2925               	goto	i1l152
  2637  0102                     i1l1770:	
  2638  0102  3003               	movlw	3
  2639  0103  00F4               	movwf	??_SW_UpdateState
  2640  0104  0874               	movf	??_SW_UpdateState,w
  2641  0105  00F0               	movwf	___bmul@multiplicand
  2642  0106  0877               	movf	SW_UpdateState@sw,w
  2643  0107  120A  158A  27CE  120A  118A  	fcall	___bmul
  2644  010C  3E22               	addlw	(low ((_SW_DATA| 0+2)))& (0+255)
  2645  010D  0084               	movwf	4
  2646  010E  1383               	bcf	3,7	;select IRP bank0
  2647  010F  0800               	movf	0,w
  2648  0110  00F5               	movwf	??_SW_UpdateState+1
  2649  0111  01F6               	clrf	??_SW_UpdateState+2
  2650                           
  2651                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2652                           ; Switch size 1, requested type "simple"
  2653                           ; Number of cases is 1, Range of values is 0 to 0
  2654                           ; switch strategies available:
  2655                           ; Name         Instructions Cycles
  2656                           ; simple_byte            4     3 (average)
  2657                           ; direct_byte           11     8 (fixed)
  2658                           ; jumptable            260     6 (fixed)
  2659                           ;	Chosen strategy is simple_byte
  2660  0112  0876               	movf	??_SW_UpdateState+2,w
  2661  0113  3A00               	xorlw	0	; case 0
  2662  0114  1903               	skipnz
  2663  0115  2917               	goto	i1l2164
  2664  0116  2925               	goto	i1l152
  2665  0117                     i1l2164:	
  2666                           
  2667                           ; Switch size 1, requested type "simple"
  2668                           ; Number of cases is 4, Range of values is 0 to 3
  2669                           ; switch strategies available:
  2670                           ; Name         Instructions Cycles
  2671                           ; simple_byte           13     7 (average)
  2672                           ; direct_byte           20     8 (fixed)
  2673                           ; jumptable            260     6 (fixed)
  2674                           ;	Chosen strategy is simple_byte
  2675  0117  0875               	movf	??_SW_UpdateState+1,w
  2676  0118  3A00               	xorlw	0	; case 0
  2677  0119  1903               	skipnz
  2678  011A  2862               	goto	i1l1750
  2679  011B  3A01               	xorlw	1	; case 1
  2680  011C  1903               	skipnz
  2681  011D  2896               	goto	i1l1756
  2682  011E  3A03               	xorlw	3	; case 2
  2683  011F  1903               	skipnz
  2684  0120  28CC               	goto	i1l1762
  2685  0121  3A01               	xorlw	1	; case 3
  2686  0122  1903               	skipnz
  2687  0123  282F               	goto	i1l1744
  2688  0124  2925               	goto	i1l152
  2689  0125                     i1l152:	
  2690  0125  0008               	return
  2691  0126                     __end_of_SW_UpdateState:	
  2692                           
  2693                           	psect	text13
  2694  077D                     __ptext13:	
  2695 ;; *************** function _SSD_Update *****************
  2696 ;; Defined at:
  2697 ;;		line 92 in file "SSD.c"
  2698 ;; Parameters:    Size  Location     Type
  2699 ;;		None
  2700 ;; Auto vars:     Size  Location     Type
  2701 ;;		None
  2702 ;; Return value:  Size  Location     Type
  2703 ;;                  1    wreg      void 
  2704 ;; Registers used:
  2705 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2706 ;; Tracked objects:
  2707 ;;		On entry : 0/0
  2708 ;;		On exit  : 0/0
  2709 ;;		Unchanged: 0/0
  2710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2711 ;;      Params:         0       0       0       0       0
  2712 ;;      Locals:         0       0       0       0       0
  2713 ;;      Temps:          1       0       0       0       0
  2714 ;;      Totals:         1       0       0       0       0
  2715 ;;Total ram usage:        1 bytes
  2716 ;; Hardware stack levels used:    1
  2717 ;; Hardware stack levels required when called:    1
  2718 ;; This function calls:
  2719 ;;		_SSD_Data_write
  2720 ;;		_SSD_Disable
  2721 ;;		_SSD_Enable
  2722 ;; This function is called by:
  2723 ;;		_TMR0_ISR
  2724 ;; This function uses a non-reentrant model
  2725 ;;
  2726                           
  2727                           
  2728                           ;psect for function _SSD_Update
  2729  077D                     _SSD_Update:	
  2730  077D                     i1l1908:	
  2731                           ;incstack = 0
  2732                           ; Regs used in _SSD_Update: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2733                           
  2734                           
  2735                           ;SSD.c: 97:     static u8_t SSD_Time_Counter = 0;;SSD.c: 98:     SSD_Time_Counter += (5)
      +                          ;
  2736  077D  3005               	movlw	5
  2737  077E  00F3               	movwf	??_SSD_Update
  2738  077F  0873               	movf	??_SSD_Update,w
  2739  0780  1283               	bcf	3,5	;RP0=0, select bank0
  2740  0781  1303               	bcf	3,6	;RP1=0, select bank0
  2741  0782  07B1               	addwf	SSD_Update@SSD_Time_Counter,f
  2742                           
  2743                           ;SSD.c: 100:     if(SSD_Time_Counter != (5))
  2744  0783  3005               	movlw	5
  2745  0784  0631               	xorwf	SSD_Update@SSD_Time_Counter,w
  2746  0785  1903               	btfsc	3,2
  2747  0786  2F88               	goto	u128_21
  2748  0787  2F89               	goto	u128_20
  2749  0788                     u128_21:	
  2750  0788  2F8A               	goto	i1l1912
  2751  0789                     u128_20:	
  2752  0789  2FAB               	goto	i1l84
  2753  078A                     i1l1912:	
  2754                           
  2755                           ;SSD.c: 104:     SSD_Time_Counter = 0;
  2756  078A  01B1               	clrf	SSD_Update@SSD_Time_Counter
  2757  078B                     i1l1914:	
  2758                           
  2759                           ;SSD.c: 107:     SSD_Disable(currentSSD);
  2760  078B  0833               	movf	_currentSSD,w
  2761  078C  120A  118A  274C  120A  118A  	fcall	_SSD_Disable
  2762  0791                     i1l1916:	
  2763                           
  2764                           ;SSD.c: 109:     currentSSD++;
  2765  0791  3001               	movlw	1
  2766  0792  00F3               	movwf	??_SSD_Update
  2767  0793  0873               	movf	??_SSD_Update,w
  2768  0794  1283               	bcf	3,5	;RP0=0, select bank0
  2769  0795  1303               	bcf	3,6	;RP1=0, select bank0
  2770  0796  07B3               	addwf	_currentSSD,f
  2771  0797                     i1l1918:	
  2772                           
  2773                           ;SSD.c: 110:     if(currentSSD > SSD_HOURS_TENS)currentSSD = 0;
  2774  0797  3004               	movlw	4
  2775  0798  0233               	subwf	_currentSSD,w
  2776  0799  1C03               	skipc
  2777  079A  2F9C               	goto	u129_21
  2778  079B  2F9D               	goto	u129_20
  2779  079C                     u129_21:	
  2780  079C  2F9E               	goto	i1l1922
  2781  079D                     u129_20:	
  2782  079D                     i1l1920:	
  2783  079D  01B3               	clrf	_currentSSD
  2784  079E                     i1l1922:	
  2785                           
  2786                           ;SSD.c: 112:     SSD_Data_write();
  2787  079E  120A  158A  27E3  120A  118A  	fcall	_SSD_Data_write
  2788  07A3                     i1l1924:	
  2789                           
  2790                           ;SSD.c: 114:     SSD_Enable(currentSSD);
  2791  07A3  1283               	bcf	3,5	;RP0=0, select bank0
  2792  07A4  1303               	bcf	3,6	;RP1=0, select bank0
  2793  07A5  0833               	movf	_currentSSD,w
  2794  07A6  120A  118A  26E3  120A  118A  	fcall	_SSD_Enable
  2795  07AB                     i1l84:	
  2796  07AB  0008               	return
  2797  07AC                     __end_of_SSD_Update:	
  2798                           
  2799                           	psect	text14
  2800  06E3                     __ptext14:	
  2801 ;; *************** function _SSD_Enable *****************
  2802 ;; Defined at:
  2803 ;;		line 138 in file "SSD.c"
  2804 ;; Parameters:    Size  Location     Type
  2805 ;;  s               1    wreg     enum E872
  2806 ;; Auto vars:     Size  Location     Type
  2807 ;;  s               1    2[COMMON] enum E872
  2808 ;; Return value:  Size  Location     Type
  2809 ;;                  1    wreg      void 
  2810 ;; Registers used:
  2811 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2812 ;; Tracked objects:
  2813 ;;		On entry : 0/0
  2814 ;;		On exit  : 0/0
  2815 ;;		Unchanged: 0/0
  2816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2817 ;;      Params:         0       0       0       0       0
  2818 ;;      Locals:         1       0       0       0       0
  2819 ;;      Temps:          2       0       0       0       0
  2820 ;;      Totals:         3       0       0       0       0
  2821 ;;Total ram usage:        3 bytes
  2822 ;; Hardware stack levels used:    1
  2823 ;; This function calls:
  2824 ;;		Nothing
  2825 ;; This function is called by:
  2826 ;;		_SSD_Update
  2827 ;; This function uses a non-reentrant model
  2828 ;;
  2829                           
  2830                           
  2831                           ;psect for function _SSD_Enable
  2832  06E3                     _SSD_Enable:	
  2833                           
  2834                           ;incstack = 0
  2835                           ; Regs used in _SSD_Enable: [wreg-fsr0h+status,2+status,0]
  2836                           ;SSD_Enable@s stored from wreg
  2837  06E3  00F2               	movwf	SSD_Enable@s
  2838  06E4                     i1l1726:	
  2839                           
  2840                           ;SSD.c: 138: void SSD_Enable(SSD_t s);SSD.c: 139: {;SSD.c: 140:     switch(s)
  2841  06E4  2F01               	goto	i1l1736
  2842  06E5                     i1l1728:	
  2843                           
  2844                           ;SSD.c: 143:             (((PORTB))=((PORTB) & ~(1<<(4)))|(SSD_ON<<(4)));
  2845  06E5  1283               	bcf	3,5	;RP0=0, select bank0
  2846  06E6  1303               	bcf	3,6	;RP1=0, select bank0
  2847  06E7  0806               	movf	6,w	;volatile
  2848  06E8  39EF               	andlw	239
  2849  06E9  3810               	iorlw	16
  2850  06EA  0086               	movwf	6	;volatile
  2851                           
  2852                           ;SSD.c: 144:             break;
  2853  06EB  2F17               	goto	i1l105
  2854  06EC                     i1l1730:	
  2855                           
  2856                           ;SSD.c: 146:             (((PORTB))=((PORTB) & ~(1<<(5)))|(SSD_ON<<(5)));
  2857  06EC  1283               	bcf	3,5	;RP0=0, select bank0
  2858  06ED  1303               	bcf	3,6	;RP1=0, select bank0
  2859  06EE  0806               	movf	6,w	;volatile
  2860  06EF  39DF               	andlw	223
  2861  06F0  3820               	iorlw	32
  2862  06F1  0086               	movwf	6	;volatile
  2863                           
  2864                           ;SSD.c: 147:             break;
  2865  06F2  2F17               	goto	i1l105
  2866  06F3                     i1l1732:	
  2867                           
  2868                           ;SSD.c: 149:             (((PORTB))=((PORTB) & ~(1<<(6)))|(SSD_ON<<(6)));
  2869  06F3  1283               	bcf	3,5	;RP0=0, select bank0
  2870  06F4  1303               	bcf	3,6	;RP1=0, select bank0
  2871  06F5  0806               	movf	6,w	;volatile
  2872  06F6  39BF               	andlw	191
  2873  06F7  3840               	iorlw	64
  2874  06F8  0086               	movwf	6	;volatile
  2875                           
  2876                           ;SSD.c: 150:             break;
  2877  06F9  2F17               	goto	i1l105
  2878  06FA                     i1l1734:	
  2879                           
  2880                           ;SSD.c: 152:             (((PORTB))=((PORTB) & ~(1<<(7)))|(SSD_ON<<(7)));
  2881  06FA  1283               	bcf	3,5	;RP0=0, select bank0
  2882  06FB  1303               	bcf	3,6	;RP1=0, select bank0
  2883  06FC  0806               	movf	6,w	;volatile
  2884  06FD  397F               	andlw	127
  2885  06FE  3880               	iorlw	128
  2886  06FF  0086               	movwf	6	;volatile
  2887                           
  2888                           ;SSD.c: 153:             break;
  2889  0700  2F17               	goto	i1l105
  2890  0701                     i1l1736:	
  2891  0701  0872               	movf	SSD_Enable@s,w
  2892  0702  00F0               	movwf	??_SSD_Enable
  2893  0703  01F1               	clrf	??_SSD_Enable+1
  2894                           
  2895                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2896                           ; Switch size 1, requested type "simple"
  2897                           ; Number of cases is 1, Range of values is 0 to 0
  2898                           ; switch strategies available:
  2899                           ; Name         Instructions Cycles
  2900                           ; simple_byte            4     3 (average)
  2901                           ; direct_byte           11     8 (fixed)
  2902                           ; jumptable            260     6 (fixed)
  2903                           ;	Chosen strategy is simple_byte
  2904  0704  0871               	movf	??_SSD_Enable+1,w
  2905  0705  3A00               	xorlw	0	; case 0
  2906  0706  1903               	skipnz
  2907  0707  2F09               	goto	i1l2166
  2908  0708  2F17               	goto	i1l105
  2909  0709                     i1l2166:	
  2910                           
  2911                           ; Switch size 1, requested type "simple"
  2912                           ; Number of cases is 4, Range of values is 0 to 3
  2913                           ; switch strategies available:
  2914                           ; Name         Instructions Cycles
  2915                           ; simple_byte           13     7 (average)
  2916                           ; direct_byte           20     8 (fixed)
  2917                           ; jumptable            260     6 (fixed)
  2918                           ;	Chosen strategy is simple_byte
  2919  0709  0870               	movf	??_SSD_Enable,w
  2920  070A  3A00               	xorlw	0	; case 0
  2921  070B  1903               	skipnz
  2922  070C  2EE5               	goto	i1l1728
  2923  070D  3A01               	xorlw	1	; case 1
  2924  070E  1903               	skipnz
  2925  070F  2EEC               	goto	i1l1730
  2926  0710  3A03               	xorlw	3	; case 2
  2927  0711  1903               	skipnz
  2928  0712  2EF3               	goto	i1l1732
  2929  0713  3A01               	xorlw	1	; case 3
  2930  0714  1903               	skipnz
  2931  0715  2EFA               	goto	i1l1734
  2932  0716  2F17               	goto	i1l105
  2933  0717                     i1l105:	
  2934  0717  0008               	return
  2935  0718                     __end_of_SSD_Enable:	
  2936                           
  2937                           	psect	text15
  2938  074C                     __ptext15:	
  2939 ;; *************** function _SSD_Disable *****************
  2940 ;; Defined at:
  2941 ;;		line 117 in file "SSD.c"
  2942 ;; Parameters:    Size  Location     Type
  2943 ;;  s               1    wreg     enum E872
  2944 ;; Auto vars:     Size  Location     Type
  2945 ;;  s               1    2[COMMON] enum E872
  2946 ;; Return value:  Size  Location     Type
  2947 ;;                  1    wreg      void 
  2948 ;; Registers used:
  2949 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2950 ;; Tracked objects:
  2951 ;;		On entry : 0/0
  2952 ;;		On exit  : 0/0
  2953 ;;		Unchanged: 0/0
  2954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2955 ;;      Params:         0       0       0       0       0
  2956 ;;      Locals:         1       0       0       0       0
  2957 ;;      Temps:          2       0       0       0       0
  2958 ;;      Totals:         3       0       0       0       0
  2959 ;;Total ram usage:        3 bytes
  2960 ;; Hardware stack levels used:    1
  2961 ;; This function calls:
  2962 ;;		Nothing
  2963 ;; This function is called by:
  2964 ;;		_SSD_Update
  2965 ;; This function uses a non-reentrant model
  2966 ;;
  2967                           
  2968                           
  2969                           ;psect for function _SSD_Disable
  2970  074C                     _SSD_Disable:	
  2971                           
  2972                           ;incstack = 0
  2973                           ; Regs used in _SSD_Disable: [wreg-fsr0h+status,2+status,0]
  2974                           ;SSD_Disable@s stored from wreg
  2975  074C  00F2               	movwf	SSD_Disable@s
  2976  074D                     i1l1704:	
  2977                           
  2978                           ;SSD.c: 117: void SSD_Disable(SSD_t s);SSD.c: 118: {;SSD.c: 119:     switch(s)
  2979  074D  2F66               	goto	i1l1714
  2980  074E                     i1l1706:	
  2981                           
  2982                           ;SSD.c: 122:             (((PORTB))=((PORTB) & ~(1<<(4)))|(SSD_OFF<<(4)));
  2983  074E  1283               	bcf	3,5	;RP0=0, select bank0
  2984  074F  1303               	bcf	3,6	;RP1=0, select bank0
  2985  0750  0806               	movf	6,w	;volatile
  2986  0751  39EF               	andlw	239
  2987  0752  0086               	movwf	6	;volatile
  2988                           
  2989                           ;SSD.c: 123:             break;
  2990  0753  2F7C               	goto	i1l95
  2991  0754                     i1l1708:	
  2992                           
  2993                           ;SSD.c: 125:             (((PORTB))=((PORTB) & ~(1<<(5)))|(SSD_OFF<<(5)));
  2994  0754  1283               	bcf	3,5	;RP0=0, select bank0
  2995  0755  1303               	bcf	3,6	;RP1=0, select bank0
  2996  0756  0806               	movf	6,w	;volatile
  2997  0757  39DF               	andlw	223
  2998  0758  0086               	movwf	6	;volatile
  2999                           
  3000                           ;SSD.c: 126:             break;
  3001  0759  2F7C               	goto	i1l95
  3002  075A                     i1l1710:	
  3003                           
  3004                           ;SSD.c: 128:             (((PORTB))=((PORTB) & ~(1<<(6)))|(SSD_OFF<<(6)));
  3005  075A  1283               	bcf	3,5	;RP0=0, select bank0
  3006  075B  1303               	bcf	3,6	;RP1=0, select bank0
  3007  075C  0806               	movf	6,w	;volatile
  3008  075D  39BF               	andlw	191
  3009  075E  0086               	movwf	6	;volatile
  3010                           
  3011                           ;SSD.c: 129:             break;
  3012  075F  2F7C               	goto	i1l95
  3013  0760                     i1l1712:	
  3014                           
  3015                           ;SSD.c: 131:             (((PORTB))=((PORTB) & ~(1<<(7)))|(SSD_OFF<<(7)));
  3016  0760  1283               	bcf	3,5	;RP0=0, select bank0
  3017  0761  1303               	bcf	3,6	;RP1=0, select bank0
  3018  0762  0806               	movf	6,w	;volatile
  3019  0763  397F               	andlw	127
  3020  0764  0086               	movwf	6	;volatile
  3021                           
  3022                           ;SSD.c: 132:             break;
  3023  0765  2F7C               	goto	i1l95
  3024  0766                     i1l1714:	
  3025  0766  0872               	movf	SSD_Disable@s,w
  3026  0767  00F0               	movwf	??_SSD_Disable
  3027  0768  01F1               	clrf	??_SSD_Disable+1
  3028                           
  3029                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3030                           ; Switch size 1, requested type "simple"
  3031                           ; Number of cases is 1, Range of values is 0 to 0
  3032                           ; switch strategies available:
  3033                           ; Name         Instructions Cycles
  3034                           ; simple_byte            4     3 (average)
  3035                           ; direct_byte           11     8 (fixed)
  3036                           ; jumptable            260     6 (fixed)
  3037                           ;	Chosen strategy is simple_byte
  3038  0769  0871               	movf	??_SSD_Disable+1,w
  3039  076A  3A00               	xorlw	0	; case 0
  3040  076B  1903               	skipnz
  3041  076C  2F6E               	goto	i1l2168
  3042  076D  2F7C               	goto	i1l95
  3043  076E                     i1l2168:	
  3044                           
  3045                           ; Switch size 1, requested type "simple"
  3046                           ; Number of cases is 4, Range of values is 0 to 3
  3047                           ; switch strategies available:
  3048                           ; Name         Instructions Cycles
  3049                           ; simple_byte           13     7 (average)
  3050                           ; direct_byte           20     8 (fixed)
  3051                           ; jumptable            260     6 (fixed)
  3052                           ;	Chosen strategy is simple_byte
  3053  076E  0870               	movf	??_SSD_Disable,w
  3054  076F  3A00               	xorlw	0	; case 0
  3055  0770  1903               	skipnz
  3056  0771  2F4E               	goto	i1l1706
  3057  0772  3A01               	xorlw	1	; case 1
  3058  0773  1903               	skipnz
  3059  0774  2F54               	goto	i1l1708
  3060  0775  3A03               	xorlw	3	; case 2
  3061  0776  1903               	skipnz
  3062  0777  2F5A               	goto	i1l1710
  3063  0778  3A01               	xorlw	1	; case 3
  3064  0779  1903               	skipnz
  3065  077A  2F60               	goto	i1l1712
  3066  077B  2F7C               	goto	i1l95
  3067  077C                     i1l95:	
  3068  077C  0008               	return
  3069  077D                     __end_of_SSD_Disable:	
  3070                           
  3071                           	psect	text16
  3072  0FE3                     __ptext16:	
  3073 ;; *************** function _SSD_Data_write *****************
  3074 ;; Defined at:
  3075 ;;		line 161 in file "SSD.c"
  3076 ;; Parameters:    Size  Location     Type
  3077 ;;		None
  3078 ;; Auto vars:     Size  Location     Type
  3079 ;;		None
  3080 ;; Return value:  Size  Location     Type
  3081 ;;                  1    wreg      void 
  3082 ;; Registers used:
  3083 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3084 ;; Tracked objects:
  3085 ;;		On entry : 0/0
  3086 ;;		On exit  : 0/0
  3087 ;;		Unchanged: 0/0
  3088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3089 ;;      Params:         0       0       0       0       0
  3090 ;;      Locals:         0       0       0       0       0
  3091 ;;      Temps:          1       0       0       0       0
  3092 ;;      Totals:         1       0       0       0       0
  3093 ;;Total ram usage:        1 bytes
  3094 ;; Hardware stack levels used:    1
  3095 ;; This function calls:
  3096 ;;		Nothing
  3097 ;; This function is called by:
  3098 ;;		_SSD_Update
  3099 ;; This function uses a non-reentrant model
  3100 ;;
  3101                           
  3102                           
  3103                           ;psect for function _SSD_Data_write
  3104  0FE3                     _SSD_Data_write:	
  3105  0FE3                     i1l1720:	
  3106                           ;incstack = 0
  3107                           ; Regs used in _SSD_Data_write: [wreg-fsr0h+status,2+status,0]
  3108                           
  3109                           
  3110                           ;SSD.c: 164:     (((PORTD))=(SSD_LOT_ARR[Buffer[currentSSD]]));
  3111  0FE3  1283               	bcf	3,5	;RP0=0, select bank0
  3112  0FE4  1303               	bcf	3,6	;RP1=0, select bank0
  3113  0FE5  0833               	movf	_currentSSD,w
  3114  0FE6  3E29               	addlw	(low (_Buffer| 0))& (0+255)
  3115  0FE7  0084               	movwf	4
  3116  0FE8  1383               	bcf	3,7	;select IRP bank0
  3117  0FE9  0800               	movf	0,w
  3118  0FEA  3E4F               	addlw	(low (_SSD_LOT_ARR| 0))& (0+255)
  3119  0FEB  0084               	movwf	4
  3120  0FEC  0800               	movf	0,w
  3121  0FED  0088               	movwf	8	;volatile
  3122  0FEE                     i1l1722:	
  3123                           
  3124                           ;SSD.c: 166:     if(currentSSD == SSD_MINUTES_UNITS)
  3125  0FEE  0833               	movf	_currentSSD,w
  3126  0FEF  1D03               	btfss	3,2
  3127  0FF0  2FF2               	goto	u103_21
  3128  0FF1  2FF3               	goto	u103_20
  3129  0FF2                     u103_21:	
  3130  0FF2  2FFF               	goto	i1l109
  3131  0FF3                     u103_20:	
  3132  0FF3                     i1l1724:	
  3133                           
  3134                           ;SSD.c: 167:     {;SSD.c: 168:         (((PORTD))=((PORTD) & ~(1<<(7)))|(Second_Dot_Stat
      +                          e<<(7)));
  3135  0FF3  0832               	movf	_Second_Dot_State,w
  3136  0FF4  00F0               	movwf	??_SSD_Data_write
  3137  0FF5  3007               	movlw	7
  3138  0FF6                     u104_25:	
  3139  0FF6  1003               	clrc
  3140  0FF7  0DF0               	rlf	??_SSD_Data_write,f
  3141  0FF8  3EFF               	addlw	-1
  3142  0FF9  1D03               	skipz
  3143  0FFA  2FF6               	goto	u104_25
  3144  0FFB  0808               	movf	8,w	;volatile
  3145  0FFC  397F               	andlw	127
  3146  0FFD  0470               	iorwf	??_SSD_Data_write,w
  3147  0FFE  0088               	movwf	8	;volatile
  3148  0FFF                     i1l109:	
  3149  0FFF  0008               	return
  3150  1000                     __end_of_SSD_Data_write:	
  3151                           
  3152                           	psect	text17
  3153  0674                     __ptext17:	
  3154 ;; *************** function _Disp_Update *****************
  3155 ;; Defined at:
  3156 ;;		line 61 in file "Disp.c"
  3157 ;; Parameters:    Size  Location     Type
  3158 ;;		None
  3159 ;; Auto vars:     Size  Location     Type
  3160 ;;		None
  3161 ;; Return value:  Size  Location     Type
  3162 ;;                  1    wreg      void 
  3163 ;; Registers used:
  3164 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3165 ;; Tracked objects:
  3166 ;;		On entry : 0/0
  3167 ;;		On exit  : 0/0
  3168 ;;		Unchanged: 0/0
  3169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3170 ;;      Params:         0       0       0       0       0
  3171 ;;      Locals:         0       0       0       0       0
  3172 ;;      Temps:          2       0       0       0       0
  3173 ;;      Totals:         2       0       0       0       0
  3174 ;;Total ram usage:        2 bytes
  3175 ;; Hardware stack levels used:    1
  3176 ;; Hardware stack levels required when called:    2
  3177 ;; This function calls:
  3178 ;;		_CLOCK_GetMode
  3179 ;;		_DISP_Normal_Operation
  3180 ;;		_DISP_Set_Hours_Operation
  3181 ;;		_DISP_Set_Minutes_Operation
  3182 ;; This function is called by:
  3183 ;;		_TMR0_ISR
  3184 ;; This function uses a non-reentrant model
  3185 ;;
  3186                           
  3187                           
  3188                           ;psect for function _Disp_Update
  3189  0674                     _Disp_Update:	
  3190  0674                     i1l1990:	
  3191                           ;incstack = 0
  3192                           ; Regs used in _Disp_Update: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3193                           
  3194                           
  3195                           ;Disp.c: 66:     static u8_t DISP_Time_Counter = 10;;Disp.c: 67:     DISP_Time_Counter +
      +                          = (5);
  3196  0674  3005               	movlw	5
  3197  0675  00FC               	movwf	??_Disp_Update
  3198  0676  087C               	movf	??_Disp_Update,w
  3199  0677  1283               	bcf	3,5	;RP0=0, select bank0
  3200  0678  1303               	bcf	3,6	;RP1=0, select bank0
  3201  0679  07DA               	addwf	Disp_Update@DISP_Time_Counter,f
  3202                           
  3203                           ;Disp.c: 69:     if(DISP_Time_Counter != (20))
  3204  067A  3014               	movlw	20
  3205  067B  065A               	xorwf	Disp_Update@DISP_Time_Counter,w
  3206  067C  1903               	btfsc	3,2
  3207  067D  2E7F               	goto	u136_21
  3208  067E  2E80               	goto	u136_20
  3209  067F                     u136_21:	
  3210  067F  2E81               	goto	i1l1994
  3211  0680                     u136_20:	
  3212  0680  2EAC               	goto	i1l236
  3213  0681                     i1l1994:	
  3214                           
  3215                           ;Disp.c: 73:     DISP_Time_Counter = 0;
  3216  0681  01DA               	clrf	Disp_Update@DISP_Time_Counter
  3217                           
  3218                           ;Disp.c: 75:     switch(CLOCK_GetMode())
  3219  0682  2E95               	goto	i1l2004
  3220  0683                     i1l1996:	
  3221                           
  3222                           ;Disp.c: 79:             DISP_Normal_Operation();
  3223  0683  120A  118A  2271  120A  118A  	fcall	_DISP_Normal_Operation
  3224                           
  3225                           ;Disp.c: 80:             break;
  3226  0688  2EAC               	goto	i1l236
  3227  0689                     i1l1998:	
  3228                           
  3229                           ;Disp.c: 83:             DISP_Set_Hours_Operation();
  3230  0689  120A  118A  2126  120A  118A  	fcall	_DISP_Set_Hours_Operation
  3231                           
  3232                           ;Disp.c: 84:             break;
  3233  068E  2EAC               	goto	i1l236
  3234  068F                     i1l2000:	
  3235                           
  3236                           ;Disp.c: 87:             DISP_Set_Minutes_Operation();
  3237  068F  120A  118A  21CF  120A  118A  	fcall	_DISP_Set_Minutes_Operation
  3238                           
  3239                           ;Disp.c: 88:             break;
  3240  0694  2EAC               	goto	i1l236
  3241  0695                     i1l2004:	
  3242  0695  120A  118A  27FC  120A  118A  	fcall	_CLOCK_GetMode
  3243  069A  00FC               	movwf	??_Disp_Update
  3244  069B  01FD               	clrf	??_Disp_Update+1
  3245                           
  3246                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3247                           ; Switch size 1, requested type "simple"
  3248                           ; Number of cases is 1, Range of values is 0 to 0
  3249                           ; switch strategies available:
  3250                           ; Name         Instructions Cycles
  3251                           ; simple_byte            4     3 (average)
  3252                           ; direct_byte           11     8 (fixed)
  3253                           ; jumptable            260     6 (fixed)
  3254                           ;	Chosen strategy is simple_byte
  3255  069C  087D               	movf	??_Disp_Update+1,w
  3256  069D  3A00               	xorlw	0	; case 0
  3257  069E  1903               	skipnz
  3258  069F  2EA1               	goto	i1l2170
  3259  06A0  2EAC               	goto	i1l236
  3260  06A1                     i1l2170:	
  3261                           
  3262                           ; Switch size 1, requested type "simple"
  3263                           ; Number of cases is 3, Range of values is 0 to 2
  3264                           ; switch strategies available:
  3265                           ; Name         Instructions Cycles
  3266                           ; simple_byte           10     6 (average)
  3267                           ; direct_byte           17     8 (fixed)
  3268                           ; jumptable            260     6 (fixed)
  3269                           ;	Chosen strategy is simple_byte
  3270  06A1  087C               	movf	??_Disp_Update,w
  3271  06A2  3A00               	xorlw	0	; case 0
  3272  06A3  1903               	skipnz
  3273  06A4  2E83               	goto	i1l1996
  3274  06A5  3A01               	xorlw	1	; case 1
  3275  06A6  1903               	skipnz
  3276  06A7  2E89               	goto	i1l1998
  3277  06A8  3A03               	xorlw	3	; case 2
  3278  06A9  1903               	skipnz
  3279  06AA  2E8F               	goto	i1l2000
  3280  06AB  2EAC               	goto	i1l236
  3281  06AC                     i1l236:	
  3282  06AC  0008               	return
  3283  06AD                     __end_of_Disp_Update:	
  3284                           
  3285                           	psect	text18
  3286  01CF                     __ptext18:	
  3287 ;; *************** function _DISP_Set_Minutes_Operation *****************
  3288 ;; Defined at:
  3289 ;;		line 163 in file "Disp.c"
  3290 ;; Parameters:    Size  Location     Type
  3291 ;;		None
  3292 ;; Auto vars:     Size  Location     Type
  3293 ;;  tt              5    3[BANK0 ] struct .
  3294 ;; Return value:  Size  Location     Type
  3295 ;;                  1    wreg      void 
  3296 ;; Registers used:
  3297 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3298 ;; Tracked objects:
  3299 ;;		On entry : 0/0
  3300 ;;		On exit  : 0/0
  3301 ;;		Unchanged: 0/0
  3302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3303 ;;      Params:         0       0       0       0       0
  3304 ;;      Locals:         0       5       0       0       0
  3305 ;;      Temps:          0       3       0       0       0
  3306 ;;      Totals:         0       8       0       0       0
  3307 ;;Total ram usage:        8 bytes
  3308 ;; Hardware stack levels used:    1
  3309 ;; Hardware stack levels required when called:    1
  3310 ;; This function calls:
  3311 ;;		_CLOCK_GetTime
  3312 ;;		_SSD_Set_Second_Dot
  3313 ;;		___awdiv
  3314 ;;		___awmod
  3315 ;;		i1_SSD_Set_Symbol
  3316 ;; This function is called by:
  3317 ;;		_Disp_Update
  3318 ;; This function uses a non-reentrant model
  3319 ;;
  3320                           
  3321                           
  3322                           ;psect for function _DISP_Set_Minutes_Operation
  3323  01CF                     _DISP_Set_Minutes_Operation:	
  3324  01CF                     i1l1846:	
  3325                           ;incstack = 0
  3326                           ; Regs used in _DISP_Set_Minutes_Operation: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3327                           
  3328                           
  3329                           ;Disp.c: 167:     Time_t tt;;Disp.c: 168:     CLOCK_GetTime(&tt);
  3330  01CF  303C               	movlw	(low (DISP_Set_Minutes_Operation@tt| 0))& (0+255)
  3331  01D0  120A  118A  27CE  120A  118A  	fcall	_CLOCK_GetTime
  3332                           
  3333                           ;Disp.c: 171:     SSD_Set_Symbol(tt.hours/10,SSD_HOURS_TENS);
  3334  01D5  3003               	movlw	3
  3335  01D6  1283               	bcf	3,5	;RP0=0, select bank0
  3336  01D7  1303               	bcf	3,6	;RP1=0, select bank0
  3337  01D8  00B9               	movwf	??_DISP_Set_Minutes_Operation
  3338  01D9  0839               	movf	??_DISP_Set_Minutes_Operation,w
  3339  01DA  00F9               	movwf	i1SSD_Set_Symbol@index
  3340  01DB  300A               	movlw	10
  3341  01DC  00F0               	movwf	___awdiv@divisor
  3342  01DD  3000               	movlw	0
  3343  01DE  00F1               	movwf	___awdiv@divisor+1
  3344  01DF  083C               	movf	DISP_Set_Minutes_Operation@tt,w
  3345  01E0  00BA               	movwf	??_DISP_Set_Minutes_Operation+1
  3346  01E1  01BB               	clrf	??_DISP_Set_Minutes_Operation+2
  3347  01E2  083A               	movf	??_DISP_Set_Minutes_Operation+1,w
  3348  01E3  00F2               	movwf	___awdiv@dividend
  3349  01E4  083B               	movf	??_DISP_Set_Minutes_Operation+2,w
  3350  01E5  00F3               	movwf	___awdiv@dividend+1
  3351  01E6  120A  118A  23D6  120A  118A  	fcall	___awdiv
  3352  01EB  0870               	movf	?___awdiv,w
  3353  01EC  120A  158A  2772  120A  118A  	fcall	i1_SSD_Set_Symbol
  3354                           
  3355                           ;Disp.c: 172:     SSD_Set_Symbol(tt.hours%10,SSD_HOURS_UNITS);
  3356  01F1  3002               	movlw	2
  3357  01F2  1283               	bcf	3,5	;RP0=0, select bank0
  3358  01F3  1303               	bcf	3,6	;RP1=0, select bank0
  3359  01F4  00B9               	movwf	??_DISP_Set_Minutes_Operation
  3360  01F5  0839               	movf	??_DISP_Set_Minutes_Operation,w
  3361  01F6  00F9               	movwf	i1SSD_Set_Symbol@index
  3362  01F7  300A               	movlw	10
  3363  01F8  00F0               	movwf	___awmod@divisor
  3364  01F9  3000               	movlw	0
  3365  01FA  00F1               	movwf	___awmod@divisor+1
  3366  01FB  083C               	movf	DISP_Set_Minutes_Operation@tt,w
  3367  01FC  00BA               	movwf	??_DISP_Set_Minutes_Operation+1
  3368  01FD  01BB               	clrf	??_DISP_Set_Minutes_Operation+2
  3369  01FE  083A               	movf	??_DISP_Set_Minutes_Operation+1,w
  3370  01FF  00F2               	movwf	___awmod@dividend
  3371  0200  083B               	movf	??_DISP_Set_Minutes_Operation+2,w
  3372  0201  00F3               	movwf	___awmod@dividend+1
  3373  0202  120A  118A  24FD  120A  118A  	fcall	___awmod
  3374  0207  0870               	movf	?___awmod,w
  3375  0208  120A  158A  2772  120A  118A  	fcall	i1_SSD_Set_Symbol
  3376  020D                     i1l1848:	
  3377                           
  3378                           ;Disp.c: 180:     SSD_Set_Second_Dot(SSD_OFF);
  3379  020D  3000               	movlw	0
  3380  020E  120A  158A  2762  120A  118A  	fcall	_SSD_Set_Second_Dot
  3381  0213                     i1l1850:	
  3382                           
  3383                           ;Disp.c: 181:     if(Disp_Blink_counter < 25)
  3384  0213  3019               	movlw	25
  3385  0214  1283               	bcf	3,5	;RP0=0, select bank0
  3386  0215  1303               	bcf	3,6	;RP1=0, select bank0
  3387  0216  022F               	subwf	_Disp_Blink_counter,w
  3388  0217  1803               	skipnc
  3389  0218  2A1A               	goto	u125_21
  3390  0219  2A1B               	goto	u125_20
  3391  021A                     u125_21:	
  3392  021A  2A4C               	goto	i1l1854
  3393  021B                     u125_20:	
  3394  021B                     i1l1852:	
  3395                           
  3396                           ;Disp.c: 182:     {;Disp.c: 184:         SSD_Set_Symbol(tt.minuts/10,SSD_MINUTES_TENS);
  3397  021B  01F9               	clrf	i1SSD_Set_Symbol@index
  3398  021C  0AF9               	incf	i1SSD_Set_Symbol@index,f
  3399  021D  300A               	movlw	10
  3400  021E  00F0               	movwf	___awdiv@divisor
  3401  021F  3000               	movlw	0
  3402  0220  00F1               	movwf	___awdiv@divisor+1
  3403  0221  083D               	movf	DISP_Set_Minutes_Operation@tt+1,w
  3404  0222  00B9               	movwf	??_DISP_Set_Minutes_Operation
  3405  0223  01BA               	clrf	??_DISP_Set_Minutes_Operation+1
  3406  0224  0839               	movf	??_DISP_Set_Minutes_Operation,w
  3407  0225  00F2               	movwf	___awdiv@dividend
  3408  0226  083A               	movf	??_DISP_Set_Minutes_Operation+1,w
  3409  0227  00F3               	movwf	___awdiv@dividend+1
  3410  0228  120A  118A  23D6  120A  118A  	fcall	___awdiv
  3411  022D  0870               	movf	?___awdiv,w
  3412  022E  120A  158A  2772  120A  118A  	fcall	i1_SSD_Set_Symbol
  3413                           
  3414                           ;Disp.c: 185:         SSD_Set_Symbol(tt.minuts%10,SSD_MINUTES_UNITS);
  3415  0233  01F9               	clrf	i1SSD_Set_Symbol@index
  3416  0234  300A               	movlw	10
  3417  0235  00F0               	movwf	___awmod@divisor
  3418  0236  3000               	movlw	0
  3419  0237  00F1               	movwf	___awmod@divisor+1
  3420  0238  1283               	bcf	3,5	;RP0=0, select bank0
  3421  0239  1303               	bcf	3,6	;RP1=0, select bank0
  3422  023A  083D               	movf	DISP_Set_Minutes_Operation@tt+1,w
  3423  023B  00B9               	movwf	??_DISP_Set_Minutes_Operation
  3424  023C  01BA               	clrf	??_DISP_Set_Minutes_Operation+1
  3425  023D  0839               	movf	??_DISP_Set_Minutes_Operation,w
  3426  023E  00F2               	movwf	___awmod@dividend
  3427  023F  083A               	movf	??_DISP_Set_Minutes_Operation+1,w
  3428  0240  00F3               	movwf	___awmod@dividend+1
  3429  0241  120A  118A  24FD  120A  118A  	fcall	___awmod
  3430  0246  0870               	movf	?___awmod,w
  3431  0247  120A  158A  2772  120A  118A  	fcall	i1_SSD_Set_Symbol
  3432  024C                     i1l1854:	
  3433                           
  3434                           ;Disp.c: 187:     if(Disp_Blink_counter>25)
  3435  024C  301A               	movlw	26
  3436  024D  1283               	bcf	3,5	;RP0=0, select bank0
  3437  024E  1303               	bcf	3,6	;RP1=0, select bank0
  3438  024F  022F               	subwf	_Disp_Blink_counter,w
  3439  0250  1C03               	skipc
  3440  0251  2A53               	goto	u126_21
  3441  0252  2A54               	goto	u126_20
  3442  0253                     u126_21:	
  3443  0253  2A63               	goto	i1l1858
  3444  0254                     u126_20:	
  3445  0254                     i1l1856:	
  3446                           
  3447                           ;Disp.c: 188:     {;Disp.c: 190:         SSD_Set_Symbol(SSD_NULL,SSD_MINUTES_TENS);
  3448  0254  01F9               	clrf	i1SSD_Set_Symbol@index
  3449  0255  0AF9               	incf	i1SSD_Set_Symbol@index,f
  3450  0256  300A               	movlw	10
  3451  0257  120A  158A  2772  120A  118A  	fcall	i1_SSD_Set_Symbol
  3452                           
  3453                           ;Disp.c: 191:         SSD_Set_Symbol(SSD_NULL,SSD_MINUTES_UNITS);
  3454  025C  01F9               	clrf	i1SSD_Set_Symbol@index
  3455  025D  300A               	movlw	10
  3456  025E  120A  158A  2772  120A  118A  	fcall	i1_SSD_Set_Symbol
  3457  0263                     i1l1858:	
  3458                           
  3459                           ;Disp.c: 193:     if(Disp_Blink_counter>50)
  3460  0263  3033               	movlw	51
  3461  0264  1283               	bcf	3,5	;RP0=0, select bank0
  3462  0265  1303               	bcf	3,6	;RP1=0, select bank0
  3463  0266  022F               	subwf	_Disp_Blink_counter,w
  3464  0267  1C03               	skipc
  3465  0268  2A6A               	goto	u127_21
  3466  0269  2A6B               	goto	u127_20
  3467  026A                     u127_21:	
  3468  026A  2A6C               	goto	i1l1862
  3469  026B                     u127_20:	
  3470  026B                     i1l1860:	
  3471                           
  3472                           ;Disp.c: 194:     {;Disp.c: 196:         Disp_Blink_counter = 0;
  3473  026B  01AF               	clrf	_Disp_Blink_counter
  3474  026C                     i1l1862:	
  3475                           
  3476                           ;Disp.c: 198:     Disp_Blink_counter++;
  3477  026C  3001               	movlw	1
  3478  026D  00B9               	movwf	??_DISP_Set_Minutes_Operation
  3479  026E  0839               	movf	??_DISP_Set_Minutes_Operation,w
  3480  026F  07AF               	addwf	_Disp_Blink_counter,f
  3481  0270                     i1l257:	
  3482  0270  0008               	return
  3483  0271                     __end_of_DISP_Set_Minutes_Operation:	
  3484                           
  3485                           	psect	text19
  3486  0126                     __ptext19:	
  3487 ;; *************** function _DISP_Set_Hours_Operation *****************
  3488 ;; Defined at:
  3489 ;;		line 127 in file "Disp.c"
  3490 ;; Parameters:    Size  Location     Type
  3491 ;;		None
  3492 ;; Auto vars:     Size  Location     Type
  3493 ;;  tt              5    3[BANK0 ] struct .
  3494 ;; Return value:  Size  Location     Type
  3495 ;;                  1    wreg      void 
  3496 ;; Registers used:
  3497 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3498 ;; Tracked objects:
  3499 ;;		On entry : 0/0
  3500 ;;		On exit  : 0/0
  3501 ;;		Unchanged: 0/0
  3502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3503 ;;      Params:         0       0       0       0       0
  3504 ;;      Locals:         0       5       0       0       0
  3505 ;;      Temps:          0       3       0       0       0
  3506 ;;      Totals:         0       8       0       0       0
  3507 ;;Total ram usage:        8 bytes
  3508 ;; Hardware stack levels used:    1
  3509 ;; Hardware stack levels required when called:    1
  3510 ;; This function calls:
  3511 ;;		_CLOCK_GetTime
  3512 ;;		_SSD_Set_Second_Dot
  3513 ;;		___awdiv
  3514 ;;		___awmod
  3515 ;;		i1_SSD_Set_Symbol
  3516 ;; This function is called by:
  3517 ;;		_Disp_Update
  3518 ;; This function uses a non-reentrant model
  3519 ;;
  3520                           
  3521                           
  3522                           ;psect for function _DISP_Set_Hours_Operation
  3523  0126                     _DISP_Set_Hours_Operation:	
  3524  0126                     i1l1828:	
  3525                           ;incstack = 0
  3526                           ; Regs used in _DISP_Set_Hours_Operation: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3527                           
  3528                           
  3529                           ;Disp.c: 131:     Time_t tt;;Disp.c: 132:     CLOCK_GetTime(&tt);
  3530  0126  303C               	movlw	(low (DISP_Set_Hours_Operation@tt| 0))& (0+255)
  3531  0127  120A  118A  27CE  120A  118A  	fcall	_CLOCK_GetTime
  3532                           
  3533                           ;Disp.c: 134:     SSD_Set_Symbol(tt.minuts/10,SSD_MINUTES_TENS);
  3534  012C  01F9               	clrf	i1SSD_Set_Symbol@index
  3535  012D  0AF9               	incf	i1SSD_Set_Symbol@index,f
  3536  012E  300A               	movlw	10
  3537  012F  00F0               	movwf	___awdiv@divisor
  3538  0130  3000               	movlw	0
  3539  0131  00F1               	movwf	___awdiv@divisor+1
  3540  0132  1283               	bcf	3,5	;RP0=0, select bank0
  3541  0133  1303               	bcf	3,6	;RP1=0, select bank0
  3542  0134  083D               	movf	DISP_Set_Hours_Operation@tt+1,w
  3543  0135  00B9               	movwf	??_DISP_Set_Hours_Operation
  3544  0136  01BA               	clrf	??_DISP_Set_Hours_Operation+1
  3545  0137  0839               	movf	??_DISP_Set_Hours_Operation,w
  3546  0138  00F2               	movwf	___awdiv@dividend
  3547  0139  083A               	movf	??_DISP_Set_Hours_Operation+1,w
  3548  013A  00F3               	movwf	___awdiv@dividend+1
  3549  013B  120A  118A  23D6  120A  118A  	fcall	___awdiv
  3550  0140  0870               	movf	?___awdiv,w
  3551  0141  120A  158A  2772  120A  118A  	fcall	i1_SSD_Set_Symbol
  3552                           
  3553                           ;Disp.c: 135:     SSD_Set_Symbol(tt.minuts%10,SSD_MINUTES_UNITS);
  3554  0146  01F9               	clrf	i1SSD_Set_Symbol@index
  3555  0147  300A               	movlw	10
  3556  0148  00F0               	movwf	___awmod@divisor
  3557  0149  3000               	movlw	0
  3558  014A  00F1               	movwf	___awmod@divisor+1
  3559  014B  1283               	bcf	3,5	;RP0=0, select bank0
  3560  014C  1303               	bcf	3,6	;RP1=0, select bank0
  3561  014D  083D               	movf	DISP_Set_Hours_Operation@tt+1,w
  3562  014E  00B9               	movwf	??_DISP_Set_Hours_Operation
  3563  014F  01BA               	clrf	??_DISP_Set_Hours_Operation+1
  3564  0150  0839               	movf	??_DISP_Set_Hours_Operation,w
  3565  0151  00F2               	movwf	___awmod@dividend
  3566  0152  083A               	movf	??_DISP_Set_Hours_Operation+1,w
  3567  0153  00F3               	movwf	___awmod@dividend+1
  3568  0154  120A  118A  24FD  120A  118A  	fcall	___awmod
  3569  0159  0870               	movf	?___awmod,w
  3570  015A  120A  158A  2772  120A  118A  	fcall	i1_SSD_Set_Symbol
  3571  015F                     i1l1830:	
  3572                           
  3573                           ;Disp.c: 139:     SSD_Set_Second_Dot(SSD_OFF);
  3574  015F  3000               	movlw	0
  3575  0160  120A  158A  2762  120A  118A  	fcall	_SSD_Set_Second_Dot
  3576  0165                     i1l1832:	
  3577                           
  3578                           ;Disp.c: 141:     if(Disp_Blink_counter < 25)
  3579  0165  3019               	movlw	25
  3580  0166  1283               	bcf	3,5	;RP0=0, select bank0
  3581  0167  1303               	bcf	3,6	;RP1=0, select bank0
  3582  0168  022F               	subwf	_Disp_Blink_counter,w
  3583  0169  1803               	skipnc
  3584  016A  296C               	goto	u122_21
  3585  016B  296D               	goto	u122_20
  3586  016C                     u122_21:	
  3587  016C  29A3               	goto	i1l1836
  3588  016D                     u122_20:	
  3589  016D                     i1l1834:	
  3590                           
  3591                           ;Disp.c: 142:     {;Disp.c: 144:         SSD_Set_Symbol(tt.hours/10,SSD_HOURS_TENS);
  3592  016D  3003               	movlw	3
  3593  016E  00B9               	movwf	??_DISP_Set_Hours_Operation
  3594  016F  0839               	movf	??_DISP_Set_Hours_Operation,w
  3595  0170  00F9               	movwf	i1SSD_Set_Symbol@index
  3596  0171  300A               	movlw	10
  3597  0172  00F0               	movwf	___awdiv@divisor
  3598  0173  3000               	movlw	0
  3599  0174  00F1               	movwf	___awdiv@divisor+1
  3600  0175  083C               	movf	DISP_Set_Hours_Operation@tt,w
  3601  0176  00BA               	movwf	??_DISP_Set_Hours_Operation+1
  3602  0177  01BB               	clrf	??_DISP_Set_Hours_Operation+2
  3603  0178  083A               	movf	??_DISP_Set_Hours_Operation+1,w
  3604  0179  00F2               	movwf	___awdiv@dividend
  3605  017A  083B               	movf	??_DISP_Set_Hours_Operation+2,w
  3606  017B  00F3               	movwf	___awdiv@dividend+1
  3607  017C  120A  118A  23D6  120A  118A  	fcall	___awdiv
  3608  0181  0870               	movf	?___awdiv,w
  3609  0182  120A  158A  2772  120A  118A  	fcall	i1_SSD_Set_Symbol
  3610                           
  3611                           ;Disp.c: 145:         SSD_Set_Symbol(tt.hours%10,SSD_HOURS_UNITS);
  3612  0187  3002               	movlw	2
  3613  0188  1283               	bcf	3,5	;RP0=0, select bank0
  3614  0189  1303               	bcf	3,6	;RP1=0, select bank0
  3615  018A  00B9               	movwf	??_DISP_Set_Hours_Operation
  3616  018B  0839               	movf	??_DISP_Set_Hours_Operation,w
  3617  018C  00F9               	movwf	i1SSD_Set_Symbol@index
  3618  018D  300A               	movlw	10
  3619  018E  00F0               	movwf	___awmod@divisor
  3620  018F  3000               	movlw	0
  3621  0190  00F1               	movwf	___awmod@divisor+1
  3622  0191  083C               	movf	DISP_Set_Hours_Operation@tt,w
  3623  0192  00BA               	movwf	??_DISP_Set_Hours_Operation+1
  3624  0193  01BB               	clrf	??_DISP_Set_Hours_Operation+2
  3625  0194  083A               	movf	??_DISP_Set_Hours_Operation+1,w
  3626  0195  00F2               	movwf	___awmod@dividend
  3627  0196  083B               	movf	??_DISP_Set_Hours_Operation+2,w
  3628  0197  00F3               	movwf	___awmod@dividend+1
  3629  0198  120A  118A  24FD  120A  118A  	fcall	___awmod
  3630  019D  0870               	movf	?___awmod,w
  3631  019E  120A  158A  2772  120A  118A  	fcall	i1_SSD_Set_Symbol
  3632  01A3                     i1l1836:	
  3633                           
  3634                           ;Disp.c: 147:     if(Disp_Blink_counter>25)
  3635  01A3  301A               	movlw	26
  3636  01A4  1283               	bcf	3,5	;RP0=0, select bank0
  3637  01A5  1303               	bcf	3,6	;RP1=0, select bank0
  3638  01A6  022F               	subwf	_Disp_Blink_counter,w
  3639  01A7  1C03               	skipc
  3640  01A8  29AA               	goto	u123_21
  3641  01A9  29AB               	goto	u123_20
  3642  01AA                     u123_21:	
  3643  01AA  29C1               	goto	i1l1840
  3644  01AB                     u123_20:	
  3645  01AB                     i1l1838:	
  3646                           
  3647                           ;Disp.c: 148:     {;Disp.c: 150:         SSD_Set_Symbol(SSD_NULL,SSD_HOURS_TENS);
  3648  01AB  3003               	movlw	3
  3649  01AC  00B9               	movwf	??_DISP_Set_Hours_Operation
  3650  01AD  0839               	movf	??_DISP_Set_Hours_Operation,w
  3651  01AE  00F9               	movwf	i1SSD_Set_Symbol@index
  3652  01AF  300A               	movlw	10
  3653  01B0  120A  158A  2772  120A  118A  	fcall	i1_SSD_Set_Symbol
  3654                           
  3655                           ;Disp.c: 151:         SSD_Set_Symbol(SSD_NULL,SSD_HOURS_UNITS);
  3656  01B5  3002               	movlw	2
  3657  01B6  1283               	bcf	3,5	;RP0=0, select bank0
  3658  01B7  1303               	bcf	3,6	;RP1=0, select bank0
  3659  01B8  00B9               	movwf	??_DISP_Set_Hours_Operation
  3660  01B9  0839               	movf	??_DISP_Set_Hours_Operation,w
  3661  01BA  00F9               	movwf	i1SSD_Set_Symbol@index
  3662  01BB  300A               	movlw	10
  3663  01BC  120A  158A  2772  120A  118A  	fcall	i1_SSD_Set_Symbol
  3664  01C1                     i1l1840:	
  3665                           
  3666                           ;Disp.c: 153:     if(Disp_Blink_counter>50)
  3667  01C1  3033               	movlw	51
  3668  01C2  1283               	bcf	3,5	;RP0=0, select bank0
  3669  01C3  1303               	bcf	3,6	;RP1=0, select bank0
  3670  01C4  022F               	subwf	_Disp_Blink_counter,w
  3671  01C5  1C03               	skipc
  3672  01C6  29C8               	goto	u124_21
  3673  01C7  29C9               	goto	u124_20
  3674  01C8                     u124_21:	
  3675  01C8  29CA               	goto	i1l1844
  3676  01C9                     u124_20:	
  3677  01C9                     i1l1842:	
  3678                           
  3679                           ;Disp.c: 154:     {;Disp.c: 156:         Disp_Blink_counter = 0;
  3680  01C9  01AF               	clrf	_Disp_Blink_counter
  3681  01CA                     i1l1844:	
  3682                           
  3683                           ;Disp.c: 158:     Disp_Blink_counter++;
  3684  01CA  3001               	movlw	1
  3685  01CB  00B9               	movwf	??_DISP_Set_Hours_Operation
  3686  01CC  0839               	movf	??_DISP_Set_Hours_Operation,w
  3687  01CD  07AF               	addwf	_Disp_Blink_counter,f
  3688  01CE                     i1l251:	
  3689  01CE  0008               	return
  3690  01CF                     __end_of_DISP_Set_Hours_Operation:	
  3691                           
  3692                           	psect	text20
  3693  0F62                     __ptext20:	
  3694 ;; *************** function _SSD_Set_Second_Dot *****************
  3695 ;; Defined at:
  3696 ;;		line 185 in file "SSD.c"
  3697 ;; Parameters:    Size  Location     Type
  3698 ;;  s               1    wreg     enum E878
  3699 ;; Auto vars:     Size  Location     Type
  3700 ;;  s               1    1[COMMON] enum E878
  3701 ;; Return value:  Size  Location     Type
  3702 ;;                  1    wreg      void 
  3703 ;; Registers used:
  3704 ;;		wreg
  3705 ;; Tracked objects:
  3706 ;;		On entry : 0/0
  3707 ;;		On exit  : 0/0
  3708 ;;		Unchanged: 0/0
  3709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3710 ;;      Params:         0       0       0       0       0
  3711 ;;      Locals:         1       0       0       0       0
  3712 ;;      Temps:          1       0       0       0       0
  3713 ;;      Totals:         2       0       0       0       0
  3714 ;;Total ram usage:        2 bytes
  3715 ;; Hardware stack levels used:    1
  3716 ;; This function calls:
  3717 ;;		Nothing
  3718 ;; This function is called by:
  3719 ;;		_DISP_Set_Hours_Operation
  3720 ;;		_DISP_Set_Minutes_Operation
  3721 ;; This function uses a non-reentrant model
  3722 ;;
  3723                           
  3724                           
  3725                           ;psect for function _SSD_Set_Second_Dot
  3726  0F62                     _SSD_Set_Second_Dot:	
  3727                           
  3728                           ;incstack = 0
  3729                           ; Regs used in _SSD_Set_Second_Dot: [wreg]
  3730                           ;SSD_Set_Second_Dot@s stored from wreg
  3731  0F62  00F1               	movwf	SSD_Set_Second_Dot@s
  3732  0F63                     i1l1588:	
  3733                           
  3734                           ;SSD.c: 185: void SSD_Set_Second_Dot(tSSD_State s);SSD.c: 186: {;SSD.c: 187:     Second_
      +                          Dot_State = s;
  3735  0F63  0871               	movf	SSD_Set_Second_Dot@s,w
  3736  0F64  00F0               	movwf	??_SSD_Set_Second_Dot
  3737  0F65  0870               	movf	??_SSD_Set_Second_Dot,w
  3738  0F66  1283               	bcf	3,5	;RP0=0, select bank0
  3739  0F67  1303               	bcf	3,6	;RP1=0, select bank0
  3740  0F68  00B2               	movwf	_Second_Dot_State
  3741  0F69                     i1l115:	
  3742  0F69  0008               	return
  3743  0F6A                     __end_of_SSD_Set_Second_Dot:	
  3744                           
  3745                           	psect	text21
  3746  0271                     __ptext21:	
  3747 ;; *************** function _DISP_Normal_Operation *****************
  3748 ;; Defined at:
  3749 ;;		line 98 in file "Disp.c"
  3750 ;; Parameters:    Size  Location     Type
  3751 ;;		None
  3752 ;; Auto vars:     Size  Location     Type
  3753 ;;  tt              5    3[BANK0 ] struct .
  3754 ;; Return value:  Size  Location     Type
  3755 ;;                  1    wreg      void 
  3756 ;; Registers used:
  3757 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3758 ;; Tracked objects:
  3759 ;;		On entry : 0/0
  3760 ;;		On exit  : 0/0
  3761 ;;		Unchanged: 0/0
  3762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3763 ;;      Params:         0       0       0       0       0
  3764 ;;      Locals:         0       5       0       0       0
  3765 ;;      Temps:          0       3       0       0       0
  3766 ;;      Totals:         0       8       0       0       0
  3767 ;;Total ram usage:        8 bytes
  3768 ;; Hardware stack levels used:    1
  3769 ;; Hardware stack levels required when called:    1
  3770 ;; This function calls:
  3771 ;;		_CLOCK_GetTime
  3772 ;;		_SSD_Toggle_Second_Dot
  3773 ;;		___awdiv
  3774 ;;		___awmod
  3775 ;;		i1_SSD_Set_Symbol
  3776 ;; This function is called by:
  3777 ;;		_Disp_Update
  3778 ;; This function uses a non-reentrant model
  3779 ;;
  3780                           
  3781                           
  3782                           ;psect for function _DISP_Normal_Operation
  3783  0271                     _DISP_Normal_Operation:	
  3784  0271                     i1l1818:	
  3785                           ;incstack = 0
  3786                           ; Regs used in _DISP_Normal_Operation: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3787                           
  3788                           
  3789                           ;Disp.c: 101:     Time_t tt;;Disp.c: 102:     CLOCK_GetTime(&tt);
  3790  0271  303C               	movlw	(low (DISP_Normal_Operation@tt| 0))& (0+255)
  3791  0272  120A  118A  27CE  120A  118A  	fcall	_CLOCK_GetTime
  3792                           
  3793                           ;Disp.c: 105:     SSD_Set_Symbol(tt.hours/10,SSD_HOURS_TENS);
  3794  0277  3003               	movlw	3
  3795  0278  1283               	bcf	3,5	;RP0=0, select bank0
  3796  0279  1303               	bcf	3,6	;RP1=0, select bank0
  3797  027A  00B9               	movwf	??_DISP_Normal_Operation
  3798  027B  0839               	movf	??_DISP_Normal_Operation,w
  3799  027C  00F9               	movwf	i1SSD_Set_Symbol@index
  3800  027D  300A               	movlw	10
  3801  027E  00F0               	movwf	___awdiv@divisor
  3802  027F  3000               	movlw	0
  3803  0280  00F1               	movwf	___awdiv@divisor+1
  3804  0281  083C               	movf	DISP_Normal_Operation@tt,w
  3805  0282  00BA               	movwf	??_DISP_Normal_Operation+1
  3806  0283  01BB               	clrf	??_DISP_Normal_Operation+2
  3807  0284  083A               	movf	??_DISP_Normal_Operation+1,w
  3808  0285  00F2               	movwf	___awdiv@dividend
  3809  0286  083B               	movf	??_DISP_Normal_Operation+2,w
  3810  0287  00F3               	movwf	___awdiv@dividend+1
  3811  0288  120A  118A  23D6  120A  118A  	fcall	___awdiv
  3812  028D  0870               	movf	?___awdiv,w
  3813  028E  120A  158A  2772  120A  118A  	fcall	i1_SSD_Set_Symbol
  3814                           
  3815                           ;Disp.c: 106:     SSD_Set_Symbol(tt.hours%10,SSD_HOURS_UNITS);
  3816  0293  3002               	movlw	2
  3817  0294  1283               	bcf	3,5	;RP0=0, select bank0
  3818  0295  1303               	bcf	3,6	;RP1=0, select bank0
  3819  0296  00B9               	movwf	??_DISP_Normal_Operation
  3820  0297  0839               	movf	??_DISP_Normal_Operation,w
  3821  0298  00F9               	movwf	i1SSD_Set_Symbol@index
  3822  0299  300A               	movlw	10
  3823  029A  00F0               	movwf	___awmod@divisor
  3824  029B  3000               	movlw	0
  3825  029C  00F1               	movwf	___awmod@divisor+1
  3826  029D  083C               	movf	DISP_Normal_Operation@tt,w
  3827  029E  00BA               	movwf	??_DISP_Normal_Operation+1
  3828  029F  01BB               	clrf	??_DISP_Normal_Operation+2
  3829  02A0  083A               	movf	??_DISP_Normal_Operation+1,w
  3830  02A1  00F2               	movwf	___awmod@dividend
  3831  02A2  083B               	movf	??_DISP_Normal_Operation+2,w
  3832  02A3  00F3               	movwf	___awmod@dividend+1
  3833  02A4  120A  118A  24FD  120A  118A  	fcall	___awmod
  3834  02A9  0870               	movf	?___awmod,w
  3835  02AA  120A  158A  2772  120A  118A  	fcall	i1_SSD_Set_Symbol
  3836                           
  3837                           ;Disp.c: 108:     SSD_Set_Symbol(tt.minuts/10,SSD_MINUTES_TENS);
  3838  02AF  01F9               	clrf	i1SSD_Set_Symbol@index
  3839  02B0  0AF9               	incf	i1SSD_Set_Symbol@index,f
  3840  02B1  300A               	movlw	10
  3841  02B2  00F0               	movwf	___awdiv@divisor
  3842  02B3  3000               	movlw	0
  3843  02B4  00F1               	movwf	___awdiv@divisor+1
  3844  02B5  1283               	bcf	3,5	;RP0=0, select bank0
  3845  02B6  1303               	bcf	3,6	;RP1=0, select bank0
  3846  02B7  083D               	movf	DISP_Normal_Operation@tt+1,w
  3847  02B8  00B9               	movwf	??_DISP_Normal_Operation
  3848  02B9  01BA               	clrf	??_DISP_Normal_Operation+1
  3849  02BA  0839               	movf	??_DISP_Normal_Operation,w
  3850  02BB  00F2               	movwf	___awdiv@dividend
  3851  02BC  083A               	movf	??_DISP_Normal_Operation+1,w
  3852  02BD  00F3               	movwf	___awdiv@dividend+1
  3853  02BE  120A  118A  23D6  120A  118A  	fcall	___awdiv
  3854  02C3  0870               	movf	?___awdiv,w
  3855  02C4  120A  158A  2772  120A  118A  	fcall	i1_SSD_Set_Symbol
  3856                           
  3857                           ;Disp.c: 109:     SSD_Set_Symbol(tt.minuts%10,SSD_MINUTES_UNITS);
  3858  02C9  01F9               	clrf	i1SSD_Set_Symbol@index
  3859  02CA  300A               	movlw	10
  3860  02CB  00F0               	movwf	___awmod@divisor
  3861  02CC  3000               	movlw	0
  3862  02CD  00F1               	movwf	___awmod@divisor+1
  3863  02CE  1283               	bcf	3,5	;RP0=0, select bank0
  3864  02CF  1303               	bcf	3,6	;RP1=0, select bank0
  3865  02D0  083D               	movf	DISP_Normal_Operation@tt+1,w
  3866  02D1  00B9               	movwf	??_DISP_Normal_Operation
  3867  02D2  01BA               	clrf	??_DISP_Normal_Operation+1
  3868  02D3  0839               	movf	??_DISP_Normal_Operation,w
  3869  02D4  00F2               	movwf	___awmod@dividend
  3870  02D5  083A               	movf	??_DISP_Normal_Operation+1,w
  3871  02D6  00F3               	movwf	___awmod@dividend+1
  3872  02D7  120A  118A  24FD  120A  118A  	fcall	___awmod
  3873  02DC  0870               	movf	?___awmod,w
  3874  02DD  120A  158A  2772  120A  118A  	fcall	i1_SSD_Set_Symbol
  3875  02E2                     i1l1820:	
  3876                           
  3877                           ;Disp.c: 110:     Disp_Blink_counter++;
  3878  02E2  3001               	movlw	1
  3879  02E3  1283               	bcf	3,5	;RP0=0, select bank0
  3880  02E4  1303               	bcf	3,6	;RP1=0, select bank0
  3881  02E5  00B9               	movwf	??_DISP_Normal_Operation
  3882  02E6  0839               	movf	??_DISP_Normal_Operation,w
  3883  02E7  07AF               	addwf	_Disp_Blink_counter,f
  3884  02E8                     i1l1822:	
  3885                           
  3886                           ;Disp.c: 111:     if(Disp_Blink_counter>= 25)
  3887  02E8  3019               	movlw	25
  3888  02E9  022F               	subwf	_Disp_Blink_counter,w
  3889  02EA  1C03               	skipc
  3890  02EB  2AED               	goto	u121_21
  3891  02EC  2AEE               	goto	u121_20
  3892  02ED                     u121_21:	
  3893  02ED  2AF6               	goto	i1l245
  3894  02EE                     u121_20:	
  3895  02EE                     i1l1824:	
  3896                           
  3897                           ;Disp.c: 112:     {;Disp.c: 113:         SSD_Toggle_Second_Dot();
  3898  02EE  120A  158A  2754  120A  118A  	fcall	_SSD_Toggle_Second_Dot
  3899  02F3                     i1l1826:	
  3900                           
  3901                           ;Disp.c: 114:         Disp_Blink_counter = 0;
  3902  02F3  1283               	bcf	3,5	;RP0=0, select bank0
  3903  02F4  1303               	bcf	3,6	;RP1=0, select bank0
  3904  02F5  01AF               	clrf	_Disp_Blink_counter
  3905  02F6                     i1l245:	
  3906  02F6  0008               	return
  3907  02F7                     __end_of_DISP_Normal_Operation:	
  3908                           
  3909                           	psect	text22
  3910  0F72                     __ptext22:	
  3911 ;; *************** function i1_SSD_Set_Symbol *****************
  3912 ;; Defined at:
  3913 ;;		line 87 in file "SSD.c"
  3914 ;; Parameters:    Size  Location     Type
  3915 ;;  symbol          1    wreg     enum E859
  3916 ;;  index           1    9[COMMON] enum E872
  3917 ;; Auto vars:     Size  Location     Type
  3918 ;;  symbol          1   11[COMMON] enum E859
  3919 ;; Return value:  Size  Location     Type
  3920 ;;                  1    wreg      void 
  3921 ;; Registers used:
  3922 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3923 ;; Tracked objects:
  3924 ;;		On entry : 0/0
  3925 ;;		On exit  : 0/0
  3926 ;;		Unchanged: 0/0
  3927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3928 ;;      Params:         1       0       0       0       0
  3929 ;;      Locals:         1       0       0       0       0
  3930 ;;      Temps:          1       0       0       0       0
  3931 ;;      Totals:         3       0       0       0       0
  3932 ;;Total ram usage:        3 bytes
  3933 ;; Hardware stack levels used:    1
  3934 ;; This function calls:
  3935 ;;		Nothing
  3936 ;; This function is called by:
  3937 ;;		_DISP_Normal_Operation
  3938 ;;		_DISP_Set_Hours_Operation
  3939 ;;		_DISP_Set_Minutes_Operation
  3940 ;; This function uses a non-reentrant model
  3941 ;;
  3942                           
  3943                           
  3944                           ;psect for function i1_SSD_Set_Symbol
  3945  0F72                     i1_SSD_Set_Symbol:	
  3946                           
  3947                           ;incstack = 0
  3948                           ; Regs used in i1_SSD_Set_Symbol: [wreg-fsr0h+status,2+status,0]
  3949                           ;i1SSD_Set_Symbol@symbol stored from wreg
  3950  0F72  00FB               	movwf	i1SSD_Set_Symbol@symbol
  3951  0F73                     i1l1686:	
  3952                           
  3953                           ;SSD.c: 87: void SSD_Set_Symbol(SSD_Symbol_t symbol,SSD_t index);SSD.c: 88: {;SSD.c: 90:
      +                               Buffer[index] = symbol;
  3954  0F73  087B               	movf	i1SSD_Set_Symbol@symbol,w
  3955  0F74  00FA               	movwf	??i1_SSD_Set_Symbol
  3956  0F75  0879               	movf	i1SSD_Set_Symbol@index,w
  3957  0F76  3E29               	addlw	(low (_Buffer| 0))& (0+255)
  3958  0F77  0084               	movwf	4
  3959  0F78  087A               	movf	??i1_SSD_Set_Symbol,w
  3960  0F79  1383               	bcf	3,7	;select IRP bank0
  3961  0F7A  0080               	movwf	0
  3962  0F7B                     i1l78:	
  3963  0F7B  0008               	return
  3964  0F7C                     __end_ofi1_SSD_Set_Symbol:	
  3965                           
  3966                           	psect	text23
  3967  04FD                     __ptext23:	
  3968 ;; *************** function ___awmod *****************
  3969 ;; Defined at:
  3970 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  3971 ;; Parameters:    Size  Location     Type
  3972 ;;  divisor         2    0[COMMON] int 
  3973 ;;  dividend        2    2[COMMON] int 
  3974 ;; Auto vars:     Size  Location     Type
  3975 ;;  sign            1    6[COMMON] unsigned char 
  3976 ;;  counter         1    5[COMMON] unsigned char 
  3977 ;; Return value:  Size  Location     Type
  3978 ;;                  2    0[COMMON] int 
  3979 ;; Registers used:
  3980 ;;		wreg, status,2, status,0
  3981 ;; Tracked objects:
  3982 ;;		On entry : 0/0
  3983 ;;		On exit  : 0/0
  3984 ;;		Unchanged: 0/0
  3985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3986 ;;      Params:         4       0       0       0       0
  3987 ;;      Locals:         2       0       0       0       0
  3988 ;;      Temps:          1       0       0       0       0
  3989 ;;      Totals:         7       0       0       0       0
  3990 ;;Total ram usage:        7 bytes
  3991 ;; Hardware stack levels used:    1
  3992 ;; This function calls:
  3993 ;;		Nothing
  3994 ;; This function is called by:
  3995 ;;		_DISP_Normal_Operation
  3996 ;;		_DISP_Set_Hours_Operation
  3997 ;;		_DISP_Set_Minutes_Operation
  3998 ;; This function uses a non-reentrant model
  3999 ;;
  4000                           
  4001                           
  4002                           ;psect for function ___awmod
  4003  04FD                     ___awmod:	
  4004  04FD                     i1l1648:	
  4005                           ;incstack = 0
  4006                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4007                           
  4008  04FD  01F6               	clrf	___awmod@sign
  4009  04FE                     i1l1650:	
  4010  04FE  1FF3               	btfss	___awmod@dividend+1,7
  4011  04FF  2D01               	goto	u94_21
  4012  0500  2D02               	goto	u94_20
  4013  0501                     u94_21:	
  4014  0501  2D09               	goto	i1l1656
  4015  0502                     u94_20:	
  4016  0502                     i1l1652:	
  4017  0502  09F2               	comf	___awmod@dividend,f
  4018  0503  09F3               	comf	___awmod@dividend+1,f
  4019  0504  0AF2               	incf	___awmod@dividend,f
  4020  0505  1903               	skipnz
  4021  0506  0AF3               	incf	___awmod@dividend+1,f
  4022  0507                     i1l1654:	
  4023  0507  01F6               	clrf	___awmod@sign
  4024  0508  0AF6               	incf	___awmod@sign,f
  4025  0509                     i1l1656:	
  4026  0509  1FF1               	btfss	___awmod@divisor+1,7
  4027  050A  2D0C               	goto	u95_21
  4028  050B  2D0D               	goto	u95_20
  4029  050C                     u95_21:	
  4030  050C  2D12               	goto	i1l1660
  4031  050D                     u95_20:	
  4032  050D                     i1l1658:	
  4033  050D  09F0               	comf	___awmod@divisor,f
  4034  050E  09F1               	comf	___awmod@divisor+1,f
  4035  050F  0AF0               	incf	___awmod@divisor,f
  4036  0510  1903               	skipnz
  4037  0511  0AF1               	incf	___awmod@divisor+1,f
  4038  0512                     i1l1660:	
  4039  0512  0870               	movf	___awmod@divisor,w
  4040  0513  0471               	iorwf	___awmod@divisor+1,w
  4041  0514  1903               	btfsc	3,2
  4042  0515  2D17               	goto	u96_21
  4043  0516  2D18               	goto	u96_20
  4044  0517                     u96_21:	
  4045  0517  2D47               	goto	i1l1678
  4046  0518                     u96_20:	
  4047  0518                     i1l1662:	
  4048  0518  01F5               	clrf	___awmod@counter
  4049  0519  0AF5               	incf	___awmod@counter,f
  4050  051A  2D26               	goto	i1l1668
  4051  051B                     i1l1664:	
  4052  051B  3001               	movlw	1
  4053  051C                     u97_25:	
  4054  051C  1003               	clrc
  4055  051D  0DF0               	rlf	___awmod@divisor,f
  4056  051E  0DF1               	rlf	___awmod@divisor+1,f
  4057  051F  3EFF               	addlw	-1
  4058  0520  1D03               	skipz
  4059  0521  2D1C               	goto	u97_25
  4060  0522                     i1l1666:	
  4061  0522  3001               	movlw	1
  4062  0523  00F4               	movwf	??___awmod
  4063  0524  0874               	movf	??___awmod,w
  4064  0525  07F5               	addwf	___awmod@counter,f
  4065  0526                     i1l1668:	
  4066  0526  1FF1               	btfss	___awmod@divisor+1,7
  4067  0527  2D29               	goto	u98_21
  4068  0528  2D2A               	goto	u98_20
  4069  0529                     u98_21:	
  4070  0529  2D1B               	goto	i1l1664
  4071  052A                     u98_20:	
  4072  052A                     i1l1670:	
  4073  052A  0871               	movf	___awmod@divisor+1,w
  4074  052B  0273               	subwf	___awmod@dividend+1,w
  4075  052C  1D03               	skipz
  4076  052D  2D30               	goto	u99_25
  4077  052E  0870               	movf	___awmod@divisor,w
  4078  052F  0272               	subwf	___awmod@dividend,w
  4079  0530                     u99_25:	
  4080  0530  1C03               	skipc
  4081  0531  2D33               	goto	u99_21
  4082  0532  2D34               	goto	u99_20
  4083  0533                     u99_21:	
  4084  0533  2D3A               	goto	i1l1674
  4085  0534                     u99_20:	
  4086  0534                     i1l1672:	
  4087  0534  0870               	movf	___awmod@divisor,w
  4088  0535  02F2               	subwf	___awmod@dividend,f
  4089  0536  0871               	movf	___awmod@divisor+1,w
  4090  0537  1C03               	skipc
  4091  0538  03F3               	decf	___awmod@dividend+1,f
  4092  0539  02F3               	subwf	___awmod@dividend+1,f
  4093  053A                     i1l1674:	
  4094  053A  3001               	movlw	1
  4095  053B                     u100_25:	
  4096  053B  1003               	clrc
  4097  053C  0CF1               	rrf	___awmod@divisor+1,f
  4098  053D  0CF0               	rrf	___awmod@divisor,f
  4099  053E  3EFF               	addlw	-1
  4100  053F  1D03               	skipz
  4101  0540  2D3B               	goto	u100_25
  4102  0541                     i1l1676:	
  4103  0541  3001               	movlw	1
  4104  0542  02F5               	subwf	___awmod@counter,f
  4105  0543  1D03               	btfss	3,2
  4106  0544  2D46               	goto	u101_21
  4107  0545  2D47               	goto	u101_20
  4108  0546                     u101_21:	
  4109  0546  2D2A               	goto	i1l1670
  4110  0547                     u101_20:	
  4111  0547                     i1l1678:	
  4112  0547  0876               	movf	___awmod@sign,w
  4113  0548  1903               	btfsc	3,2
  4114  0549  2D4B               	goto	u102_21
  4115  054A  2D4C               	goto	u102_20
  4116  054B                     u102_21:	
  4117  054B  2D51               	goto	i1l1682
  4118  054C                     u102_20:	
  4119  054C                     i1l1680:	
  4120  054C  09F2               	comf	___awmod@dividend,f
  4121  054D  09F3               	comf	___awmod@dividend+1,f
  4122  054E  0AF2               	incf	___awmod@dividend,f
  4123  054F  1903               	skipnz
  4124  0550  0AF3               	incf	___awmod@dividend+1,f
  4125  0551                     i1l1682:	
  4126  0551  0873               	movf	___awmod@dividend+1,w
  4127  0552  00F1               	movwf	?___awmod+1
  4128  0553  0872               	movf	___awmod@dividend,w
  4129  0554  00F0               	movwf	?___awmod
  4130  0555                     i1l552:	
  4131  0555  0008               	return
  4132  0556                     __end_of___awmod:	
  4133                           
  4134                           	psect	text24
  4135  03D6                     __ptext24:	
  4136 ;; *************** function ___awdiv *****************
  4137 ;; Defined at:
  4138 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  4139 ;; Parameters:    Size  Location     Type
  4140 ;;  divisor         2    0[COMMON] int 
  4141 ;;  dividend        2    2[COMMON] int 
  4142 ;; Auto vars:     Size  Location     Type
  4143 ;;  quotient        2    7[COMMON] int 
  4144 ;;  sign            1    6[COMMON] unsigned char 
  4145 ;;  counter         1    5[COMMON] unsigned char 
  4146 ;; Return value:  Size  Location     Type
  4147 ;;                  2    0[COMMON] int 
  4148 ;; Registers used:
  4149 ;;		wreg, status,2, status,0
  4150 ;; Tracked objects:
  4151 ;;		On entry : 0/0
  4152 ;;		On exit  : 0/0
  4153 ;;		Unchanged: 0/0
  4154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4155 ;;      Params:         4       0       0       0       0
  4156 ;;      Locals:         4       0       0       0       0
  4157 ;;      Temps:          1       0       0       0       0
  4158 ;;      Totals:         9       0       0       0       0
  4159 ;;Total ram usage:        9 bytes
  4160 ;; Hardware stack levels used:    1
  4161 ;; This function calls:
  4162 ;;		Nothing
  4163 ;; This function is called by:
  4164 ;;		_DISP_Normal_Operation
  4165 ;;		_DISP_Set_Hours_Operation
  4166 ;;		_DISP_Set_Minutes_Operation
  4167 ;; This function uses a non-reentrant model
  4168 ;;
  4169                           
  4170                           
  4171                           ;psect for function ___awdiv
  4172  03D6                     ___awdiv:	
  4173  03D6                     i1l1604:	
  4174                           ;incstack = 0
  4175                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4176                           
  4177  03D6  01F6               	clrf	___awdiv@sign
  4178  03D7                     i1l1606:	
  4179  03D7  1FF1               	btfss	___awdiv@divisor+1,7
  4180  03D8  2BDA               	goto	u84_21
  4181  03D9  2BDB               	goto	u84_20
  4182  03DA                     u84_21:	
  4183  03DA  2BE2               	goto	i1l1612
  4184  03DB                     u84_20:	
  4185  03DB                     i1l1608:	
  4186  03DB  09F0               	comf	___awdiv@divisor,f
  4187  03DC  09F1               	comf	___awdiv@divisor+1,f
  4188  03DD  0AF0               	incf	___awdiv@divisor,f
  4189  03DE  1903               	skipnz
  4190  03DF  0AF1               	incf	___awdiv@divisor+1,f
  4191  03E0                     i1l1610:	
  4192  03E0  01F6               	clrf	___awdiv@sign
  4193  03E1  0AF6               	incf	___awdiv@sign,f
  4194  03E2                     i1l1612:	
  4195  03E2  1FF3               	btfss	___awdiv@dividend+1,7
  4196  03E3  2BE5               	goto	u85_21
  4197  03E4  2BE6               	goto	u85_20
  4198  03E5                     u85_21:	
  4199  03E5  2BEF               	goto	i1l1618
  4200  03E6                     u85_20:	
  4201  03E6                     i1l1614:	
  4202  03E6  09F2               	comf	___awdiv@dividend,f
  4203  03E7  09F3               	comf	___awdiv@dividend+1,f
  4204  03E8  0AF2               	incf	___awdiv@dividend,f
  4205  03E9  1903               	skipnz
  4206  03EA  0AF3               	incf	___awdiv@dividend+1,f
  4207  03EB                     i1l1616:	
  4208  03EB  3001               	movlw	1
  4209  03EC  00F4               	movwf	??___awdiv
  4210  03ED  0874               	movf	??___awdiv,w
  4211  03EE  06F6               	xorwf	___awdiv@sign,f
  4212  03EF                     i1l1618:	
  4213  03EF  01F7               	clrf	___awdiv@quotient
  4214  03F0  01F8               	clrf	___awdiv@quotient+1
  4215  03F1                     i1l1620:	
  4216  03F1  0870               	movf	___awdiv@divisor,w
  4217  03F2  0471               	iorwf	___awdiv@divisor+1,w
  4218  03F3  1903               	btfsc	3,2
  4219  03F4  2BF6               	goto	u86_21
  4220  03F5  2BF7               	goto	u86_20
  4221  03F6                     u86_21:	
  4222  03F6  2C2E               	goto	i1l1640
  4223  03F7                     u86_20:	
  4224  03F7                     i1l1622:	
  4225  03F7  01F5               	clrf	___awdiv@counter
  4226  03F8  0AF5               	incf	___awdiv@counter,f
  4227  03F9  2C05               	goto	i1l1628
  4228  03FA                     i1l1624:	
  4229  03FA  3001               	movlw	1
  4230  03FB                     u87_25:	
  4231  03FB  1003               	clrc
  4232  03FC  0DF0               	rlf	___awdiv@divisor,f
  4233  03FD  0DF1               	rlf	___awdiv@divisor+1,f
  4234  03FE  3EFF               	addlw	-1
  4235  03FF  1D03               	skipz
  4236  0400  2BFB               	goto	u87_25
  4237  0401                     i1l1626:	
  4238  0401  3001               	movlw	1
  4239  0402  00F4               	movwf	??___awdiv
  4240  0403  0874               	movf	??___awdiv,w
  4241  0404  07F5               	addwf	___awdiv@counter,f
  4242  0405                     i1l1628:	
  4243  0405  1FF1               	btfss	___awdiv@divisor+1,7
  4244  0406  2C08               	goto	u88_21
  4245  0407  2C09               	goto	u88_20
  4246  0408                     u88_21:	
  4247  0408  2BFA               	goto	i1l1624
  4248  0409                     u88_20:	
  4249  0409                     i1l1630:	
  4250  0409  3001               	movlw	1
  4251  040A                     u89_25:	
  4252  040A  1003               	clrc
  4253  040B  0DF7               	rlf	___awdiv@quotient,f
  4254  040C  0DF8               	rlf	___awdiv@quotient+1,f
  4255  040D  3EFF               	addlw	-1
  4256  040E  1D03               	skipz
  4257  040F  2C0A               	goto	u89_25
  4258  0410  0871               	movf	___awdiv@divisor+1,w
  4259  0411  0273               	subwf	___awdiv@dividend+1,w
  4260  0412  1D03               	skipz
  4261  0413  2C16               	goto	u90_25
  4262  0414  0870               	movf	___awdiv@divisor,w
  4263  0415  0272               	subwf	___awdiv@dividend,w
  4264  0416                     u90_25:	
  4265  0416  1C03               	skipc
  4266  0417  2C19               	goto	u90_21
  4267  0418  2C1A               	goto	u90_20
  4268  0419                     u90_21:	
  4269  0419  2C21               	goto	i1l1636
  4270  041A                     u90_20:	
  4271  041A                     i1l1632:	
  4272  041A  0870               	movf	___awdiv@divisor,w
  4273  041B  02F2               	subwf	___awdiv@dividend,f
  4274  041C  0871               	movf	___awdiv@divisor+1,w
  4275  041D  1C03               	skipc
  4276  041E  03F3               	decf	___awdiv@dividend+1,f
  4277  041F  02F3               	subwf	___awdiv@dividend+1,f
  4278  0420                     i1l1634:	
  4279  0420  1477               	bsf	___awdiv@quotient,0
  4280  0421                     i1l1636:	
  4281  0421  3001               	movlw	1
  4282  0422                     u91_25:	
  4283  0422  1003               	clrc
  4284  0423  0CF1               	rrf	___awdiv@divisor+1,f
  4285  0424  0CF0               	rrf	___awdiv@divisor,f
  4286  0425  3EFF               	addlw	-1
  4287  0426  1D03               	skipz
  4288  0427  2C22               	goto	u91_25
  4289  0428                     i1l1638:	
  4290  0428  3001               	movlw	1
  4291  0429  02F5               	subwf	___awdiv@counter,f
  4292  042A  1D03               	btfss	3,2
  4293  042B  2C2D               	goto	u92_21
  4294  042C  2C2E               	goto	u92_20
  4295  042D                     u92_21:	
  4296  042D  2C09               	goto	i1l1630
  4297  042E                     u92_20:	
  4298  042E                     i1l1640:	
  4299  042E  0876               	movf	___awdiv@sign,w
  4300  042F  1903               	btfsc	3,2
  4301  0430  2C32               	goto	u93_21
  4302  0431  2C33               	goto	u93_20
  4303  0432                     u93_21:	
  4304  0432  2C38               	goto	i1l1644
  4305  0433                     u93_20:	
  4306  0433                     i1l1642:	
  4307  0433  09F7               	comf	___awdiv@quotient,f
  4308  0434  09F8               	comf	___awdiv@quotient+1,f
  4309  0435  0AF7               	incf	___awdiv@quotient,f
  4310  0436  1903               	skipnz
  4311  0437  0AF8               	incf	___awdiv@quotient+1,f
  4312  0438                     i1l1644:	
  4313  0438  0878               	movf	___awdiv@quotient+1,w
  4314  0439  00F1               	movwf	?___awdiv+1
  4315  043A  0877               	movf	___awdiv@quotient,w
  4316  043B  00F0               	movwf	?___awdiv
  4317  043C                     i1l539:	
  4318  043C  0008               	return
  4319  043D                     __end_of___awdiv:	
  4320                           
  4321                           	psect	text25
  4322  0F54                     __ptext25:	
  4323 ;; *************** function _SSD_Toggle_Second_Dot *****************
  4324 ;; Defined at:
  4325 ;;		line 181 in file "SSD.c"
  4326 ;; Parameters:    Size  Location     Type
  4327 ;;		None
  4328 ;; Auto vars:     Size  Location     Type
  4329 ;;		None
  4330 ;; Return value:  Size  Location     Type
  4331 ;;                  1    wreg      void 
  4332 ;; Registers used:
  4333 ;;		wreg, status,2, status,0
  4334 ;; Tracked objects:
  4335 ;;		On entry : 0/0
  4336 ;;		On exit  : 0/0
  4337 ;;		Unchanged: 0/0
  4338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4339 ;;      Params:         0       0       0       0       0
  4340 ;;      Locals:         0       0       0       0       0
  4341 ;;      Temps:          1       0       0       0       0
  4342 ;;      Totals:         1       0       0       0       0
  4343 ;;Total ram usage:        1 bytes
  4344 ;; Hardware stack levels used:    1
  4345 ;; This function calls:
  4346 ;;		Nothing
  4347 ;; This function is called by:
  4348 ;;		_DISP_Normal_Operation
  4349 ;; This function uses a non-reentrant model
  4350 ;;
  4351                           
  4352                           
  4353                           ;psect for function _SSD_Toggle_Second_Dot
  4354  0F54                     _SSD_Toggle_Second_Dot:	
  4355  0F54                     i1l1586:	
  4356                           ;incstack = 0
  4357                           ; Regs used in _SSD_Toggle_Second_Dot: [wreg+status,2+status,0]
  4358                           
  4359                           
  4360                           ;SSD.c: 183:     Second_Dot_State ^= 1;
  4361  0F54  3001               	movlw	1
  4362  0F55  00F0               	movwf	??_SSD_Toggle_Second_Dot
  4363  0F56  0870               	movf	??_SSD_Toggle_Second_Dot,w
  4364  0F57  1283               	bcf	3,5	;RP0=0, select bank0
  4365  0F58  1303               	bcf	3,6	;RP1=0, select bank0
  4366  0F59  06B2               	xorwf	_Second_Dot_State,f
  4367  0F5A                     i1l112:	
  4368  0F5A  0008               	return
  4369  0F5B                     __end_of_SSD_Toggle_Second_Dot:	
  4370                           
  4371                           	psect	text26
  4372  07CE                     __ptext26:	
  4373 ;; *************** function _CLOCK_GetTime *****************
  4374 ;; Defined at:
  4375 ;;		line 76 in file "Clock.c"
  4376 ;; Parameters:    Size  Location     Type
  4377 ;;  t               1    wreg     PTR struct .
  4378 ;;		 -> DISP_Set_Minutes_Operation@tt(5), DISP_Set_Hours_Operation@tt(5), DISP_Normal_Operation@tt(5), 
  4379 ;; Auto vars:     Size  Location     Type
  4380 ;;  t               1    1[COMMON] PTR struct .
  4381 ;;		 -> DISP_Set_Minutes_Operation@tt(5), DISP_Set_Hours_Operation@tt(5), DISP_Normal_Operation@tt(5), 
  4382 ;; Return value:  Size  Location     Type
  4383 ;;                  1    wreg      void 
  4384 ;; Registers used:
  4385 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4386 ;; Tracked objects:
  4387 ;;		On entry : 0/0
  4388 ;;		On exit  : 0/0
  4389 ;;		Unchanged: 0/0
  4390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4391 ;;      Params:         0       0       0       0       0
  4392 ;;      Locals:         1       0       0       0       0
  4393 ;;      Temps:          1       0       0       0       0
  4394 ;;      Totals:         2       0       0       0       0
  4395 ;;Total ram usage:        2 bytes
  4396 ;; Hardware stack levels used:    1
  4397 ;; This function calls:
  4398 ;;		Nothing
  4399 ;; This function is called by:
  4400 ;;		_DISP_Normal_Operation
  4401 ;;		_DISP_Set_Hours_Operation
  4402 ;;		_DISP_Set_Minutes_Operation
  4403 ;; This function uses a non-reentrant model
  4404 ;;
  4405                           
  4406                           
  4407                           ;psect for function _CLOCK_GetTime
  4408  07CE                     _CLOCK_GetTime:	
  4409                           
  4410                           ;incstack = 0
  4411                           ; Regs used in _CLOCK_GetTime: [wreg-fsr0h+status,2+status,0]
  4412                           ;CLOCK_GetTime@t stored from wreg
  4413  07CE  00F1               	movwf	CLOCK_GetTime@t
  4414  07CF                     i1l1598:	
  4415                           
  4416                           ;Clock.c: 76: void CLOCK_GetTime(Time_t * t);Clock.c: 77: {;Clock.c: 79:     t->hours = 
      +                          CurrentTime.hours;
  4417  07CF  1283               	bcf	3,5	;RP0=0, select bank0
  4418  07D0  1303               	bcf	3,6	;RP1=0, select bank0
  4419  07D1  0834               	movf	_CurrentTime,w
  4420  07D2  00F0               	movwf	??_CLOCK_GetTime
  4421  07D3  0871               	movf	CLOCK_GetTime@t,w
  4422  07D4  0084               	movwf	4
  4423  07D5  0870               	movf	??_CLOCK_GetTime,w
  4424  07D6  1383               	bcf	3,7	;select IRP bank0
  4425  07D7  0080               	movwf	0
  4426                           
  4427                           ;Clock.c: 80:     t->minuts = CurrentTime.minuts;
  4428  07D8  0835               	movf	_CurrentTime+1,w
  4429  07D9  00F0               	movwf	??_CLOCK_GetTime
  4430  07DA  0A71               	incf	CLOCK_GetTime@t,w
  4431  07DB  0084               	movwf	4
  4432  07DC  0870               	movf	??_CLOCK_GetTime,w
  4433  07DD  0080               	movwf	0
  4434  07DE                     i1l1600:	
  4435                           
  4436                           ;Clock.c: 81:     t->seconds = CurrentTime.seconds;
  4437  07DE  0836               	movf	_CurrentTime+2,w
  4438  07DF  00F0               	movwf	??_CLOCK_GetTime
  4439  07E0  0871               	movf	CLOCK_GetTime@t,w
  4440  07E1  3E02               	addlw	2
  4441  07E2  0084               	movwf	4
  4442  07E3  0870               	movf	??_CLOCK_GetTime,w
  4443  07E4  0080               	movwf	0
  4444  07E5                     i1l1602:	
  4445                           
  4446                           ;Clock.c: 82:     t->mSeconds = CurrentTime.mSeconds;
  4447  07E5  0871               	movf	CLOCK_GetTime@t,w
  4448  07E6  3E03               	addlw	3
  4449  07E7  0084               	movwf	4
  4450  07E8  0837               	movf	_CurrentTime+3,w
  4451  07E9  0080               	movwf	0
  4452  07EA  0A84               	incf	4,f
  4453  07EB  0838               	movf	_CurrentTime+4,w
  4454  07EC  0080               	movwf	0
  4455  07ED                     i1l173:	
  4456  07ED  0008               	return
  4457  07EE                     __end_of_CLOCK_GetTime:	
  4458                           
  4459                           	psect	text27
  4460  07FC                     __ptext27:	
  4461 ;; *************** function _CLOCK_GetMode *****************
  4462 ;; Defined at:
  4463 ;;		line 68 in file "Clock.c"
  4464 ;; Parameters:    Size  Location     Type
  4465 ;;		None
  4466 ;; Auto vars:     Size  Location     Type
  4467 ;;		None
  4468 ;; Return value:  Size  Location     Type
  4469 ;;                  1    wreg      enum E858
  4470 ;; Registers used:
  4471 ;;		wreg
  4472 ;; Tracked objects:
  4473 ;;		On entry : 0/0
  4474 ;;		On exit  : 0/0
  4475 ;;		Unchanged: 0/0
  4476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4477 ;;      Params:         0       0       0       0       0
  4478 ;;      Locals:         0       0       0       0       0
  4479 ;;      Temps:          0       0       0       0       0
  4480 ;;      Totals:         0       0       0       0       0
  4481 ;;Total ram usage:        0 bytes
  4482 ;; Hardware stack levels used:    1
  4483 ;; This function calls:
  4484 ;;		Nothing
  4485 ;; This function is called by:
  4486 ;;		_Disp_Update
  4487 ;; This function uses a non-reentrant model
  4488 ;;
  4489                           
  4490                           
  4491                           ;psect for function _CLOCK_GetMode
  4492  07FC                     _CLOCK_GetMode:	
  4493  07FC                     i1l1776:	
  4494                           ;incstack = 0
  4495                           ; Regs used in _CLOCK_GetMode: [wreg]
  4496                           
  4497                           
  4498                           ;Clock.c: 71:     return CurrentMode;
  4499  07FC  1283               	bcf	3,5	;RP0=0, select bank0
  4500  07FD  1303               	bcf	3,6	;RP1=0, select bank0
  4501  07FE  0830               	movf	_CurrentMode,w
  4502  07FF                     i1l170:	
  4503  07FF  0008               	return
  4504  0800                     __end_of_CLOCK_GetMode:	
  4505                           
  4506                           	psect	text28
  4507  0369                     __ptext28:	
  4508 ;; *************** function _CLOCK_Update *****************
  4509 ;; Defined at:
  4510 ;;		line 135 in file "Clock.c"
  4511 ;; Parameters:    Size  Location     Type
  4512 ;;		None
  4513 ;; Auto vars:     Size  Location     Type
  4514 ;;		None
  4515 ;; Return value:  Size  Location     Type
  4516 ;;                  1    wreg      void 
  4517 ;; Registers used:
  4518 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4519 ;; Tracked objects:
  4520 ;;		On entry : 0/0
  4521 ;;		On exit  : 0/0
  4522 ;;		Unchanged: 0/0
  4523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4524 ;;      Params:         0       0       0       0       0
  4525 ;;      Locals:         0       0       0       0       0
  4526 ;;      Temps:          2       0       0       0       0
  4527 ;;      Totals:         2       0       0       0       0
  4528 ;;Total ram usage:        2 bytes
  4529 ;; Hardware stack levels used:    1
  4530 ;; Hardware stack levels required when called:    3
  4531 ;; This function calls:
  4532 ;;		_CLOCK_Increment
  4533 ;;		_SW_GetState
  4534 ;;		_set_mode_process
  4535 ;; This function is called by:
  4536 ;;		_TMR0_ISR
  4537 ;; This function uses a non-reentrant model
  4538 ;;
  4539                           
  4540                           
  4541                           ;psect for function _CLOCK_Update
  4542  0369                     _CLOCK_Update:	
  4543  0369                     i1l1952:	
  4544                           ;incstack = 0
  4545                           ; Regs used in _CLOCK_Update: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4546                           
  4547                           
  4548                           ;Clock.c: 140:     static u8_t CLOCK_Time_Counter = 10;;Clock.c: 141:     CLOCK_Time_Cou
      +                          nter += (5);
  4549  0369  3005               	movlw	5
  4550  036A  00FB               	movwf	??_CLOCK_Update
  4551  036B  087B               	movf	??_CLOCK_Update,w
  4552  036C  1283               	bcf	3,5	;RP0=0, select bank0
  4553  036D  1303               	bcf	3,6	;RP1=0, select bank0
  4554  036E  07DB               	addwf	CLOCK_Update@CLOCK_Time_Counter,f
  4555                           
  4556                           ;Clock.c: 143:     if(CLOCK_Time_Counter != (20))
  4557  036F  3014               	movlw	20
  4558  0370  065B               	xorwf	CLOCK_Update@CLOCK_Time_Counter,w
  4559  0371  1903               	btfsc	3,2
  4560  0372  2B74               	goto	u133_21
  4561  0373  2B75               	goto	u133_20
  4562  0374                     u133_21:	
  4563  0374  2B76               	goto	i1l1956
  4564  0375                     u133_20:	
  4565  0375  2BD5               	goto	i1l186
  4566  0376                     i1l1956:	
  4567                           
  4568                           ;Clock.c: 147:     CLOCK_Time_Counter = 0;
  4569  0376  01DB               	clrf	CLOCK_Update@CLOCK_Time_Counter
  4570  0377                     i1l1958:	
  4571                           
  4572                           ;Clock.c: 150:     if(SW_GetState(SW_SET) == SW_PRE_PRESSED)
  4573  0377  3002               	movlw	2
  4574  0378  120A  158A  27A6  120A  118A  	fcall	_SW_GetState
  4575  037D  3A01               	xorlw	1
  4576  037E  1D03               	skipz
  4577  037F  2B81               	goto	u134_21
  4578  0380  2B82               	goto	u134_20
  4579  0381                     u134_21:	
  4580  0381  2BA2               	goto	i1l1970
  4581  0382                     u134_20:	
  4582  0382  2B8D               	goto	i1l1968
  4583  0383                     i1l189:	
  4584                           ;Clock.c: 155:         {;Clock.c: 156:             case CL_NORMAL:
  4585                           
  4586                           
  4587                           ;Clock.c: 157:                 CurrentMode = CL_SET_HOURS;
  4588  0383  01B0               	clrf	_CurrentMode
  4589  0384  0AB0               	incf	_CurrentMode,f
  4590                           
  4591                           ;Clock.c: 158:                 break;
  4592  0385  2BA2               	goto	i1l1970
  4593  0386                     i1l1962:	
  4594                           
  4595                           ;Clock.c: 160:                 CurrentMode = CL_SET_MINUTES;
  4596  0386  3002               	movlw	2
  4597  0387  00FB               	movwf	??_CLOCK_Update
  4598  0388  087B               	movf	??_CLOCK_Update,w
  4599  0389  00B0               	movwf	_CurrentMode
  4600                           
  4601                           ;Clock.c: 161:                 break;
  4602  038A  2BA2               	goto	i1l1970
  4603  038B                     i1l1964:	
  4604                           
  4605                           ;Clock.c: 163:                 CurrentMode = CL_NORMAL;
  4606  038B  01B0               	clrf	_CurrentMode
  4607                           
  4608                           ;Clock.c: 164:                 break;
  4609  038C  2BA2               	goto	i1l1970
  4610  038D                     i1l1968:	
  4611  038D  1283               	bcf	3,5	;RP0=0, select bank0
  4612  038E  1303               	bcf	3,6	;RP1=0, select bank0
  4613  038F  0830               	movf	_CurrentMode,w
  4614  0390  00FB               	movwf	??_CLOCK_Update
  4615  0391  01FC               	clrf	??_CLOCK_Update+1
  4616                           
  4617                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4618                           ; Switch size 1, requested type "simple"
  4619                           ; Number of cases is 1, Range of values is 0 to 0
  4620                           ; switch strategies available:
  4621                           ; Name         Instructions Cycles
  4622                           ; simple_byte            4     3 (average)
  4623                           ; direct_byte           11     8 (fixed)
  4624                           ; jumptable            260     6 (fixed)
  4625                           ;	Chosen strategy is simple_byte
  4626  0392  087C               	movf	??_CLOCK_Update+1,w
  4627  0393  3A00               	xorlw	0	; case 0
  4628  0394  1903               	skipnz
  4629  0395  2B97               	goto	i1l2172
  4630  0396  2BA2               	goto	i1l1970
  4631  0397                     i1l2172:	
  4632                           
  4633                           ; Switch size 1, requested type "simple"
  4634                           ; Number of cases is 3, Range of values is 0 to 2
  4635                           ; switch strategies available:
  4636                           ; Name         Instructions Cycles
  4637                           ; simple_byte           10     6 (average)
  4638                           ; direct_byte           17     8 (fixed)
  4639                           ; jumptable            260     6 (fixed)
  4640                           ;	Chosen strategy is simple_byte
  4641  0397  087B               	movf	??_CLOCK_Update,w
  4642  0398  3A00               	xorlw	0	; case 0
  4643  0399  1903               	skipnz
  4644  039A  2B83               	goto	i1l189
  4645  039B  3A01               	xorlw	1	; case 1
  4646  039C  1903               	skipnz
  4647  039D  2B86               	goto	i1l1962
  4648  039E  3A03               	xorlw	3	; case 2
  4649  039F  1903               	skipnz
  4650  03A0  2B8B               	goto	i1l1964
  4651  03A1  2BA2               	goto	i1l1970
  4652  03A2                     i1l1970:	
  4653                           
  4654                           ;Clock.c: 171:     if(CurrentMode == CL_NORMAL)
  4655  03A2  1283               	bcf	3,5	;RP0=0, select bank0
  4656  03A3  1303               	bcf	3,6	;RP1=0, select bank0
  4657  03A4  0830               	movf	_CurrentMode,w
  4658  03A5  1D03               	btfss	3,2
  4659  03A6  2BA8               	goto	u135_21
  4660  03A7  2BA9               	goto	u135_20
  4661  03A8                     u135_21:	
  4662  03A8  2BC5               	goto	i1l1980
  4663  03A9                     u135_20:	
  4664  03A9                     i1l1972:	
  4665                           
  4666                           ;Clock.c: 172:     {;Clock.c: 173:         CLOCK_Increment();
  4667  03A9  120A  118A  26AD  120A  118A  	fcall	_CLOCK_Increment
  4668                           
  4669                           ;Clock.c: 174:     }
  4670  03AE  2BD5               	goto	i1l186
  4671  03AF                     i1l1974:	
  4672                           
  4673                           ;Clock.c: 182:                 set_mode_process(&CurrentTime.hours , 24);
  4674  03AF  3018               	movlw	24
  4675  03B0  00FB               	movwf	??_CLOCK_Update
  4676  03B1  087B               	movf	??_CLOCK_Update,w
  4677  03B2  00F8               	movwf	set_mode_process@limit
  4678  03B3  3034               	movlw	(low (_CurrentTime| 0))& (0+255)
  4679  03B4  120A  118A  2638  120A  118A  	fcall	_set_mode_process
  4680                           
  4681                           ;Clock.c: 183:                 break;
  4682  03B9  2BD5               	goto	i1l186
  4683  03BA                     i1l1976:	
  4684                           
  4685                           ;Clock.c: 186:                 set_mode_process(&CurrentTime.minuts , 60);
  4686  03BA  303C               	movlw	60
  4687  03BB  00FB               	movwf	??_CLOCK_Update
  4688  03BC  087B               	movf	??_CLOCK_Update,w
  4689  03BD  00F8               	movwf	set_mode_process@limit
  4690  03BE  3035               	movlw	(low ((_CurrentTime| 0+1)))& (0+255)
  4691  03BF  120A  118A  2638  120A  118A  	fcall	_set_mode_process
  4692                           
  4693                           ;Clock.c: 187:                 break;
  4694  03C4  2BD5               	goto	i1l186
  4695  03C5                     i1l1980:	
  4696  03C5  0830               	movf	_CurrentMode,w
  4697  03C6  00FB               	movwf	??_CLOCK_Update
  4698  03C7  01FC               	clrf	??_CLOCK_Update+1
  4699                           
  4700                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4701                           ; Switch size 1, requested type "simple"
  4702                           ; Number of cases is 1, Range of values is 0 to 0
  4703                           ; switch strategies available:
  4704                           ; Name         Instructions Cycles
  4705                           ; simple_byte            4     3 (average)
  4706                           ; direct_byte           11     8 (fixed)
  4707                           ; jumptable            260     6 (fixed)
  4708                           ;	Chosen strategy is simple_byte
  4709  03C8  087C               	movf	??_CLOCK_Update+1,w
  4710  03C9  3A00               	xorlw	0	; case 0
  4711  03CA  1903               	skipnz
  4712  03CB  2BCD               	goto	i1l2174
  4713  03CC  2BD5               	goto	i1l186
  4714  03CD                     i1l2174:	
  4715                           
  4716                           ; Switch size 1, requested type "simple"
  4717                           ; Number of cases is 2, Range of values is 1 to 2
  4718                           ; switch strategies available:
  4719                           ; Name         Instructions Cycles
  4720                           ; simple_byte            7     4 (average)
  4721                           ; direct_byte           17    11 (fixed)
  4722                           ; jumptable            263     9 (fixed)
  4723                           ;	Chosen strategy is simple_byte
  4724  03CD  087B               	movf	??_CLOCK_Update,w
  4725  03CE  3A01               	xorlw	1	; case 1
  4726  03CF  1903               	skipnz
  4727  03D0  2BAF               	goto	i1l1974
  4728  03D1  3A03               	xorlw	3	; case 2
  4729  03D2  1903               	skipnz
  4730  03D3  2BBA               	goto	i1l1976
  4731  03D4  2BD5               	goto	i1l186
  4732  03D5                     i1l186:	
  4733  03D5  0008               	return
  4734  03D6                     __end_of_CLOCK_Update:	
  4735                           
  4736                           	psect	text29
  4737  0638                     __ptext29:	
  4738 ;; *************** function _set_mode_process *****************
  4739 ;; Defined at:
  4740 ;;		line 195 in file "Clock.c"
  4741 ;; Parameters:    Size  Location     Type
  4742 ;;  var             1    wreg     PTR unsigned char 
  4743 ;;		 -> CurrentTime(5), 
  4744 ;;  limit           1    8[COMMON] unsigned char 
  4745 ;; Auto vars:     Size  Location     Type
  4746 ;;  var             1   10[COMMON] PTR unsigned char 
  4747 ;;		 -> CurrentTime(5), 
  4748 ;; Return value:  Size  Location     Type
  4749 ;;                  1    wreg      void 
  4750 ;; Registers used:
  4751 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4752 ;; Tracked objects:
  4753 ;;		On entry : 0/0
  4754 ;;		On exit  : 0/0
  4755 ;;		Unchanged: 0/0
  4756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4757 ;;      Params:         1       0       0       0       0
  4758 ;;      Locals:         1       0       0       0       0
  4759 ;;      Temps:          1       0       0       0       0
  4760 ;;      Totals:         3       0       0       0       0
  4761 ;;Total ram usage:        3 bytes
  4762 ;; Hardware stack levels used:    1
  4763 ;; Hardware stack levels required when called:    2
  4764 ;; This function calls:
  4765 ;;		_SW_GetState
  4766 ;; This function is called by:
  4767 ;;		_CLOCK_Update
  4768 ;; This function uses a non-reentrant model
  4769 ;;
  4770                           
  4771                           
  4772                           ;psect for function _set_mode_process
  4773  0638                     _set_mode_process:	
  4774                           
  4775                           ;incstack = 0
  4776                           ; Regs used in _set_mode_process: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4777                           ;set_mode_process@var stored from wreg
  4778  0638  00FA               	movwf	set_mode_process@var
  4779  0639                     i1l1802:	
  4780                           
  4781                           ;Clock.c: 195: void set_mode_process(u8_t * var , u8_t limit);Clock.c: 196: {;Clock.c: 1
      +                          97:     if(SW_GetState(SW_PLUS) == SW_PRE_PRESSED)
  4782  0639  3000               	movlw	0
  4783  063A  120A  158A  27A6  120A  118A  	fcall	_SW_GetState
  4784  063F  3A01               	xorlw	1
  4785  0640  1D03               	skipz
  4786  0641  2E43               	goto	u117_21
  4787  0642  2E44               	goto	u117_20
  4788  0643                     u117_21:	
  4789  0643  2E56               	goto	i1l1810
  4790  0644                     u117_20:	
  4791  0644                     i1l1804:	
  4792                           
  4793                           ;Clock.c: 198:     {;Clock.c: 201:         *var += 1;
  4794  0644  3001               	movlw	1
  4795  0645  00F9               	movwf	??_set_mode_process
  4796  0646  087A               	movf	set_mode_process@var,w
  4797  0647  0084               	movwf	4
  4798  0648  0879               	movf	??_set_mode_process,w
  4799  0649  1383               	bcf	3,7	;select IRP bank0
  4800  064A  0780               	addwf	0,f
  4801  064B                     i1l1806:	
  4802                           
  4803                           ;Clock.c: 202:         if(*var == limit)*var = 0;
  4804  064B  087A               	movf	set_mode_process@var,w
  4805  064C  0084               	movwf	4
  4806  064D  0800               	movf	0,w
  4807  064E  0678               	xorwf	set_mode_process@limit,w
  4808  064F  1D03               	skipz
  4809  0650  2E52               	goto	u118_21
  4810  0651  2E53               	goto	u118_20
  4811  0652                     u118_21:	
  4812  0652  2E56               	goto	i1l1810
  4813  0653                     u118_20:	
  4814  0653                     i1l1808:	
  4815  0653  087A               	movf	set_mode_process@var,w
  4816  0654  0084               	movwf	4
  4817  0655  0180               	clrf	0
  4818  0656                     i1l1810:	
  4819                           
  4820                           ;Clock.c: 204:     if(SW_GetState(SW_MINUS) == SW_PRE_PRESSED)
  4821  0656  3001               	movlw	1
  4822  0657  120A  158A  27A6  120A  118A  	fcall	_SW_GetState
  4823  065C  3A01               	xorlw	1
  4824  065D  1D03               	skipz
  4825  065E  2E60               	goto	u119_21
  4826  065F  2E61               	goto	u119_20
  4827  0660                     u119_21:	
  4828  0660  2E73               	goto	i1l207
  4829  0661                     u119_20:	
  4830  0661                     i1l1812:	
  4831                           
  4832                           ;Clock.c: 205:     {;Clock.c: 208:         if(*var == 0)*var = limit;
  4833  0661  087A               	movf	set_mode_process@var,w
  4834  0662  0084               	movwf	4
  4835  0663  1383               	bcf	3,7	;select IRP bank0
  4836  0664  0800               	movf	0,w
  4837  0665  1D03               	btfss	3,2
  4838  0666  2E68               	goto	u120_21
  4839  0667  2E69               	goto	u120_20
  4840  0668                     u120_21:	
  4841  0668  2E6F               	goto	i1l1816
  4842  0669                     u120_20:	
  4843  0669                     i1l1814:	
  4844  0669  0878               	movf	set_mode_process@limit,w
  4845  066A  00F9               	movwf	??_set_mode_process
  4846  066B  087A               	movf	set_mode_process@var,w
  4847  066C  0084               	movwf	4
  4848  066D  0879               	movf	??_set_mode_process,w
  4849  066E  0080               	movwf	0
  4850  066F                     i1l1816:	
  4851                           
  4852                           ;Clock.c: 209:         *var -= 1;
  4853  066F  087A               	movf	set_mode_process@var,w
  4854  0670  0084               	movwf	4
  4855  0671  3001               	movlw	1
  4856  0672  0280               	subwf	0,f
  4857  0673                     i1l207:	
  4858  0673  0008               	return
  4859  0674                     __end_of_set_mode_process:	
  4860                           
  4861                           	psect	text30
  4862  0FA6                     __ptext30:	
  4863 ;; *************** function _SW_GetState *****************
  4864 ;; Defined at:
  4865 ;;		line 75 in file "SW.c"
  4866 ;; Parameters:    Size  Location     Type
  4867 ;;  sw              1    wreg     enum E859
  4868 ;; Auto vars:     Size  Location     Type
  4869 ;;  sw              1    6[COMMON] enum E859
  4870 ;;  ret             1    7[COMMON] unsigned char 
  4871 ;; Return value:  Size  Location     Type
  4872 ;;                  1    wreg      unsigned char 
  4873 ;; Registers used:
  4874 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4875 ;; Tracked objects:
  4876 ;;		On entry : 0/0
  4877 ;;		On exit  : 0/0
  4878 ;;		Unchanged: 0/0
  4879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4880 ;;      Params:         0       0       0       0       0
  4881 ;;      Locals:         2       0       0       0       0
  4882 ;;      Temps:          2       0       0       0       0
  4883 ;;      Totals:         4       0       0       0       0
  4884 ;;Total ram usage:        4 bytes
  4885 ;; Hardware stack levels used:    1
  4886 ;; Hardware stack levels required when called:    1
  4887 ;; This function calls:
  4888 ;;		___bmul
  4889 ;; This function is called by:
  4890 ;;		_CLOCK_Update
  4891 ;;		_set_mode_process
  4892 ;; This function uses a non-reentrant model
  4893 ;;
  4894                           
  4895                           
  4896                           ;psect for function _SW_GetState
  4897  0FA6                     _SW_GetState:	
  4898                           
  4899                           ;incstack = 0
  4900                           ; Regs used in _SW_GetState: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4901                           ;SW_GetState@sw stored from wreg
  4902  0FA6  00F6               	movwf	SW_GetState@sw
  4903  0FA7                     i1l1590:	
  4904  0FA7                     i1l1592:	
  4905                           
  4906                           ;SW.c: 80:     ret = SW_DATA[sw].state;
  4907  0FA7  3003               	movlw	3
  4908  0FA8  00F4               	movwf	??_SW_GetState
  4909  0FA9  0874               	movf	??_SW_GetState,w
  4910  0FAA  00F0               	movwf	___bmul@multiplicand
  4911  0FAB  0876               	movf	SW_GetState@sw,w
  4912  0FAC  120A  158A  27CE  120A  158A  	fcall	___bmul
  4913  0FB1  3E22               	addlw	(low ((_SW_DATA| 0+2)))& (0+255)
  4914  0FB2  0084               	movwf	4
  4915  0FB3  1383               	bcf	3,7	;select IRP bank0
  4916  0FB4  0800               	movf	0,w
  4917  0FB5  00F5               	movwf	??_SW_GetState+1
  4918  0FB6  0875               	movf	??_SW_GetState+1,w
  4919  0FB7  00F7               	movwf	SW_GetState@ret
  4920  0FB8                     i1l1594:	
  4921                           
  4922                           ;SW.c: 82:     return ret;
  4923  0FB8  0877               	movf	SW_GetState@ret,w
  4924  0FB9                     i1l131:	
  4925  0FB9  0008               	return
  4926  0FBA                     __end_of_SW_GetState:	
  4927                           
  4928                           	psect	text31
  4929  0FCE                     __ptext31:	
  4930 ;; *************** function ___bmul *****************
  4931 ;; Defined at:
  4932 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8.c"
  4933 ;; Parameters:    Size  Location     Type
  4934 ;;  multiplier      1    wreg     unsigned char 
  4935 ;;  multiplicand    1    0[COMMON] unsigned char 
  4936 ;; Auto vars:     Size  Location     Type
  4937 ;;  multiplier      1    3[COMMON] unsigned char 
  4938 ;;  product         1    2[COMMON] unsigned char 
  4939 ;; Return value:  Size  Location     Type
  4940 ;;                  1    wreg      unsigned char 
  4941 ;; Registers used:
  4942 ;;		wreg, status,2, status,0
  4943 ;; Tracked objects:
  4944 ;;		On entry : 0/0
  4945 ;;		On exit  : 0/0
  4946 ;;		Unchanged: 0/0
  4947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4948 ;;      Params:         1       0       0       0       0
  4949 ;;      Locals:         2       0       0       0       0
  4950 ;;      Temps:          1       0       0       0       0
  4951 ;;      Totals:         4       0       0       0       0
  4952 ;;Total ram usage:        4 bytes
  4953 ;; Hardware stack levels used:    1
  4954 ;; This function calls:
  4955 ;;		Nothing
  4956 ;; This function is called by:
  4957 ;;		_SW_GetState
  4958 ;;		_SW_UpdateState
  4959 ;; This function uses a non-reentrant model
  4960 ;;
  4961                           
  4962                           
  4963                           ;psect for function ___bmul
  4964  0FCE                     ___bmul:	
  4965                           
  4966                           ;incstack = 0
  4967                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4968                           ;___bmul@multiplier stored from wreg
  4969  0FCE  00F3               	movwf	___bmul@multiplier
  4970  0FCF                     i1l1530:	
  4971  0FCF  01F2               	clrf	___bmul@product
  4972  0FD0                     i1l1532:	
  4973  0FD0  1C73               	btfss	___bmul@multiplier,0
  4974  0FD1  2FD3               	goto	u69_21
  4975  0FD2  2FD4               	goto	u69_20
  4976  0FD3                     u69_21:	
  4977  0FD3  2FD8               	goto	i1l1536
  4978  0FD4                     u69_20:	
  4979  0FD4                     i1l1534:	
  4980  0FD4  0870               	movf	___bmul@multiplicand,w
  4981  0FD5  00F1               	movwf	??___bmul
  4982  0FD6  0871               	movf	??___bmul,w
  4983  0FD7  07F2               	addwf	___bmul@product,f
  4984  0FD8                     i1l1536:	
  4985  0FD8  1003               	clrc
  4986  0FD9  0DF0               	rlf	___bmul@multiplicand,f
  4987  0FDA                     i1l1538:	
  4988  0FDA  1003               	clrc
  4989  0FDB  0CF3               	rrf	___bmul@multiplier,f
  4990  0FDC  0873               	movf	___bmul@multiplier,w
  4991  0FDD  1D03               	btfss	3,2
  4992  0FDE  2FE0               	goto	u70_21
  4993  0FDF  2FE1               	goto	u70_20
  4994  0FE0                     u70_21:	
  4995  0FE0  2FD0               	goto	i1l1532
  4996  0FE1                     u70_20:	
  4997  0FE1                     i1l1540:	
  4998  0FE1  0872               	movf	___bmul@product,w
  4999  0FE2                     i1l412:	
  5000  0FE2  0008               	return
  5001  0FE3                     __end_of___bmul:	
  5002                           
  5003                           	psect	text32
  5004  06AD                     __ptext32:	
  5005 ;; *************** function _CLOCK_Increment *****************
  5006 ;; Defined at:
  5007 ;;		line 87 in file "Clock.c"
  5008 ;; Parameters:    Size  Location     Type
  5009 ;;		None
  5010 ;; Auto vars:     Size  Location     Type
  5011 ;;		None
  5012 ;; Return value:  Size  Location     Type
  5013 ;;                  1    wreg      void 
  5014 ;; Registers used:
  5015 ;;		wreg, status,2, status,0
  5016 ;; Tracked objects:
  5017 ;;		On entry : 0/0
  5018 ;;		On exit  : 0/0
  5019 ;;		Unchanged: 0/0
  5020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5021 ;;      Params:         0       0       0       0       0
  5022 ;;      Locals:         0       0       0       0       0
  5023 ;;      Temps:          1       0       0       0       0
  5024 ;;      Totals:         1       0       0       0       0
  5025 ;;Total ram usage:        1 bytes
  5026 ;; Hardware stack levels used:    1
  5027 ;; This function calls:
  5028 ;;		Nothing
  5029 ;; This function is called by:
  5030 ;;		_CLOCK_Update
  5031 ;; This function uses a non-reentrant model
  5032 ;;
  5033                           
  5034                           
  5035                           ;psect for function _CLOCK_Increment
  5036  06AD                     _CLOCK_Increment:	
  5037  06AD                     i1l1780:	
  5038                           ;incstack = 0
  5039                           ; Regs used in _CLOCK_Increment: [wreg+status,2+status,0]
  5040                           
  5041                           
  5042                           ;Clock.c: 90:     CurrentTime.mSeconds+=(20);
  5043  06AD  3014               	movlw	20
  5044  06AE  1283               	bcf	3,5	;RP0=0, select bank0
  5045  06AF  1303               	bcf	3,6	;RP1=0, select bank0
  5046  06B0  07B7               	addwf	_CurrentTime+3,f
  5047  06B1  1803               	skipnc
  5048  06B2  0AB8               	incf	_CurrentTime+4,f
  5049  06B3  3000               	movlw	0
  5050  06B4  07B8               	addwf	_CurrentTime+4,f
  5051                           
  5052                           ;Clock.c: 101:     if(CurrentTime.mSeconds >= 980 )
  5053  06B5  3003               	movlw	3
  5054  06B6  0238               	subwf	_CurrentTime+4,w
  5055  06B7  30D4               	movlw	212
  5056  06B8  1903               	skipnz
  5057  06B9  0237               	subwf	_CurrentTime+3,w
  5058  06BA  1C03               	skipc
  5059  06BB  2EBD               	goto	u113_21
  5060  06BC  2EBE               	goto	u113_20
  5061  06BD                     u113_21:	
  5062  06BD  2EE2               	goto	i1l180
  5063  06BE                     u113_20:	
  5064  06BE                     i1l1782:	
  5065                           
  5066                           ;Clock.c: 102:     {;Clock.c: 105:         CurrentTime.mSeconds = 0;
  5067  06BE  01B7               	clrf	_CurrentTime+3
  5068  06BF  01B8               	clrf	_CurrentTime+4
  5069  06C0                     i1l1784:	
  5070                           
  5071                           ;Clock.c: 106:         CurrentTime.seconds += 1;
  5072  06C0  3001               	movlw	1
  5073  06C1  00F0               	movwf	??_CLOCK_Increment
  5074  06C2  0870               	movf	??_CLOCK_Increment,w
  5075  06C3  07B6               	addwf	_CurrentTime+2,f
  5076  06C4                     i1l1786:	
  5077                           
  5078                           ;Clock.c: 108:         if(CurrentTime.seconds>=60)
  5079  06C4  303C               	movlw	60
  5080  06C5  0236               	subwf	_CurrentTime+2,w
  5081  06C6  1C03               	skipc
  5082  06C7  2EC9               	goto	u114_21
  5083  06C8  2ECA               	goto	u114_20
  5084  06C9                     u114_21:	
  5085  06C9  2EE2               	goto	i1l180
  5086  06CA                     u114_20:	
  5087  06CA                     i1l1788:	
  5088                           
  5089                           ;Clock.c: 109:         {;Clock.c: 112:             CurrentTime.seconds = 0;
  5090  06CA  01B6               	clrf	_CurrentTime+2
  5091  06CB                     i1l1790:	
  5092                           
  5093                           ;Clock.c: 113:             CurrentTime.minuts += 1;
  5094  06CB  3001               	movlw	1
  5095  06CC  00F0               	movwf	??_CLOCK_Increment
  5096  06CD  0870               	movf	??_CLOCK_Increment,w
  5097  06CE  07B5               	addwf	_CurrentTime+1,f
  5098  06CF                     i1l1792:	
  5099                           
  5100                           ;Clock.c: 115:             if(CurrentTime.minuts>=60)
  5101  06CF  303C               	movlw	60
  5102  06D0  0235               	subwf	_CurrentTime+1,w
  5103  06D1  1C03               	skipc
  5104  06D2  2ED4               	goto	u115_21
  5105  06D3  2ED5               	goto	u115_20
  5106  06D4                     u115_21:	
  5107  06D4  2EE2               	goto	i1l180
  5108  06D5                     u115_20:	
  5109  06D5                     i1l1794:	
  5110                           
  5111                           ;Clock.c: 116:             {;Clock.c: 119:                 CurrentTime.minuts = 0;
  5112  06D5  01B5               	clrf	_CurrentTime+1
  5113  06D6                     i1l1796:	
  5114                           
  5115                           ;Clock.c: 120:                 CurrentTime.hours += 1;
  5116  06D6  3001               	movlw	1
  5117  06D7  00F0               	movwf	??_CLOCK_Increment
  5118  06D8  0870               	movf	??_CLOCK_Increment,w
  5119  06D9  07B4               	addwf	_CurrentTime,f
  5120  06DA                     i1l1798:	
  5121                           
  5122                           ;Clock.c: 122:                 if(CurrentTime.hours>=24){
  5123  06DA  3018               	movlw	24
  5124  06DB  0234               	subwf	_CurrentTime,w
  5125  06DC  1C03               	skipc
  5126  06DD  2EDF               	goto	u116_21
  5127  06DE  2EE0               	goto	u116_20
  5128  06DF                     u116_21:	
  5129  06DF  2EE2               	goto	i1l177
  5130  06E0                     u116_20:	
  5131  06E0                     i1l1800:	
  5132                           
  5133                           ;Clock.c: 125:                     CurrentTime.hours = 0;
  5134  06E0  01B4               	clrf	_CurrentTime
  5135  06E1  2EE2               	goto	i1l180
  5136  06E2                     i1l177:	
  5137                           ;Clock.c: 128:         }
  5138                           
  5139  06E2                     i1l180:	
  5140  06E2  0008               	return
  5141  06E3                     __end_of_CLOCK_Increment:	
  5142  007E                     btemp	set	126	;btemp
  5143  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        14
    BSS         25
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     23      62
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    set_mode_process@var	PTR unsigned char  size(1) Largest target is 5
		 -> CurrentTime(BANK0[5]), 

    CLOCK_GetTime@t	PTR struct . size(1) Largest target is 5
		 -> DISP_Set_Minutes_Operation@tt(BANK0[5]), DISP_Set_Hours_Operation@tt(BANK0[5]), DISP_Normal_Operation@tt(BANK0[5]), 

    GPIO_Init_Pin@DirRegAddress	PTR unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR1[1]), 

    GPIO_Init_Port@DirRegAddress	PTR unsigned char  size(2) Largest target is 1
		 -> TRISD(SFR1[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _TMR0_ISR in COMMON

    _TMR0_ISR->_Disp_Update
    _SW_Update->_SW_UpdateState
    _SW_UpdateState->___bmul
    _SSD_Update->_SSD_Disable
    _SSD_Update->_SSD_Enable
    _DISP_Set_Minutes_Operation->i1_SSD_Set_Symbol
    _DISP_Set_Hours_Operation->i1_SSD_Set_Symbol
    _DISP_Normal_Operation->i1_SSD_Set_Symbol
    i1_SSD_Set_Symbol->___awdiv
    _CLOCK_Update->_set_mode_process
    _set_mode_process->_SW_GetState
    _SW_GetState->___bmul

Critical Paths under _main in BANK0

    _main->_Disp_Init
    _SW_Init->_GPIO_Init_Pin
    _Disp_Init->_SSD_Init
    _SSD_Init->_GPIO_Init_Pin

Critical Paths under _TMR0_ISR in BANK0

    _Disp_Update->_DISP_Normal_Operation
    _Disp_Update->_DISP_Set_Hours_Operation
    _Disp_Update->_DISP_Set_Minutes_Operation

Critical Paths under _main in BANK1

    None.

Critical Paths under _TMR0_ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TMR0_ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TMR0_ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    9075
                                             21 BANK0      2     2      0
                         _CLOCK_Init
                          _Disp_Init
                           _SSD_Init
                     _SSD_Set_Symbol
                            _SW_Init
                           _TMR_Init
                          _TMR_Start
 ---------------------------------------------------------------------------------
 (1) _TMR_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SW_Init                                              1     1      0    1824
                                             19 BANK0      1     1      0
                      _GPIO_Init_Pin
 ---------------------------------------------------------------------------------
 (1) _Disp_Init                                            1     1      0    3614
                                             20 BANK0      1     1      0
                           _SSD_Init
                     _SSD_Set_Symbol
 ---------------------------------------------------------------------------------
 (1) _SSD_Set_Symbol                                       3     2      1    1452
                                             11 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (1) _SSD_Init                                             1     1      0    2162
                                             19 BANK0      1     1      0
                      _GPIO_Init_Pin
                     _GPIO_Init_Port
 ---------------------------------------------------------------------------------
 (2) _GPIO_Init_Port                                       7     4      3     338
                                             11 BANK0      7     4      3
 ---------------------------------------------------------------------------------
 (2) _GPIO_Init_Pin                                        8     4      4    1824
                                             11 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _CLOCK_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _TMR0_ISR                                             3     3      0   11789
                                              8 BANK0      3     3      0
                       _CLOCK_Update
                        _Disp_Update
                         _SSD_Update
                          _SW_Update
 ---------------------------------------------------------------------------------
 (5) _SW_Update                                            2     2      0     742
                                              8 COMMON     2     2      0
                     _SW_UpdateState
 ---------------------------------------------------------------------------------
 (6) _SW_UpdateState                                       4     4      0     742
                                              4 COMMON     4     4      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (5) _SSD_Update                                           1     1      0      44
                                              3 COMMON     1     1      0
                     _SSD_Data_write
                        _SSD_Disable
                         _SSD_Enable
 ---------------------------------------------------------------------------------
 (6) _SSD_Enable                                           3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (6) _SSD_Disable                                          3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (6) _SSD_Data_write                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _Disp_Update                                          2     2      0    9605
                                             12 COMMON     2     2      0
                      _CLOCK_GetMode
              _DISP_Normal_Operation
           _DISP_Set_Hours_Operation
         _DISP_Set_Minutes_Operation
 ---------------------------------------------------------------------------------
 (6) _DISP_Set_Minutes_Operation                           8     8      0    3209
                                              0 BANK0      8     8      0
                      _CLOCK_GetTime
                 _SSD_Set_Second_Dot
                            ___awdiv
                            ___awmod
                   i1_SSD_Set_Symbol
 ---------------------------------------------------------------------------------
 (6) _DISP_Set_Hours_Operation                             8     8      0    3209
                                              0 BANK0      8     8      0
                      _CLOCK_GetTime
                 _SSD_Set_Second_Dot
                            ___awdiv
                            ___awmod
                   i1_SSD_Set_Symbol
 ---------------------------------------------------------------------------------
 (7) _SSD_Set_Second_Dot                                   2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (6) _DISP_Normal_Operation                                8     8      0    3187
                                              0 BANK0      8     8      0
                      _CLOCK_GetTime
              _SSD_Toggle_Second_Dot
                            ___awdiv
                            ___awmod
                   i1_SSD_Set_Symbol
 ---------------------------------------------------------------------------------
 (7) i1_SSD_Set_Symbol                                     3     2      1     460
                                              9 COMMON     3     2      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              9     5      4    1212
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (7) _SSD_Toggle_Second_Dot                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _CLOCK_GetTime                                        2     2      0     187
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (6) _CLOCK_GetMode                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _CLOCK_Update                                         2     2      0    1398
                                             11 COMMON     2     2      0
                    _CLOCK_Increment
                        _SW_GetState
                   _set_mode_process
 ---------------------------------------------------------------------------------
 (6) _set_mode_process                                     3     2      1     896
                                              8 COMMON     3     2      1
                        _SW_GetState
 ---------------------------------------------------------------------------------
 (7) _SW_GetState                                          4     4      0     502
                                              4 COMMON     4     4      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (7) ___bmul                                               4     3      1     456
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (6) _CLOCK_Increment                                      1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CLOCK_Init
   _Disp_Init
     _SSD_Init
       _GPIO_Init_Pin
       _GPIO_Init_Port
     _SSD_Set_Symbol
   _SSD_Init
     _GPIO_Init_Pin
     _GPIO_Init_Port
   _SSD_Set_Symbol
   _SW_Init
     _GPIO_Init_Pin
   _TMR_Init
   _TMR_Start

 _TMR0_ISR (ROOT)
   _CLOCK_Update
     _CLOCK_Increment
     _SW_GetState
       ___bmul
     _set_mode_process
       _SW_GetState
         ___bmul
   _Disp_Update
     _CLOCK_GetMode
     _DISP_Normal_Operation
       _CLOCK_GetTime
       _SSD_Toggle_Second_Dot
       ___awdiv
       ___awmod
       i1_SSD_Set_Symbol
         ___awdiv (ARG)
         ___awmod (ARG)
     _DISP_Set_Hours_Operation
       _CLOCK_GetTime
       _SSD_Set_Second_Dot
       ___awdiv
       ___awmod
       i1_SSD_Set_Symbol
         ___awdiv (ARG)
         ___awmod (ARG)
     _DISP_Set_Minutes_Operation
       _CLOCK_GetTime
       _SSD_Set_Second_Dot
       ___awdiv
       ___awmod
       i1_SSD_Set_Symbol
         ___awdiv (ARG)
         ___awmod (ARG)
   _SSD_Update
     _SSD_Data_write
     _SSD_Disable
     _SSD_Enable
   _SW_Update
     _SW_UpdateState
       ___bmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     17      3E       5       77.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      4C      12        0.0%
ABS                  0      0      4C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Jan 10 18:49:41 2020

             __end_of_SSD_Data_write 1000                  SSD_Set_Second_Dot@s 0071  
                                  pc 0002                           _SSD_Update 077D  
                     ___bmul@product 0072                          __CFG_CP$OFF 0000  
                __end_of_SW_GetState 0FBA                                   l24 0368  
                                 l19 04A0                                   l43 05F4  
                                 l44 05F4                                   l75 04FC  
                                 l78 0F92                         ___awdiv@sign 0076  
                                 fsr 0004               ?_SSD_Toggle_Second_Dot 0070  
                                l230 074B                                  l128 0637  
                                l167 0FCD                                  l286 0F61  
                                l294 0F86                                  _GIE 005F  
                                _PS0 0408                                  _PS1 0409  
                                _PS2 040A                         __CFG_CPD$OFF 0000  
                                u710 044C                                  u711 044B  
                                u800 0333                                  u720 045B  
                                u801 0332                                  u721 045A  
                                u810 0342                                  u730 046A  
                                u811 0341                                  u731 0469  
                                u740 0479                                  u741 0478  
                                u750 0488                                  u751 0487  
                                u824 034B                                  u760 0490  
                                u825 0349                                  u761 048F  
                                u834 0359                                  u770 0306  
                                u835 0357                                  u771 0305  
                                u780 0315                                  u781 0314  
                                u790 0324                                  u791 0323  
                                fsr0 0004                                  indf 0000  
                       ___awmod@sign 0076                         __CFG_FOSC$HS 0000  
                       __CFG_LVP$OFF 0000                                 l2010 05AB  
                               l2020 05C3                                 l2012 05AB  
                               l2030 05EF                                 l2022 05CD  
                               l2014 05B0                                 l2024 05D9  
                               l2016 05B5                                 l2026 05E5  
                               l2018 05BA                                 l2028 05EA  
                               l1700 04FB                                 l1550 045B  
                               l1702 0F8A                                 l1560 0490  
                               l1552 046A                                 l1544 043D  
                               l1570 02F7                                 l1562 0493  
                               l1554 0479                                 l1546 043D  
                               l1580 0342                                 l1572 0306  
                               l1564 0497                                 l1556 0488  
                               l1548 044C                                 l1900 0F7D  
                               l1574 0315                                 l1582 0343  
                               l1558 0489                                 l1902 0F81  
                               l1576 0324                                 l1568 02F7  
                               l1904 0F82                                 l1578 0333  
                               l1690 04BD                                 l1906 0F83  
                               l1692 04C2                                 l1694 04D5  
                               l1870 060B                                 l1696 04E3  
                               l1688 04A1                                 l1880 0630  
                               l1872 060D                                 l1864 05F8  
                               l1890 0FBA                                 l1698 04F6  
                               l1882 0633                                 l1874 061D  
                               l1866 0606                                 l1892 0FC2  
                               l1884 0635                                 l1876 061F  
                               l1868 0609                                 l1894 0FC7  
                               l1886 0718                                 l1878 0621  
                               l1888 0748                                 l1896 0F5B  
                               l1898 0F7C                                 _T0CS 040D  
                               i1l84 07AB                                 i1l78 0F7B  
                               i1l95 077C                                 _TMR0 0001  
                       __CFG_WRT$OFF 0000                                 _main 05AB  
                               btemp 007E                                 start 0010  
                __size_of_CLOCK_Init 0014                  __end_of_Disp_Update 06AD  
                    __end_of_SW_Init 0638                 __end_of_CLOCK_Update 03D6  
                  ___bmul@multiplier 0073                        _GPIO_Init_Pin 02F7  
                    ?_SSD_Data_write 0070                       _SSD_Set_Symbol 0F87  
                              ?_main 0070                      __end_of___awdiv 043D  
                      __CFG_WDTE$OFF 0000                      __end_of___awmod 0556  
                    ___awdiv@divisor 0070                                i1l112 0F5A  
                              i1l105 0717                                i1l131 0FB9  
                              i1l115 0F69                                i1l109 0FFF  
                              i1l207 0673                                i1l152 0125  
                              i1l137 05AA                                i1l170 07FF  
                              i1l251 01CE                                i1l180 06E2  
                              i1l412 0FE2                                i1l236 06AC  
                              i1l173 07ED                                i1l245 02F6  
                              i1l177 06E2                                i1l257 0270  
                              i1l186 03D5                                i1l291 07C3  
                              i1l189 0383                                i1l552 0555  
                              i1l539 043C                      ___awdiv@counter 0075  
                              _PORTB 0006                                _PORTD 0008  
                              u70_20 0FE1                                u70_21 0FE0  
                              _TRISA 0085                                _TRISB 0086  
                              _TRISC 0087                                _TRISD 0088  
                              _TRISE 0089                                u90_20 041A  
                              u90_21 0419                                u90_25 0416  
                              u91_25 0422                                u92_20 042E  
                              u84_20 03DB                                u92_21 042D  
                              u84_21 03DA                                u69_20 0FD4  
                              u93_20 0433                                u85_20 03E6  
                              u69_21 0FD3                                u93_21 0432  
                              u85_21 03E5                                u86_20 03F7  
                              u94_20 0502                                u86_21 03F6  
                              u94_21 0501                                u95_20 050D  
                              u95_21 050C                                u87_25 03FB  
                              u88_20 0409                                u96_20 0518  
                              u88_21 0408                                u96_21 0517  
                              u89_25 040A                                u97_25 051C  
                              u98_20 052A                                u98_21 0529  
                              u99_20 0534                                u99_21 0533  
                              u99_25 0530                  set_mode_process@var 007A  
                   __end_of_TMR0_ISR 07CE                    _GPIO_Init_Port$31 0049  
                  ??_CLOCK_Increment 0070                __end_of_CLOCK_GetMode 0800  
              __end_of_CLOCK_GetTime 07EE                     __end_of_SSD_Init 04FD  
                     __CFG_BOREN$OFF 0000                                pclath 000A  
                   __end_of_TMR_Init 0F62                                status 0003  
                              wtemp0 007E                         SSD_Disable@s 0072  
            __size_of_SW_UpdateState 00F9                     _Second_Dot_State 0032  
  __size_of_DISP_Set_Hours_Operation 00A9            ?_DISP_Set_Hours_Operation 0070  
                        _SW_GetState 0FA6                   __size_of_TMR_Start 000B  
                        ?_SSD_Enable 0070                       ?_GPIO_Init_Pin 0044  
                    __initialization 0013                         __end_of_main 05F8  
             __end_of_SSD_Set_Symbol 0F93                       _GPIO_Init_Port 043D  
                        ?_SSD_Update 0070                               ??_main 004E  
                 __size_of_SW_Update 0055          GPIO_Init_Port@DirRegAddress 0044  
                 __size_of_Disp_Init 0034           GPIO_Init_Pin@DirRegAddress 0044  
                   ___awdiv@dividend 0072            __size_ofi1_SSD_Set_Symbol 000A  
                             u100_25 053B                               u101_20 0547  
                             u101_21 0546                               u102_20 054C  
                             i1l2000 068F                               u110_20 00BA  
                             u102_21 054B                               u110_21 00B9  
                             i1l2004 0695                               u103_20 0FF3  
                             u111_20 00DE                               i1l2040 07B9  
                             i1l2032 07AC                               u103_21 0FF2  
                             u111_21 00DD                               i1l2042 07BE  
                             i1l2034 07AD                               i1l2036 07AF  
                             i1l2038 07B4                               u120_20 0669  
                             i1l1600 07DE                               u112_20 00F0  
                             u120_21 0668                               u112_21 00EF  
                             i1l1530 0FCF                               i1l1602 07E5  
                             i1l1610 03E0                               i1l2170 06A1  
                             i1l1540 0FE1                               i1l1532 0FD0  
                             i1l2172 0397                               i1l1620 03F1  
                             i1l1612 03E2                               i1l1604 03D6  
                             i1l2164 0117                               u104_25 0FF6  
                             i1l1534 0FD4                               i1l2174 03CD  
                             i1l1630 0409                               i1l1622 03F7  
                             i1l1614 03E6                               i1l1606 03D7  
                             i1l1710 075A                               i1l2166 0709  
                             i1l1800 06E0                               u113_20 06BE  
                             i1l1536 0FD8                               i1l1632 041A  
                             i1l1624 03FA                               i1l1640 042E  
                             i1l1616 03EB                               i1l1608 03DB  
                             u121_20 02EE                               i1l1720 0FE3  
                             i1l2168 076E                               i1l1712 0760  
                             i1l1704 074D                               u105_20 0041  
                             u113_21 06BD                               u121_21 02ED  
                             u105_21 0040                               i1l1538 0FDA  
                             i1l1810 0656                               i1l1802 0639  
                             i1l1642 0433                               i1l1634 0420  
                             i1l1626 0401                               i1l1618 03EF  
                             i1l1650 04FE                               i1l1722 0FEE  
                             i1l1706 074E                               i1l1714 0766  
                             i1l1730 06EC                               i1l1812 0661  
                             i1l1804 0644                               i1l1644 0438  
                             i1l1636 0421                               i1l1628 0405  
                             i1l1660 0512                               i1l1652 0502  
                             i1l1820 02E2                               i1l1724 0FF3  
                             i1l1708 0754                               i1l1732 06F3  
                             i1l1590 0FA7                               i1l1814 0669  
                             i1l1806 064B                               i1l1638 0428  
                             i1l1670 052A                               i1l1662 0518  
                             i1l1654 0507                               i1l1822 02E8  
                             i1l1830 015F                               i1l1734 06FA  
                             i1l1726 06E4                               i1l1750 0062  
                             i1l1742 002E                               u114_20 06CA  
                             i1l1592 0FA7                               i1l1816 066F  
                             i1l1808 0653                               i1l1680 054C  
                             i1l1672 0534                               i1l1664 051B  
                             i1l1656 0509                               i1l1648 04FD  
                             i1l1824 02EE                               i1l1840 01C1  
                             u122_20 016D                               i1l1832 0165  
                             i1l1728 06E5                               i1l1736 0701  
                             i1l1920 079D                               i1l1912 078A  
                             i1l1760 00BA                               i1l1752 0074  
                             u106_20 0053                               i1l1744 002F  
                             u130_20 0562                               u114_21 06C9  
                             u122_21 016C                               u106_21 0052  
                             u130_21 0561                               i1l1594 0FB8  
                             i1l1586 0F54                               i1l1682 0551  
                             i1l1674 053A                               i1l1666 0522  
                             i1l1658 050D                               i1l1826 02F3  
                             i1l1818 0271                               i1l1842 01C9  
                             i1l1834 016D                               i1l1850 0213  
                             i1l1922 079E                               i1l1914 078B  
                             i1l1762 00CC                               i1l1754 0086  
                             i1l1746 0041                               i1l1770 0102  
                             i1l1930 0563                               i1l1780 06AD  
                             i1l1676 0541                               i1l1668 0526  
                             i1l1588 0F63                               i1l1844 01CA  
                             i1l1836 01A3                               i1l1828 0126  
                             i1l1860 026B                               i1l1852 021B  
                             i1l1924 07A3                               i1l1916 0791  
                             i1l1908 077D                               i1l1764 00DE  
                             i1l1756 0096                               i1l1748 0053  
                             i1l1940 0581                               i1l1932 0564  
                             i1l1790 06CB                               i1l1782 06BE  
                             i1l1598 07CF                               i1l1678 0547  
                             i1l1686 0F73                               i1l1838 01AB  
                             i1l1862 026C                               i1l1854 024C  
                             i1l1846 01CF                               i1l1918 0797  
                             i1l1766 00F0                               i1l1758 00A8  
                             i1l1950 05A7                               i1l1942 0587  
                             i1l1934 056D                               i1l1926 0556  
                             u115_20 06D5                               i1l1792 06CF  
                             i1l1784 06C0                               i1l1952 0369  
                             i1l1776 07FC                               u123_20 01AB  
                             i1l1856 0254                               i1l1848 020D  
                             u107_20 0074                               i1l1944 058D  
                             i1l1936 0573                               u115_21 06D4  
                             u123_21 01AA                               u107_21 0073  
                             i1l1794 06D5                               i1l1786 06C4  
                             i1l1962 0386                               i1l1970 03A2  
                             i1l1858 0263                               i1l1946 059A  
                             i1l1938 0579                               i1l1796 06D6  
                             i1l1788 06CA                               i1l1972 03A9  
                             i1l1980 03C5                               i1l1964 038B  
                             i1l1956 0376                               i1l1948 05A0  
                             u131_25 0590                               i1l1798 06DA  
                             i1l1974 03AF                               i1l1958 0377  
                             i1l1990 0674                               u116_20 06E0  
                             i1l1976 03BA                               i1l1968 038D  
                             u124_20 01C9                               u108_20 0086  
                             u132_20 05A7                               u116_21 06DF  
                             u124_21 01C8                               u108_21 0085  
                             u132_21 05A6                               i1l1994 0681  
                             i1l1996 0683                               i1l1998 0689  
                             u117_20 0644                               u133_20 0375  
                             u125_20 021B                               u109_20 00A8  
                             u117_21 0643                               u133_21 0374  
                             u125_21 021A                               u109_21 00A7  
                             u118_20 0653                               u134_20 0382  
                             u126_20 0254                               u118_21 0652  
                             u134_21 0381                               u126_21 0253  
                             u119_20 0661                               u135_20 03A9  
                             u127_20 026B                               u119_21 0660  
                             u135_21 03A8                               u127_21 026A  
                 _SSD_Set_Second_Dot 0F62                               u136_20 0680  
                             u128_20 0789                               u136_21 067F  
                             u128_21 0788                               u129_20 079D  
                             u129_21 079C                          _Disp_Update 0674  
                          ??_SW_Init 004C                               _TMR0IE 005D  
                             _TMR0IF 005A                               _Buffer 0029  
                     __CFG_PWRTE$OFF 0000                  ?_SSD_Set_Second_Dot 0070  
             __end_of_GPIO_Init_Port 04A1                               ___bmul 0FCE  
                    ?_SSD_Set_Symbol 0044                            ??___awdiv 0074  
                          ??___awmod 0074                     ___awdiv@quotient 0077  
                    ___awmod@divisor 0070             SW_Update@SW_Time_Counter 005C  
                    ___awmod@counter 0075                         ??_CLOCK_Init 0044  
           __end_of_set_mode_process 0674                 ??_SSD_Set_Second_Dot 0070  
                             saved_w 007E                    __end_of_TMR_Start 0F87  
                __size_of_SSD_Enable 0035                  __size_of_SSD_Update 002F  
     __size_of_DISP_Normal_Operation 0086                __size_of_CLOCK_Update 006D  
            __end_of__initialization 0029        __end_of_DISP_Normal_Operation 02F7  
                    ??_GPIO_Init_Pin 0048                     GPIO_Init_Pin@dir 0047  
                  __end_of_SW_Update 05AB                         ?_SSD_Disable 0070  
                ___bmul@multiplicand 0070                    __end_of_Disp_Init 074C  
                 __end_of_CLOCK_Init 0FCE                      ?_GPIO_Init_Port 0044  
                     __pcstackCOMMON 0070              ??_SSD_Toggle_Second_Dot 0070  
                       __pidataBANK0 07EE                            ?_TMR0_ISR 0070  
                          ?_SSD_Init 0070                          _CurrentMode 0030  
                        _CurrentTime 0034                            ?_TMR_Init 0070  
                      SW_GetState@sw 0076                         _CLOCK_Update 0369  
                         __pbssBANK0 0020              DISP_Normal_Operation@tt 003C  
                     _SW_UpdateState 002D                     ??_SSD_Data_write 0070  
                         __pmaintext 05AB                              ?___bmul 0070  
     CLOCK_Update@CLOCK_Time_Counter 005B                           ??_TMR0_ISR 0041  
                         __pintentry 0004         DISP_Set_Minutes_Operation@tt 003C  
                         ??_SSD_Init 004C                      _CLOCK_Increment 06AD  
                         ??_TMR_Init 0044         ??_DISP_Set_Minutes_Operation 0039  
   __end_of_DISP_Set_Hours_Operation 01CF                     i1_SSD_Set_Symbol 0F72  
             __end_of_SW_UpdateState 0126                              _SW_DATA 0020  
                SSD_Set_Symbol@index 0044                              _SW_Init 05F8  
                       ?_SW_GetState 0070                         ??_SSD_Enable 0070  
              set_mode_process@limit 0078                      __size_of___bmul 0015  
                       ??_SSD_Update 0073                              ___awdiv 03D6  
                            ___awmod 04FD  __size_of_DISP_Set_Minutes_Operation 00A2  
                         _currentSSD 0033                              __ptext1 0F7C  
                            __ptext2 0F5B                              __ptext3 05F8  
                            __ptext4 0718                              __ptext5 0F87  
                            __ptext6 04A1                              __ptext7 043D  
                            __ptext8 02F7                              __ptext9 0FBA  
                   ___awmod@dividend 0072                   __end_of_SSD_Enable 0718  
                            clrloop0 0F6B                 end_of_initialization 0029  
                    ?_SW_UpdateState 0070                         ?_Disp_Update 0070  
                 __end_of_SSD_Update 07AC                     ??_SSD_Set_Symbol 0045  
            __end_of_CLOCK_Increment 06E3                 __size_of_SSD_Disable 0031  
             __size_of_CLOCK_GetMode 0004               __size_of_CLOCK_GetTime 0020  
                  ?_set_mode_process 0078                   ??_set_mode_process 0079  
                          _TMR_Start 0F7C             _DISP_Set_Hours_Operation 0126  
            GPIO_Init_Pin@pin_number 0046                     ??_GPIO_Init_Port 0047  
                  GPIO_Init_Port@dir 0046                            _SW_Update 0556  
                     __end_of___bmul 0FE3       __size_of_SSD_Toggle_Second_Dot 0007  
                          _Disp_Init 0718        __end_of_SSD_Toggle_Second_Dot 0F5B  
                  __size_of_TMR0_ISR 0022   __end_of_DISP_Set_Minutes_Operation 0271  
         _DISP_Set_Minutes_Operation 01CF                          SSD_Enable@s 0072  
                  __size_of_SSD_Init 005C                  start_initialization 0013  
                  __size_of_TMR_Init 0007          __size_of_SSD_Set_Second_Dot 0008  
                         ?_TMR_Start 0070                        _CLOCK_GetMode 07FC  
                      _CLOCK_GetTime 07CE                _DISP_Normal_Operation 0271  
              __end_of_GPIO_Init_Pin 0369                       SW_GetState@ret 0077  
                   ?_CLOCK_Increment 0070                             ??___bmul 0071  
               __size_of_SW_GetState 0014                           init_fetch0 0F93  
                         ?_SW_Update 0070             __end_ofi1_SSD_Set_Symbol 0F7C  
                         ?_Disp_Init 0070                          __pdataBANK0 004F  
                          ___latbits 0002                        __pcstackBANK0 0039  
                     ?_CLOCK_GetMode 0070                       ?_CLOCK_GetTime 0070  
                           ?_SW_Init 0070                 __size_of_Disp_Update 0039  
                           ?___awdiv 0070                             ?___awmod 0070  
             i1SSD_Set_Symbol@symbol 007B                     ??_SW_UpdateState 0074  
                        ??_TMR_Start 0044                     SW_UpdateState@sw 0077  
                  interrupt_function 0004               ?_DISP_Normal_Operation 0070  
                          clear_ram0 0F6A                             _TMR0_ISR 07AC  
                        ??_SW_Update 0078                          ??_Disp_Init 004D  
            __size_of_SSD_Data_write 001D                             _SSD_Init 04A1  
                           _TMR_Init 0F5B           ??_DISP_Set_Hours_Operation 0039  
               SSD_Set_Symbol@symbol 0046                      ??_CLOCK_GetMode 0070  
                    ??_CLOCK_GetTime 0070                     __size_of_SW_Init 0040  
          __size_of_set_mode_process 003C                        ??_SSD_Disable 0070  
         DISP_Set_Hours_Operation@tt 003C                     __size_of___awdiv 0067  
                   __size_of___awmod 0059           SSD_Update@SSD_Time_Counter 0031  
                         _CLOCK_Init 0FBA          ?_DISP_Set_Minutes_Operation 0070  
                      ?_CLOCK_Update 0070                             __ptext10 07AC  
                           __ptext11 0556                             __ptext20 0F62  
                           __ptext12 002D                             __ptext21 0271  
                           __ptext13 077D                             __ptext30 0FA6  
                           __ptext22 0F72                             __ptext14 06E3  
                           __ptext31 0FCE                             __ptext23 04FD  
                           __ptext15 074C                             __ptext32 06AD  
                           __ptext24 03D6                             __ptext16 0FE3  
                           __ptext25 0F54                             __ptext17 0674  
                           __ptext26 07CE                             __ptext18 01CF  
                           __ptext27 07FC                             __ptext19 0126  
                           __ptext28 0369                             __ptext29 0638  
              i1SSD_Set_Symbol@index 0079                        __size_of_main 004D  
                     CLOCK_GetTime@t 0071                  __end_of_SSD_Disable 077D  
                  ?i1_SSD_Set_Symbol 0079              __size_of_SSD_Set_Symbol 000C  
                 ??i1_SSD_Set_Symbol 007A                _SSD_Toggle_Second_Dot 0F54  
         __end_of_SSD_Set_Second_Dot 0F6A                       ??_CLOCK_Update 007B  
                           init_ram0 0F97                             intlevel1 0000  
                        _tempCounter 002D                        ??_SW_GetState 0074  
            __size_of_GPIO_Init_Port 0064                       _SSD_Data_write 0FE3  
       Disp_Update@DISP_Time_Counter 005A             __size_of_CLOCK_Increment 0036  
                        ?_CLOCK_Init 0070               __size_of_GPIO_Init_Pin 0072  
                 _Disp_Blink_counter 002F              ??_DISP_Normal_Operation 0039  
                      ??_Disp_Update 007C                          _SSD_LOT_ARR 004F  
                   _set_mode_process 0638                          _SSD_Disable 074C  
                         _SSD_Enable 06E3  
