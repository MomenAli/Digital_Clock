

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Jan 09 13:08:39 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	intentry,global,class=CODE,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	dabs	1,0x7E,2
    46  0000                     
    47                           ; Version 2.10
    48                           ; Generated 31/07/2019 GMT
    49                           ; 
    50                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC16F877A Definitions
    79                           ; 
    80                           ; SFR Addresses
    81  0000                     	;# 
    82  0001                     	;# 
    83  0002                     	;# 
    84  0003                     	;# 
    85  0004                     	;# 
    86  0005                     	;# 
    87  0006                     	;# 
    88  0007                     	;# 
    89  0008                     	;# 
    90  0009                     	;# 
    91  000A                     	;# 
    92  000B                     	;# 
    93  000C                     	;# 
    94  000D                     	;# 
    95  000E                     	;# 
    96  000E                     	;# 
    97  000F                     	;# 
    98  0010                     	;# 
    99  0011                     	;# 
   100  0012                     	;# 
   101  0013                     	;# 
   102  0014                     	;# 
   103  0015                     	;# 
   104  0015                     	;# 
   105  0016                     	;# 
   106  0017                     	;# 
   107  0018                     	;# 
   108  0019                     	;# 
   109  001A                     	;# 
   110  001B                     	;# 
   111  001B                     	;# 
   112  001C                     	;# 
   113  001D                     	;# 
   114  001E                     	;# 
   115  001F                     	;# 
   116  0081                     	;# 
   117  0085                     	;# 
   118  0086                     	;# 
   119  0087                     	;# 
   120  0088                     	;# 
   121  0089                     	;# 
   122  008C                     	;# 
   123  008D                     	;# 
   124  008E                     	;# 
   125  0091                     	;# 
   126  0092                     	;# 
   127  0093                     	;# 
   128  0094                     	;# 
   129  0098                     	;# 
   130  0099                     	;# 
   131  009C                     	;# 
   132  009D                     	;# 
   133  009E                     	;# 
   134  009F                     	;# 
   135  010C                     	;# 
   136  010D                     	;# 
   137  010E                     	;# 
   138  010F                     	;# 
   139  018C                     	;# 
   140  018D                     	;# 
   141  0000                     	;# 
   142  0001                     	;# 
   143  0002                     	;# 
   144  0003                     	;# 
   145  0004                     	;# 
   146  0005                     	;# 
   147  0006                     	;# 
   148  0007                     	;# 
   149  0008                     	;# 
   150  0009                     	;# 
   151  000A                     	;# 
   152  000B                     	;# 
   153  000C                     	;# 
   154  000D                     	;# 
   155  000E                     	;# 
   156  000E                     	;# 
   157  000F                     	;# 
   158  0010                     	;# 
   159  0011                     	;# 
   160  0012                     	;# 
   161  0013                     	;# 
   162  0014                     	;# 
   163  0015                     	;# 
   164  0015                     	;# 
   165  0016                     	;# 
   166  0017                     	;# 
   167  0018                     	;# 
   168  0019                     	;# 
   169  001A                     	;# 
   170  001B                     	;# 
   171  001B                     	;# 
   172  001C                     	;# 
   173  001D                     	;# 
   174  001E                     	;# 
   175  001F                     	;# 
   176  0081                     	;# 
   177  0085                     	;# 
   178  0086                     	;# 
   179  0087                     	;# 
   180  0088                     	;# 
   181  0089                     	;# 
   182  008C                     	;# 
   183  008D                     	;# 
   184  008E                     	;# 
   185  0091                     	;# 
   186  0092                     	;# 
   187  0093                     	;# 
   188  0094                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  018C                     	;# 
   200  018D                     	;# 
   201  0000                     	;# 
   202  0001                     	;# 
   203  0002                     	;# 
   204  0003                     	;# 
   205  0004                     	;# 
   206  0005                     	;# 
   207  0006                     	;# 
   208  0007                     	;# 
   209  0008                     	;# 
   210  0009                     	;# 
   211  000A                     	;# 
   212  000B                     	;# 
   213  000C                     	;# 
   214  000D                     	;# 
   215  000E                     	;# 
   216  000E                     	;# 
   217  000F                     	;# 
   218  0010                     	;# 
   219  0011                     	;# 
   220  0012                     	;# 
   221  0013                     	;# 
   222  0014                     	;# 
   223  0015                     	;# 
   224  0015                     	;# 
   225  0016                     	;# 
   226  0017                     	;# 
   227  0018                     	;# 
   228  0019                     	;# 
   229  001A                     	;# 
   230  001B                     	;# 
   231  001B                     	;# 
   232  001C                     	;# 
   233  001D                     	;# 
   234  001E                     	;# 
   235  001F                     	;# 
   236  0081                     	;# 
   237  0085                     	;# 
   238  0086                     	;# 
   239  0087                     	;# 
   240  0088                     	;# 
   241  0089                     	;# 
   242  008C                     	;# 
   243  008D                     	;# 
   244  008E                     	;# 
   245  0091                     	;# 
   246  0092                     	;# 
   247  0093                     	;# 
   248  0094                     	;# 
   249  0098                     	;# 
   250  0099                     	;# 
   251  009C                     	;# 
   252  009D                     	;# 
   253  009E                     	;# 
   254  009F                     	;# 
   255  010C                     	;# 
   256  010D                     	;# 
   257  010E                     	;# 
   258  010F                     	;# 
   259  018C                     	;# 
   260  018D                     	;# 
   261  0000                     	;# 
   262  0001                     	;# 
   263  0002                     	;# 
   264  0003                     	;# 
   265  0004                     	;# 
   266  0005                     	;# 
   267  0006                     	;# 
   268  0007                     	;# 
   269  0008                     	;# 
   270  0009                     	;# 
   271  000A                     	;# 
   272  000B                     	;# 
   273  000C                     	;# 
   274  000D                     	;# 
   275  000E                     	;# 
   276  000E                     	;# 
   277  000F                     	;# 
   278  0010                     	;# 
   279  0011                     	;# 
   280  0012                     	;# 
   281  0013                     	;# 
   282  0014                     	;# 
   283  0015                     	;# 
   284  0015                     	;# 
   285  0016                     	;# 
   286  0017                     	;# 
   287  0018                     	;# 
   288  0019                     	;# 
   289  001A                     	;# 
   290  001B                     	;# 
   291  001B                     	;# 
   292  001C                     	;# 
   293  001D                     	;# 
   294  001E                     	;# 
   295  001F                     	;# 
   296  0081                     	;# 
   297  0085                     	;# 
   298  0086                     	;# 
   299  0087                     	;# 
   300  0088                     	;# 
   301  0089                     	;# 
   302  008C                     	;# 
   303  008D                     	;# 
   304  008E                     	;# 
   305  0091                     	;# 
   306  0092                     	;# 
   307  0093                     	;# 
   308  0094                     	;# 
   309  0098                     	;# 
   310  0099                     	;# 
   311  009C                     	;# 
   312  009D                     	;# 
   313  009E                     	;# 
   314  009F                     	;# 
   315  010C                     	;# 
   316  010D                     	;# 
   317  010E                     	;# 
   318  010F                     	;# 
   319  018C                     	;# 
   320  018D                     	;# 
   321  0000                     	;# 
   322  0001                     	;# 
   323  0002                     	;# 
   324  0003                     	;# 
   325  0004                     	;# 
   326  0005                     	;# 
   327  0006                     	;# 
   328  0007                     	;# 
   329  0008                     	;# 
   330  0009                     	;# 
   331  000A                     	;# 
   332  000B                     	;# 
   333  000C                     	;# 
   334  000D                     	;# 
   335  000E                     	;# 
   336  000E                     	;# 
   337  000F                     	;# 
   338  0010                     	;# 
   339  0011                     	;# 
   340  0012                     	;# 
   341  0013                     	;# 
   342  0014                     	;# 
   343  0015                     	;# 
   344  0015                     	;# 
   345  0016                     	;# 
   346  0017                     	;# 
   347  0018                     	;# 
   348  0019                     	;# 
   349  001A                     	;# 
   350  001B                     	;# 
   351  001B                     	;# 
   352  001C                     	;# 
   353  001D                     	;# 
   354  001E                     	;# 
   355  001F                     	;# 
   356  0081                     	;# 
   357  0085                     	;# 
   358  0086                     	;# 
   359  0087                     	;# 
   360  0088                     	;# 
   361  0089                     	;# 
   362  008C                     	;# 
   363  008D                     	;# 
   364  008E                     	;# 
   365  0091                     	;# 
   366  0092                     	;# 
   367  0093                     	;# 
   368  0094                     	;# 
   369  0098                     	;# 
   370  0099                     	;# 
   371  009C                     	;# 
   372  009D                     	;# 
   373  009E                     	;# 
   374  009F                     	;# 
   375  010C                     	;# 
   376  010D                     	;# 
   377  010E                     	;# 
   378  010F                     	;# 
   379  018C                     	;# 
   380  018D                     	;# 
   381  0000                     	;# 
   382  0001                     	;# 
   383  0002                     	;# 
   384  0003                     	;# 
   385  0004                     	;# 
   386  0005                     	;# 
   387  0006                     	;# 
   388  0007                     	;# 
   389  0008                     	;# 
   390  0009                     	;# 
   391  000A                     	;# 
   392  000B                     	;# 
   393  000C                     	;# 
   394  000D                     	;# 
   395  000E                     	;# 
   396  000E                     	;# 
   397  000F                     	;# 
   398  0010                     	;# 
   399  0011                     	;# 
   400  0012                     	;# 
   401  0013                     	;# 
   402  0014                     	;# 
   403  0015                     	;# 
   404  0015                     	;# 
   405  0016                     	;# 
   406  0017                     	;# 
   407  0018                     	;# 
   408  0019                     	;# 
   409  001A                     	;# 
   410  001B                     	;# 
   411  001B                     	;# 
   412  001C                     	;# 
   413  001D                     	;# 
   414  001E                     	;# 
   415  001F                     	;# 
   416  0081                     	;# 
   417  0085                     	;# 
   418  0086                     	;# 
   419  0087                     	;# 
   420  0088                     	;# 
   421  0089                     	;# 
   422  008C                     	;# 
   423  008D                     	;# 
   424  008E                     	;# 
   425  0091                     	;# 
   426  0092                     	;# 
   427  0093                     	;# 
   428  0094                     	;# 
   429  0098                     	;# 
   430  0099                     	;# 
   431  009C                     	;# 
   432  009D                     	;# 
   433  009E                     	;# 
   434  009F                     	;# 
   435  010C                     	;# 
   436  010D                     	;# 
   437  010E                     	;# 
   438  010F                     	;# 
   439  018C                     	;# 
   440  018D                     	;# 
   441  0000                     	;# 
   442  0001                     	;# 
   443  0002                     	;# 
   444  0003                     	;# 
   445  0004                     	;# 
   446  0005                     	;# 
   447  0006                     	;# 
   448  0007                     	;# 
   449  0008                     	;# 
   450  0009                     	;# 
   451  000A                     	;# 
   452  000B                     	;# 
   453  000C                     	;# 
   454  000D                     	;# 
   455  000E                     	;# 
   456  000E                     	;# 
   457  000F                     	;# 
   458  0010                     	;# 
   459  0011                     	;# 
   460  0012                     	;# 
   461  0013                     	;# 
   462  0014                     	;# 
   463  0015                     	;# 
   464  0015                     	;# 
   465  0016                     	;# 
   466  0017                     	;# 
   467  0018                     	;# 
   468  0019                     	;# 
   469  001A                     	;# 
   470  001B                     	;# 
   471  001B                     	;# 
   472  001C                     	;# 
   473  001D                     	;# 
   474  001E                     	;# 
   475  001F                     	;# 
   476  0081                     	;# 
   477  0085                     	;# 
   478  0086                     	;# 
   479  0087                     	;# 
   480  0088                     	;# 
   481  0089                     	;# 
   482  008C                     	;# 
   483  008D                     	;# 
   484  008E                     	;# 
   485  0091                     	;# 
   486  0092                     	;# 
   487  0093                     	;# 
   488  0094                     	;# 
   489  0098                     	;# 
   490  0099                     	;# 
   491  009C                     	;# 
   492  009D                     	;# 
   493  009E                     	;# 
   494  009F                     	;# 
   495  010C                     	;# 
   496  010D                     	;# 
   497  010E                     	;# 
   498  010F                     	;# 
   499  018C                     	;# 
   500  018D                     	;# 
   501  0000                     	;# 
   502  0001                     	;# 
   503  0002                     	;# 
   504  0003                     	;# 
   505  0004                     	;# 
   506  0005                     	;# 
   507  0006                     	;# 
   508  0007                     	;# 
   509  0008                     	;# 
   510  0009                     	;# 
   511  000A                     	;# 
   512  000B                     	;# 
   513  000C                     	;# 
   514  000D                     	;# 
   515  000E                     	;# 
   516  000E                     	;# 
   517  000F                     	;# 
   518  0010                     	;# 
   519  0011                     	;# 
   520  0012                     	;# 
   521  0013                     	;# 
   522  0014                     	;# 
   523  0015                     	;# 
   524  0015                     	;# 
   525  0016                     	;# 
   526  0017                     	;# 
   527  0018                     	;# 
   528  0019                     	;# 
   529  001A                     	;# 
   530  001B                     	;# 
   531  001B                     	;# 
   532  001C                     	;# 
   533  001D                     	;# 
   534  001E                     	;# 
   535  001F                     	;# 
   536  0081                     	;# 
   537  0085                     	;# 
   538  0086                     	;# 
   539  0087                     	;# 
   540  0088                     	;# 
   541  0089                     	;# 
   542  008C                     	;# 
   543  008D                     	;# 
   544  008E                     	;# 
   545  0091                     	;# 
   546  0092                     	;# 
   547  0093                     	;# 
   548  0094                     	;# 
   549  0098                     	;# 
   550  0099                     	;# 
   551  009C                     	;# 
   552  009D                     	;# 
   553  009E                     	;# 
   554  009F                     	;# 
   555  010C                     	;# 
   556  010D                     	;# 
   557  010E                     	;# 
   558  010F                     	;# 
   559  018C                     	;# 
   560  018D                     	;# 
   561                           
   562                           	psect	idataBANK0
   563  0FE2                     __pidataBANK0:	
   564                           
   565                           ;initializer for _SSD_LOT_ARR
   566  0FE2  343F               	retlw	63
   567  0FE3  3406               	retlw	6
   568  0FE4  345B               	retlw	91
   569  0FE5  344F               	retlw	79
   570  0FE6  3466               	retlw	102
   571  0FE7  346D               	retlw	109
   572  0FE8  347D               	retlw	125
   573  0FE9  3407               	retlw	7
   574  0FEA  347F               	retlw	127
   575  0FEB  346F               	retlw	111
   576  0FEC  3400               	retlw	0
   577  0001                     _TMR0	set	1
   578  0008                     _PORTD	set	8
   579  0006                     _PORTB	set	6
   580  005F                     _GIE	set	95
   581  005D                     _TMR0IE	set	93
   582  005A                     _TMR0IF	set	90
   583  0089                     _TRISE	set	137
   584  0087                     _TRISC	set	135
   585  0085                     _TRISA	set	133
   586  0088                     _TRISD	set	136
   587  0086                     _TRISB	set	134
   588  040D                     _T0CS	set	1037
   589  0408                     _PS0	set	1032
   590  0409                     _PS1	set	1033
   591  040A                     _PS2	set	1034
   592                           
   593                           ; #config settings
   594  0000                     
   595                           	psect	cinit
   596  0013                     start_initialization:	
   597  0013                     __initialization:	
   598                           
   599                           ; Initialize objects allocated to BANK0
   600  0013  1383               	bcf	3,7	;select IRP bank0
   601  0014  305D               	movlw	low (__pdataBANK0+11)
   602  0015  00FD               	movwf	btemp+-1
   603  0016  300F               	movlw	high __pidataBANK0
   604  0017  00FE               	movwf	btemp
   605  0018  30E2               	movlw	low __pidataBANK0
   606  0019  00FF               	movwf	btemp+1
   607  001A  3052               	movlw	low __pdataBANK0
   608  001B  0084               	movwf	4
   609  001C  120A  158A  27F1  120A  118A  	fcall	init_ram0
   610                           
   611                           ; Clear objects allocated to BANK0
   612  0021  3020               	movlw	low __pbssBANK0
   613  0022  0084               	movwf	4
   614  0023  303C               	movlw	low (__pbssBANK0+28)
   615  0024  120A  158A  27BC  120A  118A  	fcall	clear_ram0
   616  0029                     end_of_initialization:	
   617                           ;End of C runtime variable initialization code
   618                           
   619  0029                     __end_of__initialization:	
   620  0029  0183               	clrf	3
   621  002A  120A  118A  2D3A   	ljmp	_main	;jump to C main() function
   622                           
   623                           	psect	bssBANK0
   624  0020                     __pbssBANK0:	
   625  0020                     _SW_DATA:	
   626  0020                     	ds	9
   627  0029                     _Buffer:	
   628  0029                     	ds	4
   629  002D                     _tempCounter:	
   630  002D                     	ds	2
   631  002F                     Disp_Update@DISP_Time_Counter:	
   632  002F                     	ds	1
   633  0030                     _Disp_Blink_counter:	
   634  0030                     	ds	1
   635  0031                     CLOCK_Update@CLOCK_Time_Counter:	
   636  0031                     	ds	1
   637  0032                     _CurrentMode:	
   638  0032                     	ds	1
   639  0033                     SW_Update@SW_Time_Counter:	
   640  0033                     	ds	1
   641  0034                     SSD_Update@SSD_Time_Counter:	
   642  0034                     	ds	1
   643  0035                     _Second_Dot_State:	
   644  0035                     	ds	1
   645  0036                     _currentSSD:	
   646  0036                     	ds	1
   647  0037                     _CurrentTime:	
   648  0037                     	ds	5
   649                           
   650                           	psect	dataBANK0
   651  0052                     __pdataBANK0:	
   652  0052                     _SSD_LOT_ARR:	
   653  0052                     	ds	11
   654                           
   655                           	psect	inittext
   656  0FED                     init_fetch0:	
   657                           ;	Called with low address in FSR and high address in W
   658                           
   659  0FED  087E               	movf	btemp,w
   660  0FEE  008A               	movwf	10
   661  0FEF  087F               	movf	btemp+1,w
   662  0FF0  0082               	movwf	2
   663  0FF1                     init_ram0:	
   664                           ;Called with:
   665                           ;	high address of idata address in btemp 
   666                           ;	low address of idata address in btemp+1 
   667                           ;	low address of data in FSR
   668                           ;	high address + 1 of data in btemp-1
   669                           
   670  0FF1  120A  158A  27ED  120A  158A  	fcall	init_fetch0
   671  0FF6  0080               	movwf	0
   672  0FF7  0A84               	incf	4,f
   673  0FF8  0804               	movf	4,w
   674  0FF9  067D               	xorwf	btemp+-1,w
   675  0FFA  1903               	btfsc	3,2
   676  0FFB  3400               	retlw	0
   677  0FFC  0AFF               	incf	btemp+1,f
   678  0FFD  1903               	btfsc	3,2
   679  0FFE  0AFE               	incf	btemp,f
   680  0FFF  2FF1               	goto	init_ram0
   681                           
   682                           	psect	clrtext
   683  0FBC                     clear_ram0:	
   684                           ;	Called with FSR containing the base address, and
   685                           ;	W with the last address+1
   686                           
   687  0FBC  0064               	clrwdt	;clear the watchdog before getting into this loop
   688  0FBD                     clrloop0:	
   689  0FBD  0180               	clrf	0	;clear RAM location pointed to by FSR
   690  0FBE  0A84               	incf	4,f	;increment pointer
   691  0FBF  0604               	xorwf	4,w	;XOR with final address
   692  0FC0  1903               	btfsc	3,2	;have we reached the end yet?
   693  0FC1  3400               	retlw	0	;all done for this memory range, return
   694  0FC2  0604               	xorwf	4,w	;XOR again to restore value
   695  0FC3  2FBD               	goto	clrloop0	;do the next byte
   696                           
   697                           	psect	cstackCOMMON
   698  0070                     __pcstackCOMMON:	
   699  0070                     ?_SSD_Init:	
   700  0070                     ?_SW_Init:	
   701                           ; 1 bytes @ 0x0
   702                           
   703  0070                     ?_Disp_Init:	
   704                           ; 1 bytes @ 0x0
   705                           
   706  0070                     ?_CLOCK_Init:	
   707                           ; 1 bytes @ 0x0
   708                           
   709  0070                     ?_TMR_Init:	
   710                           ; 1 bytes @ 0x0
   711                           
   712  0070                     ?_TMR_Start:	
   713                           ; 1 bytes @ 0x0
   714                           
   715  0070                     ?_SSD_Disable:	
   716                           ; 1 bytes @ 0x0
   717                           
   718  0070                     ??_SSD_Disable:	
   719                           ; 1 bytes @ 0x0
   720                           
   721  0070                     ?_SSD_Data_write:	
   722                           ; 1 bytes @ 0x0
   723                           
   724  0070                     ??_SSD_Data_write:	
   725                           ; 1 bytes @ 0x0
   726                           
   727  0070                     ?_SSD_Enable:	
   728                           ; 1 bytes @ 0x0
   729                           
   730  0070                     ??_SSD_Enable:	
   731                           ; 1 bytes @ 0x0
   732                           
   733  0070                     ?_SW_UpdateState:	
   734                           ; 1 bytes @ 0x0
   735                           
   736  0070                     ?_set_mode_process:	
   737                           ; 1 bytes @ 0x0
   738                           
   739  0070                     ?_DISP_Normal_Operation:	
   740                           ; 1 bytes @ 0x0
   741                           
   742  0070                     ?_DISP_Set_Hours_Operation:	
   743                           ; 1 bytes @ 0x0
   744                           
   745  0070                     ?_DISP_Set_Minutes_Operation:	
   746                           ; 1 bytes @ 0x0
   747                           
   748  0070                     ?_main:	
   749                           ; 1 bytes @ 0x0
   750                           
   751  0070                     ?_SSD_Update:	
   752                           ; 1 bytes @ 0x0
   753                           
   754  0070                     ?_SSD_Toggle_Second_Dot:	
   755                           ; 1 bytes @ 0x0
   756                           
   757  0070                     ??_SSD_Toggle_Second_Dot:	
   758                           ; 1 bytes @ 0x0
   759                           
   760  0070                     ?_SW_GetState:	
   761                           ; 1 bytes @ 0x0
   762                           
   763  0070                     ?_SW_Update:	
   764                           ; 1 bytes @ 0x0
   765                           
   766  0070                     ?_CLOCK_GetMode:	
   767                           ; 1 bytes @ 0x0
   768                           
   769  0070                     ??_CLOCK_GetMode:	
   770                           ; 1 bytes @ 0x0
   771                           
   772  0070                     ?_CLOCK_GetTime:	
   773                           ; 1 bytes @ 0x0
   774                           
   775  0070                     ??_CLOCK_GetTime:	
   776                           ; 1 bytes @ 0x0
   777                           
   778  0070                     ?_CLOCK_Increment:	
   779                           ; 1 bytes @ 0x0
   780                           
   781  0070                     ??_CLOCK_Increment:	
   782                           ; 1 bytes @ 0x0
   783                           
   784  0070                     ?_CLOCK_Update:	
   785                           ; 1 bytes @ 0x0
   786                           
   787  0070                     ?_Disp_Update:	
   788                           ; 1 bytes @ 0x0
   789                           
   790  0070                     ?_TMR0_ISR:	
   791                           ; 1 bytes @ 0x0
   792                           
   793  0070                     ?___bmul:	
   794                           ; 1 bytes @ 0x0
   795                           
   796  0070                     ?___awdiv:	
   797                           ; 1 bytes @ 0x0
   798                           
   799  0070                     ?___awmod:	
   800                           ; 2 bytes @ 0x0
   801                           
   802  0070                     ___bmul@multiplicand:	
   803                           ; 2 bytes @ 0x0
   804                           
   805  0070                     ___awdiv@divisor:	
   806                           ; 1 bytes @ 0x0
   807                           
   808  0070                     ___awmod@divisor:	
   809                           ; 2 bytes @ 0x0
   810                           
   811                           
   812                           ; 2 bytes @ 0x0
   813  0070                     	ds	1
   814  0071                     ??___bmul:	
   815  0071                     CLOCK_GetTime@t:	
   816                           ; 1 bytes @ 0x1
   817                           
   818                           
   819                           ; 1 bytes @ 0x1
   820  0071                     	ds	1
   821  0072                     SSD_Disable@s:	
   822  0072                     SSD_Enable@s:	
   823                           ; 1 bytes @ 0x2
   824                           
   825  0072                     ___bmul@product:	
   826                           ; 1 bytes @ 0x2
   827                           
   828  0072                     ___awdiv@dividend:	
   829                           ; 1 bytes @ 0x2
   830                           
   831  0072                     ___awmod@dividend:	
   832                           ; 2 bytes @ 0x2
   833                           
   834                           
   835                           ; 2 bytes @ 0x2
   836  0072                     	ds	1
   837  0073                     ??_SSD_Update:	
   838  0073                     ___bmul@multiplier:	
   839                           ; 1 bytes @ 0x3
   840                           
   841                           
   842                           ; 1 bytes @ 0x3
   843  0073                     	ds	1
   844  0074                     ??_SW_UpdateState:	
   845  0074                     ??_SW_GetState:	
   846                           ; 1 bytes @ 0x4
   847                           
   848  0074                     ??___awdiv:	
   849                           ; 1 bytes @ 0x4
   850                           
   851  0074                     ??___awmod:	
   852                           ; 1 bytes @ 0x4
   853                           
   854                           
   855                           ; 1 bytes @ 0x4
   856  0074                     	ds	1
   857  0075                     ___awdiv@counter:	
   858  0075                     ___awmod@counter:	
   859                           ; 1 bytes @ 0x5
   860                           
   861                           
   862                           ; 1 bytes @ 0x5
   863  0075                     	ds	1
   864  0076                     SW_GetState@sw:	
   865  0076                     ___awdiv@sign:	
   866                           ; 1 bytes @ 0x6
   867                           
   868  0076                     ___awmod@sign:	
   869                           ; 1 bytes @ 0x6
   870                           
   871                           
   872                           ; 1 bytes @ 0x6
   873  0076                     	ds	1
   874  0077                     SW_GetState@ret:	
   875  0077                     SW_UpdateState@sw:	
   876                           ; 1 bytes @ 0x7
   877                           
   878  0077                     ___awdiv@quotient:	
   879                           ; 1 bytes @ 0x7
   880                           
   881                           
   882                           ; 2 bytes @ 0x7
   883  0077                     	ds	1
   884  0078                     ??_set_mode_process:	
   885  0078                     ??_SW_Update:	
   886                           ; 1 bytes @ 0x8
   887                           
   888                           
   889                           ; 1 bytes @ 0x8
   890  0078                     	ds	1
   891  0079                     ?i1_SSD_Set_Symbol:	
   892  0079                     set_mode_process@var:	
   893                           ; 1 bytes @ 0x9
   894                           
   895  0079                     i1SSD_Set_Symbol@index:	
   896                           ; 1 bytes @ 0x9
   897                           
   898                           
   899                           ; 1 bytes @ 0x9
   900  0079                     	ds	1
   901  007A                     ??_CLOCK_Update:	
   902  007A                     ??i1_SSD_Set_Symbol:	
   903                           ; 1 bytes @ 0xA
   904                           
   905                           
   906                           ; 1 bytes @ 0xA
   907  007A                     	ds	1
   908  007B                     i1SSD_Set_Symbol@symbol:	
   909                           
   910                           ; 1 bytes @ 0xB
   911  007B                     	ds	1
   912  007C                     ??_Disp_Update:	
   913                           
   914                           ; 1 bytes @ 0xC
   915  007C                     	ds	2
   916                           
   917                           	psect	cstackBANK0
   918  003C                     __pcstackBANK0:	
   919  003C                     ??_DISP_Normal_Operation:	
   920  003C                     ??_DISP_Set_Hours_Operation:	
   921                           ; 1 bytes @ 0x0
   922                           
   923  003C                     ??_DISP_Set_Minutes_Operation:	
   924                           ; 1 bytes @ 0x0
   925                           
   926                           
   927                           ; 1 bytes @ 0x0
   928  003C                     	ds	3
   929  003F                     DISP_Normal_Operation@tt:	
   930  003F                     DISP_Set_Hours_Operation@tt:	
   931                           ; 5 bytes @ 0x3
   932                           
   933  003F                     DISP_Set_Minutes_Operation@tt:	
   934                           ; 5 bytes @ 0x3
   935                           
   936                           
   937                           ; 5 bytes @ 0x3
   938  003F                     	ds	5
   939  0044                     ??_TMR0_ISR:	
   940                           
   941                           ; 1 bytes @ 0x8
   942  0044                     	ds	3
   943  0047                     ?_SSD_Set_Symbol:	
   944  0047                     ??_CLOCK_Init:	
   945                           ; 1 bytes @ 0xB
   946                           
   947  0047                     ??_TMR_Init:	
   948                           ; 1 bytes @ 0xB
   949                           
   950  0047                     ??_TMR_Start:	
   951                           ; 1 bytes @ 0xB
   952                           
   953  0047                     ?_GPIO_Init_Port:	
   954                           ; 1 bytes @ 0xB
   955                           
   956  0047                     ?_GPIO_Init_Pin:	
   957                           ; 1 bytes @ 0xB
   958                           
   959  0047                     SSD_Set_Symbol@index:	
   960                           ; 1 bytes @ 0xB
   961                           
   962  0047                     GPIO_Init_Port@DirRegAddress:	
   963                           ; 1 bytes @ 0xB
   964                           
   965  0047                     GPIO_Init_Pin@DirRegAddress:	
   966                           ; 2 bytes @ 0xB
   967                           
   968                           
   969                           ; 2 bytes @ 0xB
   970  0047                     	ds	1
   971  0048                     ??_SSD_Set_Symbol:	
   972                           
   973                           ; 1 bytes @ 0xC
   974  0048                     	ds	1
   975  0049                     GPIO_Init_Port@dir:	
   976  0049                     GPIO_Init_Pin@pin_number:	
   977                           ; 1 bytes @ 0xD
   978                           
   979  0049                     SSD_Set_Symbol@symbol:	
   980                           ; 1 bytes @ 0xD
   981                           
   982                           
   983                           ; 1 bytes @ 0xD
   984  0049                     	ds	1
   985  004A                     ??_GPIO_Init_Port:	
   986  004A                     GPIO_Init_Pin@dir:	
   987                           ; 1 bytes @ 0xE
   988                           
   989                           
   990                           ; 1 bytes @ 0xE
   991  004A                     	ds	1
   992  004B                     ??_GPIO_Init_Pin:	
   993                           
   994                           ; 1 bytes @ 0xF
   995  004B                     	ds	1
   996  004C                     _GPIO_Init_Port$31:	
   997                           
   998                           ; 2 bytes @ 0x10
   999  004C                     	ds	3
  1000  004F                     ??_SSD_Init:	
  1001  004F                     ??_SW_Init:	
  1002                           ; 1 bytes @ 0x13
  1003                           
  1004                           
  1005                           ; 1 bytes @ 0x13
  1006  004F                     	ds	1
  1007  0050                     ??_Disp_Init:	
  1008                           
  1009                           ; 1 bytes @ 0x14
  1010  0050                     	ds	1
  1011  0051                     ??_main:	
  1012                           
  1013                           ; 1 bytes @ 0x15
  1014  0051                     	ds	1
  1015                           
  1016                           	psect	maintext
  1017  053A                     __pmaintext:	
  1018 ;;
  1019 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1020 ;;
  1021 ;; *************** function _main *****************
  1022 ;; Defined at:
  1023 ;;		line 18 in file "Digital_Clock.c"
  1024 ;; Parameters:    Size  Location     Type
  1025 ;;		None
  1026 ;; Auto vars:     Size  Location     Type
  1027 ;;  i               1    0        unsigned char 
  1028 ;; Return value:  Size  Location     Type
  1029 ;;                  1    wreg      void 
  1030 ;; Registers used:
  1031 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1032 ;; Tracked objects:
  1033 ;;		On entry : B00/0
  1034 ;;		On exit  : 0/0
  1035 ;;		Unchanged: 0/0
  1036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1037 ;;      Params:         0       0       0       0       0
  1038 ;;      Locals:         0       1       0       0       0
  1039 ;;      Temps:          0       1       0       0       0
  1040 ;;      Totals:         0       2       0       0       0
  1041 ;;Total ram usage:        2 bytes
  1042 ;; Hardware stack levels required when called:    8
  1043 ;; This function calls:
  1044 ;;		_CLOCK_Init
  1045 ;;		_Disp_Init
  1046 ;;		_SSD_Init
  1047 ;;		_SSD_Set_Symbol
  1048 ;;		_SW_Init
  1049 ;;		_TMR_Init
  1050 ;;		_TMR_Start
  1051 ;; This function is called by:
  1052 ;;		Startup code after reset
  1053 ;; This function uses a non-reentrant model
  1054 ;;
  1055                           
  1056                           
  1057                           ;psect for function _main
  1058  053A                     _main:	
  1059  053A                     l1942:	
  1060                           ;incstack = 0
  1061                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1062                           
  1063  053A                     l1944:	
  1064                           
  1065                           ;Digital_Clock.c: 21:     SSD_Init();
  1066  053A  120A  118A  2485  120A  118A  	fcall	_SSD_Init
  1067  053F                     l1946:	
  1068                           
  1069                           ;Digital_Clock.c: 22:     SW_Init();
  1070  053F  120A  118A  25CB  120A  118A  	fcall	_SW_Init
  1071  0544                     l1948:	
  1072                           
  1073                           ;Digital_Clock.c: 23:     Disp_Init();
  1074  0544  120A  118A  26AF  120A  118A  	fcall	_Disp_Init
  1075  0549                     l1950:	
  1076                           
  1077                           ;Digital_Clock.c: 26:     SSD_Set_Symbol(i,SSD_MINUTES_UNITS);
  1078  0549  1283               	bcf	3,5	;RP0=0, select bank0
  1079  054A  1303               	bcf	3,6	;RP1=0, select bank0
  1080  054B  01C7               	clrf	SSD_Set_Symbol@index
  1081  054C  3000               	movlw	0
  1082  054D  120A  118A  27EF  120A  118A  	fcall	_SSD_Set_Symbol
  1083  0552                     l1952:	
  1084                           
  1085                           ;Digital_Clock.c: 27:     SSD_Set_Symbol(2,SSD_MINUTES_TENS);
  1086  0552  1283               	bcf	3,5	;RP0=0, select bank0
  1087  0553  1303               	bcf	3,6	;RP1=0, select bank0
  1088  0554  01C7               	clrf	SSD_Set_Symbol@index
  1089  0555  0AC7               	incf	SSD_Set_Symbol@index,f
  1090  0556  3002               	movlw	2
  1091  0557  120A  118A  27EF  120A  118A  	fcall	_SSD_Set_Symbol
  1092  055C                     l1954:	
  1093                           
  1094                           ;Digital_Clock.c: 28:     SSD_Set_Symbol(3,SSD_HOURS_UNITS);
  1095  055C  3002               	movlw	2
  1096  055D  1283               	bcf	3,5	;RP0=0, select bank0
  1097  055E  1303               	bcf	3,6	;RP1=0, select bank0
  1098  055F  00D1               	movwf	??_main
  1099  0560  0851               	movf	??_main,w
  1100  0561  00C7               	movwf	SSD_Set_Symbol@index
  1101  0562  3003               	movlw	3
  1102  0563  120A  118A  27EF  120A  118A  	fcall	_SSD_Set_Symbol
  1103  0568                     l1956:	
  1104                           
  1105                           ;Digital_Clock.c: 29:     SSD_Set_Symbol(4,SSD_HOURS_TENS);
  1106  0568  3003               	movlw	3
  1107  0569  1283               	bcf	3,5	;RP0=0, select bank0
  1108  056A  1303               	bcf	3,6	;RP1=0, select bank0
  1109  056B  00D1               	movwf	??_main
  1110  056C  0851               	movf	??_main,w
  1111  056D  00C7               	movwf	SSD_Set_Symbol@index
  1112  056E  3004               	movlw	4
  1113  056F  120A  118A  27EF  120A  118A  	fcall	_SSD_Set_Symbol
  1114  0574                     l1958:	
  1115                           
  1116                           ;Digital_Clock.c: 32:     CLOCK_Init();
  1117  0574  120A  158A  27C4  120A  118A  	fcall	_CLOCK_Init
  1118  0579                     l1960:	
  1119                           
  1120                           ;Digital_Clock.c: 33:     TMR_Init();
  1121  0579  120A  158A  27B5  120A  118A  	fcall	_TMR_Init
  1122  057E                     l1962:	
  1123                           
  1124                           ;Digital_Clock.c: 34:     TMR_Start();
  1125  057E  120A  158A  27D7  120A  118A  	fcall	_TMR_Start
  1126  0583                     l43:	
  1127                           ;Digital_Clock.c: 37:     while(1)
  1128                           
  1129  0583                     l44:	
  1130                           ;Digital_Clock.c: 38:     {;Digital_Clock.c: 39:     }
  1131                           
  1132  0583  2D83               	goto	l43
  1133  0584  120A  118A  2810   	ljmp	start
  1134  0587                     __end_of_main:	
  1135                           
  1136                           	psect	text1
  1137  0FD7                     __ptext1:	
  1138 ;; *************** function _TMR_Start *****************
  1139 ;; Defined at:
  1140 ;;		line 45 in file "Timer.c"
  1141 ;; Parameters:    Size  Location     Type
  1142 ;;		None
  1143 ;; Auto vars:     Size  Location     Type
  1144 ;;		None
  1145 ;; Return value:  Size  Location     Type
  1146 ;;                  1    wreg      void 
  1147 ;; Registers used:
  1148 ;;		wreg
  1149 ;; Tracked objects:
  1150 ;;		On entry : 0/0
  1151 ;;		On exit  : 0/0
  1152 ;;		Unchanged: 0/0
  1153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1154 ;;      Params:         0       0       0       0       0
  1155 ;;      Locals:         0       0       0       0       0
  1156 ;;      Temps:          0       0       0       0       0
  1157 ;;      Totals:         0       0       0       0       0
  1158 ;;Total ram usage:        0 bytes
  1159 ;; Hardware stack levels used:    1
  1160 ;; Hardware stack levels required when called:    5
  1161 ;; This function calls:
  1162 ;;		Nothing
  1163 ;; This function is called by:
  1164 ;;		_main
  1165 ;; This function uses a non-reentrant model
  1166 ;;
  1167                           
  1168                           
  1169                           ;psect for function _TMR_Start
  1170  0FD7                     _TMR_Start:	
  1171  0FD7                     l1836:	
  1172                           ;incstack = 0
  1173                           ; Regs used in _TMR_Start: [wreg]
  1174                           
  1175                           
  1176                           ;Timer.c: 48:     ((TMR0IF) = 0);
  1177  0FD7  110B               	bcf	11,2	;volatile
  1178  0FD8                     l1838:	
  1179                           
  1180                           ;Timer.c: 50:     ((TMR0) = 256 - (((5)) ));
  1181  0FD8  30FB               	movlw	251
  1182  0FD9  1283               	bcf	3,5	;RP0=0, select bank0
  1183  0FDA  1303               	bcf	3,6	;RP1=0, select bank0
  1184  0FDB  0081               	movwf	1	;volatile
  1185  0FDC                     l1840:	
  1186                           
  1187                           ;Timer.c: 52:     (TMR0IE = 1);
  1188  0FDC  168B               	bsf	11,5	;volatile
  1189  0FDD                     l1842:	
  1190                           
  1191                           ;Timer.c: 53:     (GIE = 1);
  1192  0FDD  178B               	bsf	11,7	;volatile
  1193  0FDE                     l1844:	
  1194                           
  1195                           ;Timer.c: 55:     (T0CS = 0);
  1196  0FDE  1683               	bsf	3,5	;RP0=1, select bank1
  1197  0FDF  1303               	bcf	3,6	;RP1=0, select bank1
  1198  0FE0  1281               	bcf	1,5	;volatile
  1199  0FE1                     l282:	
  1200  0FE1  0008               	return
  1201  0FE2                     __end_of_TMR_Start:	
  1202                           
  1203                           	psect	text2
  1204  0FB5                     __ptext2:	
  1205 ;; *************** function _TMR_Init *****************
  1206 ;; Defined at:
  1207 ;;		line 22 in file "Timer.c"
  1208 ;; Parameters:    Size  Location     Type
  1209 ;;		None
  1210 ;; Auto vars:     Size  Location     Type
  1211 ;;		None
  1212 ;; Return value:  Size  Location     Type
  1213 ;;                  1    wreg      void 
  1214 ;; Registers used:
  1215 ;;		None
  1216 ;; Tracked objects:
  1217 ;;		On entry : 0/0
  1218 ;;		On exit  : 0/0
  1219 ;;		Unchanged: 0/0
  1220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1221 ;;      Params:         0       0       0       0       0
  1222 ;;      Locals:         0       0       0       0       0
  1223 ;;      Temps:          0       0       0       0       0
  1224 ;;      Totals:         0       0       0       0       0
  1225 ;;Total ram usage:        0 bytes
  1226 ;; Hardware stack levels used:    1
  1227 ;; Hardware stack levels required when called:    5
  1228 ;; This function calls:
  1229 ;;		Nothing
  1230 ;; This function is called by:
  1231 ;;		_main
  1232 ;; This function uses a non-reentrant model
  1233 ;;
  1234                           
  1235                           
  1236                           ;psect for function _TMR_Init
  1237  0FB5                     _TMR_Init:	
  1238  0FB5                     l1834:	
  1239                           ;incstack = 0
  1240                           ; Regs used in _TMR_Init: []
  1241                           
  1242                           
  1243                           ;Timer.c: 26:     PS2 = 1; PS1 = 1; PS0 = 1;
  1244  0FB5  1683               	bsf	3,5	;RP0=1, select bank1
  1245  0FB6  1303               	bcf	3,6	;RP1=0, select bank1
  1246  0FB7  1501               	bsf	1,2	;volatile
  1247  0FB8  1481               	bsf	1,1	;volatile
  1248  0FB9  1401               	bsf	1,0	;volatile
  1249                           
  1250                           ;Timer.c: 28:     (T0CS = 1);
  1251  0FBA  1681               	bsf	1,5	;volatile
  1252  0FBB                     l274:	
  1253  0FBB  0008               	return
  1254  0FBC                     __end_of_TMR_Init:	
  1255                           
  1256                           	psect	text3
  1257  05CB                     __ptext3:	
  1258 ;; *************** function _SW_Init *****************
  1259 ;; Defined at:
  1260 ;;		line 50 in file "SW.c"
  1261 ;; Parameters:    Size  Location     Type
  1262 ;;		None
  1263 ;; Auto vars:     Size  Location     Type
  1264 ;;		None
  1265 ;; Return value:  Size  Location     Type
  1266 ;;                  1    wreg      void 
  1267 ;; Registers used:
  1268 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1269 ;; Tracked objects:
  1270 ;;		On entry : 0/0
  1271 ;;		On exit  : 0/0
  1272 ;;		Unchanged: 0/0
  1273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1274 ;;      Params:         0       0       0       0       0
  1275 ;;      Locals:         0       0       0       0       0
  1276 ;;      Temps:          0       1       0       0       0
  1277 ;;      Totals:         0       1       0       0       0
  1278 ;;Total ram usage:        1 bytes
  1279 ;; Hardware stack levels used:    1
  1280 ;; Hardware stack levels required when called:    6
  1281 ;; This function calls:
  1282 ;;		_GPIO_Init_Pin
  1283 ;; This function is called by:
  1284 ;;		_main
  1285 ;; This function uses a non-reentrant model
  1286 ;;
  1287                           
  1288                           
  1289                           ;psect for function _SW_Init
  1290  05CB                     _SW_Init:	
  1291  05CB                     l1806:	
  1292                           ;incstack = 0
  1293                           ; Regs used in _SW_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1294                           
  1295                           
  1296                           ;SW.c: 54:     GPIO_Init_Pin(&(TRISB),(0),(1));
  1297  05CB  3086               	movlw	134
  1298  05CC  1283               	bcf	3,5	;RP0=0, select bank0
  1299  05CD  1303               	bcf	3,6	;RP1=0, select bank0
  1300  05CE  00C7               	movwf	GPIO_Init_Pin@DirRegAddress
  1301  05CF  3000               	movlw	0
  1302  05D0  00C8               	movwf	GPIO_Init_Pin@DirRegAddress+1
  1303  05D1  01C9               	clrf	GPIO_Init_Pin@pin_number
  1304  05D2  01CA               	clrf	GPIO_Init_Pin@dir
  1305  05D3  0ACA               	incf	GPIO_Init_Pin@dir,f
  1306  05D4  120A  118A  22E3  120A  118A  	fcall	_GPIO_Init_Pin
  1307  05D9                     l1808:	
  1308                           
  1309                           ;SW.c: 55:     SW_DATA[SW_PLUS].state = SW_RELEASED;
  1310  05D9  1283               	bcf	3,5	;RP0=0, select bank0
  1311  05DA  1303               	bcf	3,6	;RP1=0, select bank0
  1312  05DB  01A2               	clrf	_SW_DATA+2
  1313  05DC                     l1810:	
  1314                           
  1315                           ;SW.c: 56:     SW_DATA[SW_PLUS].samples[0] = 1;
  1316  05DC  01A0               	clrf	_SW_DATA
  1317  05DD  0AA0               	incf	_SW_DATA,f
  1318  05DE                     l1812:	
  1319                           
  1320                           ;SW.c: 57:     SW_DATA[SW_PLUS].samples[1] = 1;
  1321  05DE  01A1               	clrf	_SW_DATA+1
  1322  05DF  0AA1               	incf	_SW_DATA+1,f
  1323  05E0                     l1814:	
  1324                           
  1325                           ;SW.c: 59:     GPIO_Init_Pin(&(TRISB),(1),(1));
  1326  05E0  3086               	movlw	134
  1327  05E1  00C7               	movwf	GPIO_Init_Pin@DirRegAddress
  1328  05E2  3000               	movlw	0
  1329  05E3  00C8               	movwf	GPIO_Init_Pin@DirRegAddress+1
  1330  05E4  01C9               	clrf	GPIO_Init_Pin@pin_number
  1331  05E5  0AC9               	incf	GPIO_Init_Pin@pin_number,f
  1332  05E6  01CA               	clrf	GPIO_Init_Pin@dir
  1333  05E7  0ACA               	incf	GPIO_Init_Pin@dir,f
  1334  05E8  120A  118A  22E3  120A  118A  	fcall	_GPIO_Init_Pin
  1335                           
  1336                           ;SW.c: 60:     SW_DATA[SW_MINUS].state = SW_RELEASED;
  1337  05ED  1283               	bcf	3,5	;RP0=0, select bank0
  1338  05EE  1303               	bcf	3,6	;RP1=0, select bank0
  1339  05EF  01A5               	clrf	_SW_DATA+5
  1340  05F0                     l1816:	
  1341                           
  1342                           ;SW.c: 61:     SW_DATA[SW_MINUS].samples[0] = 1;
  1343  05F0  01A3               	clrf	_SW_DATA+3
  1344  05F1  0AA3               	incf	_SW_DATA+3,f
  1345  05F2                     l1818:	
  1346                           
  1347                           ;SW.c: 62:     SW_DATA[SW_MINUS].samples[1] = 1;
  1348  05F2  01A4               	clrf	_SW_DATA+4
  1349  05F3  0AA4               	incf	_SW_DATA+4,f
  1350  05F4                     l1820:	
  1351                           
  1352                           ;SW.c: 64:     GPIO_Init_Pin(&(TRISB),(2),(1));
  1353  05F4  3086               	movlw	134
  1354  05F5  00C7               	movwf	GPIO_Init_Pin@DirRegAddress
  1355  05F6  3000               	movlw	0
  1356  05F7  00C8               	movwf	GPIO_Init_Pin@DirRegAddress+1
  1357  05F8  3002               	movlw	2
  1358  05F9  00CF               	movwf	??_SW_Init
  1359  05FA  084F               	movf	??_SW_Init,w
  1360  05FB  00C9               	movwf	GPIO_Init_Pin@pin_number
  1361  05FC  01CA               	clrf	GPIO_Init_Pin@dir
  1362  05FD  0ACA               	incf	GPIO_Init_Pin@dir,f
  1363  05FE  120A  118A  22E3  120A  118A  	fcall	_GPIO_Init_Pin
  1364  0603                     l1822:	
  1365                           
  1366                           ;SW.c: 65:     SW_DATA[SW_SET].state = SW_RELEASED;
  1367  0603  1283               	bcf	3,5	;RP0=0, select bank0
  1368  0604  1303               	bcf	3,6	;RP1=0, select bank0
  1369  0605  01A8               	clrf	_SW_DATA+8
  1370  0606                     l1824:	
  1371                           
  1372                           ;SW.c: 66:     SW_DATA[SW_SET].samples[0] = 1;
  1373  0606  01A6               	clrf	_SW_DATA+6
  1374  0607  0AA6               	incf	_SW_DATA+6,f
  1375  0608                     l1826:	
  1376                           
  1377                           ;SW.c: 67:     SW_DATA[SW_SET].samples[1] = 1;
  1378  0608  01A7               	clrf	_SW_DATA+7
  1379  0609  0AA7               	incf	_SW_DATA+7,f
  1380  060A                     l125:	
  1381  060A  0008               	return
  1382  060B                     __end_of_SW_Init:	
  1383                           
  1384                           	psect	text4
  1385  06AF                     __ptext4:	
  1386 ;; *************** function _Disp_Init *****************
  1387 ;; Defined at:
  1388 ;;		line 49 in file "Disp.c"
  1389 ;; Parameters:    Size  Location     Type
  1390 ;;		None
  1391 ;; Auto vars:     Size  Location     Type
  1392 ;;		None
  1393 ;; Return value:  Size  Location     Type
  1394 ;;                  1    wreg      void 
  1395 ;; Registers used:
  1396 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1397 ;; Tracked objects:
  1398 ;;		On entry : 0/0
  1399 ;;		On exit  : 0/0
  1400 ;;		Unchanged: 0/0
  1401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1402 ;;      Params:         0       0       0       0       0
  1403 ;;      Locals:         0       0       0       0       0
  1404 ;;      Temps:          0       1       0       0       0
  1405 ;;      Totals:         0       1       0       0       0
  1406 ;;Total ram usage:        1 bytes
  1407 ;; Hardware stack levels used:    1
  1408 ;; Hardware stack levels required when called:    7
  1409 ;; This function calls:
  1410 ;;		_SSD_Init
  1411 ;;		_SSD_Set_Symbol
  1412 ;; This function is called by:
  1413 ;;		_main
  1414 ;; This function uses a non-reentrant model
  1415 ;;
  1416                           
  1417                           
  1418                           ;psect for function _Disp_Init
  1419  06AF                     _Disp_Init:	
  1420  06AF                     l1828:	
  1421                           ;incstack = 0
  1422                           ; Regs used in _Disp_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1423                           
  1424                           
  1425                           ;Disp.c: 52:     SSD_Init();
  1426  06AF  120A  118A  2485  120A  118A  	fcall	_SSD_Init
  1427                           
  1428                           ;Disp.c: 54:     SSD_Set_Symbol(SSD_0,SSD_MINUTES_UNITS);
  1429  06B4  1283               	bcf	3,5	;RP0=0, select bank0
  1430  06B5  1303               	bcf	3,6	;RP1=0, select bank0
  1431  06B6  01C7               	clrf	SSD_Set_Symbol@index
  1432  06B7  3000               	movlw	0
  1433  06B8  120A  118A  27EF  120A  118A  	fcall	_SSD_Set_Symbol
  1434                           
  1435                           ;Disp.c: 55:     SSD_Set_Symbol(SSD_0,SSD_MINUTES_TENS);
  1436  06BD  1283               	bcf	3,5	;RP0=0, select bank0
  1437  06BE  1303               	bcf	3,6	;RP1=0, select bank0
  1438  06BF  01C7               	clrf	SSD_Set_Symbol@index
  1439  06C0  0AC7               	incf	SSD_Set_Symbol@index,f
  1440  06C1  3000               	movlw	0
  1441  06C2  120A  118A  27EF  120A  118A  	fcall	_SSD_Set_Symbol
  1442                           
  1443                           ;Disp.c: 56:     SSD_Set_Symbol(SSD_0,SSD_HOURS_UNITS);
  1444  06C7  3002               	movlw	2
  1445  06C8  1283               	bcf	3,5	;RP0=0, select bank0
  1446  06C9  1303               	bcf	3,6	;RP1=0, select bank0
  1447  06CA  00D0               	movwf	??_Disp_Init
  1448  06CB  0850               	movf	??_Disp_Init,w
  1449  06CC  00C7               	movwf	SSD_Set_Symbol@index
  1450  06CD  3000               	movlw	0
  1451  06CE  120A  118A  27EF  120A  118A  	fcall	_SSD_Set_Symbol
  1452                           
  1453                           ;Disp.c: 57:     SSD_Set_Symbol(SSD_0,SSD_HOURS_TENS);
  1454  06D3  3003               	movlw	3
  1455  06D4  1283               	bcf	3,5	;RP0=0, select bank0
  1456  06D5  1303               	bcf	3,6	;RP1=0, select bank0
  1457  06D6  00D0               	movwf	??_Disp_Init
  1458  06D7  0850               	movf	??_Disp_Init,w
  1459  06D8  00C7               	movwf	SSD_Set_Symbol@index
  1460  06D9  3000               	movlw	0
  1461  06DA  120A  118A  27EF  120A  118A  	fcall	_SSD_Set_Symbol
  1462  06DF                     l1830:	
  1463                           
  1464                           ;Disp.c: 59:     Disp_Blink_counter = 0;
  1465  06DF  1283               	bcf	3,5	;RP0=0, select bank0
  1466  06E0  1303               	bcf	3,6	;RP1=0, select bank0
  1467  06E1  01B0               	clrf	_Disp_Blink_counter
  1468  06E2                     l218:	
  1469  06E2  0008               	return
  1470  06E3                     __end_of_Disp_Init:	
  1471                           
  1472                           	psect	text5
  1473  07EF                     __ptext5:	
  1474 ;; *************** function _SSD_Set_Symbol *****************
  1475 ;; Defined at:
  1476 ;;		line 87 in file "SSD.c"
  1477 ;; Parameters:    Size  Location     Type
  1478 ;;  symbol          1    wreg     enum E859
  1479 ;;  index           1   11[BANK0 ] enum E872
  1480 ;; Auto vars:     Size  Location     Type
  1481 ;;  symbol          1   13[BANK0 ] enum E859
  1482 ;; Return value:  Size  Location     Type
  1483 ;;                  1    wreg      void 
  1484 ;; Registers used:
  1485 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1486 ;; Tracked objects:
  1487 ;;		On entry : 0/0
  1488 ;;		On exit  : 0/0
  1489 ;;		Unchanged: 0/0
  1490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1491 ;;      Params:         0       1       0       0       0
  1492 ;;      Locals:         0       1       0       0       0
  1493 ;;      Temps:          0       1       0       0       0
  1494 ;;      Totals:         0       3       0       0       0
  1495 ;;Total ram usage:        3 bytes
  1496 ;; Hardware stack levels used:    1
  1497 ;; Hardware stack levels required when called:    5
  1498 ;; This function calls:
  1499 ;;		Nothing
  1500 ;; This function is called by:
  1501 ;;		_main
  1502 ;;		_Disp_Init
  1503 ;; This function uses a non-reentrant model
  1504 ;;
  1505                           
  1506                           
  1507                           ;psect for function _SSD_Set_Symbol
  1508  07EF                     _SSD_Set_Symbol:	
  1509                           
  1510                           ;incstack = 0
  1511                           ; Regs used in _SSD_Set_Symbol: [wreg-fsr0h+status,2+status,0]
  1512                           ;SSD_Set_Symbol@symbol stored from wreg
  1513  07EF  1283               	bcf	3,5	;RP0=0, select bank0
  1514  07F0  1303               	bcf	3,6	;RP1=0, select bank0
  1515  07F1  00C9               	movwf	SSD_Set_Symbol@symbol
  1516  07F2                     l1660:	
  1517                           
  1518                           ;SSD.c: 87: void SSD_Set_Symbol(SSD_Symbol_t symbol,SSD_t index);SSD.c: 88: {;SSD.c: 90:
      +                               Buffer[index] = symbol;
  1519  07F2  0849               	movf	SSD_Set_Symbol@symbol,w
  1520  07F3  00C8               	movwf	??_SSD_Set_Symbol
  1521  07F4  0847               	movf	SSD_Set_Symbol@index,w
  1522  07F5  3E29               	addlw	(low (_Buffer| 0))& (0+255)
  1523  07F6  0084               	movwf	4
  1524  07F7  0848               	movf	??_SSD_Set_Symbol,w
  1525  07F8  1383               	bcf	3,7	;select IRP bank0
  1526  07F9  0080               	movwf	0
  1527  07FA                     l78:	
  1528  07FA  0008               	return
  1529  07FB                     __end_of_SSD_Set_Symbol:	
  1530                           
  1531                           	psect	text6
  1532  0485                     __ptext6:	
  1533 ;; *************** function _SSD_Init *****************
  1534 ;; Defined at:
  1535 ;;		line 62 in file "SSD.c"
  1536 ;; Parameters:    Size  Location     Type
  1537 ;;		None
  1538 ;; Auto vars:     Size  Location     Type
  1539 ;;		None
  1540 ;; Return value:  Size  Location     Type
  1541 ;;                  1    wreg      void 
  1542 ;; Registers used:
  1543 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1544 ;; Tracked objects:
  1545 ;;		On entry : 0/0
  1546 ;;		On exit  : 0/0
  1547 ;;		Unchanged: 0/0
  1548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1549 ;;      Params:         0       0       0       0       0
  1550 ;;      Locals:         0       0       0       0       0
  1551 ;;      Temps:          0       1       0       0       0
  1552 ;;      Totals:         0       1       0       0       0
  1553 ;;Total ram usage:        1 bytes
  1554 ;; Hardware stack levels used:    1
  1555 ;; Hardware stack levels required when called:    6
  1556 ;; This function calls:
  1557 ;;		_GPIO_Init_Pin
  1558 ;;		_GPIO_Init_Port
  1559 ;; This function is called by:
  1560 ;;		_main
  1561 ;;		_Disp_Init
  1562 ;; This function uses a non-reentrant model
  1563 ;;
  1564                           
  1565                           
  1566                           ;psect for function _SSD_Init
  1567  0485                     _SSD_Init:	
  1568  0485                     l1646:	
  1569                           ;incstack = 0
  1570                           ; Regs used in _SSD_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1571                           
  1572                           
  1573                           ;SSD.c: 65:     GPIO_Init_Port(&(TRISD),(0));
  1574  0485  3088               	movlw	136
  1575  0486  1283               	bcf	3,5	;RP0=0, select bank0
  1576  0487  1303               	bcf	3,6	;RP1=0, select bank0
  1577  0488  00C7               	movwf	GPIO_Init_Port@DirRegAddress
  1578  0489  3000               	movlw	0
  1579  048A  00C8               	movwf	GPIO_Init_Port@DirRegAddress+1
  1580  048B  01C9               	clrf	GPIO_Init_Port@dir
  1581  048C  120A  118A  2421  120A  118A  	fcall	_GPIO_Init_Port
  1582                           
  1583                           ;SSD.c: 68:     GPIO_Init_Pin(&(TRISB),(4),(0));
  1584  0491  3086               	movlw	134
  1585  0492  1283               	bcf	3,5	;RP0=0, select bank0
  1586  0493  1303               	bcf	3,6	;RP1=0, select bank0
  1587  0494  00C7               	movwf	GPIO_Init_Pin@DirRegAddress
  1588  0495  3000               	movlw	0
  1589  0496  00C8               	movwf	GPIO_Init_Pin@DirRegAddress+1
  1590  0497  3004               	movlw	4
  1591  0498  00CF               	movwf	??_SSD_Init
  1592  0499  084F               	movf	??_SSD_Init,w
  1593  049A  00C9               	movwf	GPIO_Init_Pin@pin_number
  1594  049B  01CA               	clrf	GPIO_Init_Pin@dir
  1595  049C  120A  118A  22E3  120A  118A  	fcall	_GPIO_Init_Pin
  1596  04A1                     l1648:	
  1597                           
  1598                           ;SSD.c: 69:     (((PORTB))=((PORTB) & ~(1<<(4)))|(SSD_OFF<<(4)));
  1599  04A1  1283               	bcf	3,5	;RP0=0, select bank0
  1600  04A2  1303               	bcf	3,6	;RP1=0, select bank0
  1601  04A3  0806               	movf	6,w	;volatile
  1602  04A4  39EF               	andlw	239
  1603  04A5  0086               	movwf	6	;volatile
  1604  04A6                     l1650:	
  1605                           
  1606                           ;SSD.c: 71:     GPIO_Init_Pin(&(TRISB),(5),(0));
  1607  04A6  3086               	movlw	134
  1608  04A7  00C7               	movwf	GPIO_Init_Pin@DirRegAddress
  1609  04A8  3000               	movlw	0
  1610  04A9  00C8               	movwf	GPIO_Init_Pin@DirRegAddress+1
  1611  04AA  3005               	movlw	5
  1612  04AB  00CF               	movwf	??_SSD_Init
  1613  04AC  084F               	movf	??_SSD_Init,w
  1614  04AD  00C9               	movwf	GPIO_Init_Pin@pin_number
  1615  04AE  01CA               	clrf	GPIO_Init_Pin@dir
  1616  04AF  120A  118A  22E3  120A  118A  	fcall	_GPIO_Init_Pin
  1617                           
  1618                           ;SSD.c: 72:     (((PORTB))=((PORTB) & ~(1<<(5)))|(SSD_OFF<<(5)));
  1619  04B4  1283               	bcf	3,5	;RP0=0, select bank0
  1620  04B5  1303               	bcf	3,6	;RP1=0, select bank0
  1621  04B6  0806               	movf	6,w	;volatile
  1622  04B7  39DF               	andlw	223
  1623  04B8  0086               	movwf	6	;volatile
  1624  04B9                     l1652:	
  1625                           
  1626                           ;SSD.c: 74:     GPIO_Init_Pin(&(TRISB),(6),(0));
  1627  04B9  3086               	movlw	134
  1628  04BA  00C7               	movwf	GPIO_Init_Pin@DirRegAddress
  1629  04BB  3000               	movlw	0
  1630  04BC  00C8               	movwf	GPIO_Init_Pin@DirRegAddress+1
  1631  04BD  3006               	movlw	6
  1632  04BE  00CF               	movwf	??_SSD_Init
  1633  04BF  084F               	movf	??_SSD_Init,w
  1634  04C0  00C9               	movwf	GPIO_Init_Pin@pin_number
  1635  04C1  01CA               	clrf	GPIO_Init_Pin@dir
  1636  04C2  120A  118A  22E3  120A  118A  	fcall	_GPIO_Init_Pin
  1637  04C7                     l1654:	
  1638                           
  1639                           ;SSD.c: 75:     (((PORTB))=((PORTB) & ~(1<<(6)))|(SSD_OFF<<(6)));
  1640  04C7  1283               	bcf	3,5	;RP0=0, select bank0
  1641  04C8  1303               	bcf	3,6	;RP1=0, select bank0
  1642  04C9  0806               	movf	6,w	;volatile
  1643  04CA  39BF               	andlw	191
  1644  04CB  0086               	movwf	6	;volatile
  1645                           
  1646                           ;SSD.c: 77:     GPIO_Init_Pin(&(TRISB),(7),(0));
  1647  04CC  3086               	movlw	134
  1648  04CD  00C7               	movwf	GPIO_Init_Pin@DirRegAddress
  1649  04CE  3000               	movlw	0
  1650  04CF  00C8               	movwf	GPIO_Init_Pin@DirRegAddress+1
  1651  04D0  3007               	movlw	7
  1652  04D1  00CF               	movwf	??_SSD_Init
  1653  04D2  084F               	movf	??_SSD_Init,w
  1654  04D3  00C9               	movwf	GPIO_Init_Pin@pin_number
  1655  04D4  01CA               	clrf	GPIO_Init_Pin@dir
  1656  04D5  120A  118A  22E3  120A  118A  	fcall	_GPIO_Init_Pin
  1657  04DA                     l1656:	
  1658                           
  1659                           ;SSD.c: 78:     (((PORTB))=((PORTB) & ~(1<<(7)))|(SSD_OFF<<(7)));
  1660  04DA  1283               	bcf	3,5	;RP0=0, select bank0
  1661  04DB  1303               	bcf	3,6	;RP1=0, select bank0
  1662  04DC  0806               	movf	6,w	;volatile
  1663  04DD  397F               	andlw	127
  1664  04DE  0086               	movwf	6	;volatile
  1665  04DF                     l1658:	
  1666                           
  1667                           ;SSD.c: 81:     Second_Dot_State = SSD_OFF;
  1668  04DF  01B5               	clrf	_Second_Dot_State
  1669  04E0                     l75:	
  1670  04E0  0008               	return
  1671  04E1                     __end_of_SSD_Init:	
  1672                           
  1673                           	psect	text7
  1674  0421                     __ptext7:	
  1675 ;; *************** function _GPIO_Init_Port *****************
  1676 ;; Defined at:
  1677 ;;		line 14 in file "GPIO.c"
  1678 ;; Parameters:    Size  Location     Type
  1679 ;;  DirRegAddres    2   11[BANK0 ] PTR unsigned char 
  1680 ;;		 -> TRISD(1), 
  1681 ;;  dir             1   13[BANK0 ] unsigned char 
  1682 ;; Auto vars:     Size  Location     Type
  1683 ;;  ret             1    0        unsigned char 
  1684 ;; Return value:  Size  Location     Type
  1685 ;;                  1    wreg      unsigned char 
  1686 ;; Registers used:
  1687 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1688 ;; Tracked objects:
  1689 ;;		On entry : 0/0
  1690 ;;		On exit  : 0/0
  1691 ;;		Unchanged: 0/0
  1692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1693 ;;      Params:         0       3       0       0       0
  1694 ;;      Locals:         0       3       0       0       0
  1695 ;;      Temps:          0       1       0       0       0
  1696 ;;      Totals:         0       7       0       0       0
  1697 ;;Total ram usage:        7 bytes
  1698 ;; Hardware stack levels used:    1
  1699 ;; Hardware stack levels required when called:    5
  1700 ;; This function calls:
  1701 ;;		Nothing
  1702 ;; This function is called by:
  1703 ;;		_SSD_Init
  1704 ;; This function uses a non-reentrant model
  1705 ;;
  1706                           
  1707                           
  1708                           ;psect for function _GPIO_Init_Port
  1709  0421                     _GPIO_Init_Port:	
  1710  0421                     l1504:	
  1711                           ;incstack = 0
  1712                           ; Regs used in _GPIO_Init_Port: [wreg-fsr0h+status,2+status,0]
  1713                           
  1714  0421                     l1506:	
  1715                           
  1716                           ;GPIO.c: 18:     if(*DirRegAddress != (TRISA) && *DirRegAddress != (TRISB) &&
  1717  0421  1283               	bcf	3,5	;RP0=0, select bank0
  1718  0422  1303               	bcf	3,6	;RP1=0, select bank0
  1719  0423  0847               	movf	GPIO_Init_Port@DirRegAddress,w
  1720  0424  0084               	movwf	4
  1721  0425  1783               	bsf	3,7
  1722  0426  1C48               	btfss	GPIO_Init_Port@DirRegAddress+1,0
  1723  0427  1383               	bcf	3,7
  1724  0428  0800               	movf	0,w
  1725  0429  1683               	bsf	3,5	;RP0=1, select bank1
  1726  042A  1303               	bcf	3,6	;RP1=0, select bank1
  1727  042B  0605               	xorwf	5,w	;volatile
  1728  042C  1903               	skipnz
  1729  042D  2C2F               	goto	u671
  1730  042E  2C30               	goto	u670
  1731  042F                     u671:	
  1732  042F  2C6D               	goto	l1518
  1733  0430                     u670:	
  1734  0430                     l1508:	
  1735  0430  1283               	bcf	3,5	;RP0=0, select bank0
  1736  0431  1303               	bcf	3,6	;RP1=0, select bank0
  1737  0432  0847               	movf	GPIO_Init_Port@DirRegAddress,w
  1738  0433  0084               	movwf	4
  1739  0434  1783               	bsf	3,7
  1740  0435  1C48               	btfss	GPIO_Init_Port@DirRegAddress+1,0
  1741  0436  1383               	bcf	3,7
  1742  0437  0800               	movf	0,w
  1743  0438  1683               	bsf	3,5	;RP0=1, select bank1
  1744  0439  1303               	bcf	3,6	;RP1=0, select bank1
  1745  043A  0606               	xorwf	6,w	;volatile
  1746  043B  1903               	skipnz
  1747  043C  2C3E               	goto	u681
  1748  043D  2C3F               	goto	u680
  1749  043E                     u681:	
  1750  043E  2C6D               	goto	l1518
  1751  043F                     u680:	
  1752  043F                     l1510:	
  1753  043F  1283               	bcf	3,5	;RP0=0, select bank0
  1754  0440  1303               	bcf	3,6	;RP1=0, select bank0
  1755  0441  0847               	movf	GPIO_Init_Port@DirRegAddress,w
  1756  0442  0084               	movwf	4
  1757  0443  1783               	bsf	3,7
  1758  0444  1C48               	btfss	GPIO_Init_Port@DirRegAddress+1,0
  1759  0445  1383               	bcf	3,7
  1760  0446  0800               	movf	0,w
  1761  0447  1683               	bsf	3,5	;RP0=1, select bank1
  1762  0448  1303               	bcf	3,6	;RP1=0, select bank1
  1763  0449  0607               	xorwf	7,w	;volatile
  1764  044A  1903               	skipnz
  1765  044B  2C4D               	goto	u691
  1766  044C  2C4E               	goto	u690
  1767  044D                     u691:	
  1768  044D  2C6D               	goto	l1518
  1769  044E                     u690:	
  1770  044E                     l1512:	
  1771  044E  1283               	bcf	3,5	;RP0=0, select bank0
  1772  044F  1303               	bcf	3,6	;RP1=0, select bank0
  1773  0450  0847               	movf	GPIO_Init_Port@DirRegAddress,w
  1774  0451  0084               	movwf	4
  1775  0452  1783               	bsf	3,7
  1776  0453  1C48               	btfss	GPIO_Init_Port@DirRegAddress+1,0
  1777  0454  1383               	bcf	3,7
  1778  0455  0800               	movf	0,w
  1779  0456  1683               	bsf	3,5	;RP0=1, select bank1
  1780  0457  1303               	bcf	3,6	;RP1=0, select bank1
  1781  0458  0608               	xorwf	8,w	;volatile
  1782  0459  1903               	skipnz
  1783  045A  2C5C               	goto	u701
  1784  045B  2C5D               	goto	u700
  1785  045C                     u701:	
  1786  045C  2C6D               	goto	l1518
  1787  045D                     u700:	
  1788  045D                     l1514:	
  1789  045D  1283               	bcf	3,5	;RP0=0, select bank0
  1790  045E  1303               	bcf	3,6	;RP1=0, select bank0
  1791  045F  0847               	movf	GPIO_Init_Port@DirRegAddress,w
  1792  0460  0084               	movwf	4
  1793  0461  1783               	bsf	3,7
  1794  0462  1C48               	btfss	GPIO_Init_Port@DirRegAddress+1,0
  1795  0463  1383               	bcf	3,7
  1796  0464  0800               	movf	0,w
  1797  0465  1683               	bsf	3,5	;RP0=1, select bank1
  1798  0466  1303               	bcf	3,6	;RP1=0, select bank1
  1799  0467  0609               	xorwf	9,w	;volatile
  1800  0468  1903               	skipnz
  1801  0469  2C6B               	goto	u711
  1802  046A  2C6C               	goto	u710
  1803  046B                     u711:	
  1804  046B  2C6D               	goto	l1518
  1805  046C                     u710:	
  1806  046C                     l1516:	
  1807                           
  1808                           ;GPIO.c: 24:     }
  1809  046C  2C84               	goto	l19
  1810  046D                     l1518:	
  1811                           
  1812                           ;GPIO.c: 26:     {;GPIO.c: 27:         ((*DirRegAddress)=(dir)?(~0):(0));
  1813  046D  1283               	bcf	3,5	;RP0=0, select bank0
  1814  046E  1303               	bcf	3,6	;RP1=0, select bank0
  1815  046F  0849               	movf	GPIO_Init_Port@dir,w
  1816  0470  1D03               	btfss	3,2
  1817  0471  2C73               	goto	u721
  1818  0472  2C74               	goto	u720
  1819  0473                     u721:	
  1820  0473  2C77               	goto	l1522
  1821  0474                     u720:	
  1822  0474                     l1520:	
  1823  0474  01CC               	clrf	_GPIO_Init_Port$31
  1824  0475  01CD               	clrf	_GPIO_Init_Port$31+1
  1825  0476  2C7B               	goto	l1524
  1826  0477                     l1522:	
  1827  0477  30FF               	movlw	255
  1828  0478  00CC               	movwf	_GPIO_Init_Port$31
  1829  0479  30FF               	movlw	255
  1830  047A  00CD               	movwf	_GPIO_Init_Port$31+1
  1831  047B                     l1524:	
  1832  047B  084C               	movf	_GPIO_Init_Port$31,w
  1833  047C  00CA               	movwf	??_GPIO_Init_Port
  1834  047D  0847               	movf	GPIO_Init_Port@DirRegAddress,w
  1835  047E  0084               	movwf	4
  1836  047F  1783               	bsf	3,7
  1837  0480  1C48               	btfss	GPIO_Init_Port@DirRegAddress+1,0
  1838  0481  1383               	bcf	3,7
  1839  0482  084A               	movf	??_GPIO_Init_Port,w
  1840  0483  0080               	movwf	0
  1841  0484                     l19:	
  1842  0484  0008               	return
  1843  0485                     __end_of_GPIO_Init_Port:	
  1844                           
  1845                           	psect	text8
  1846  02E3                     __ptext8:	
  1847 ;; *************** function _GPIO_Init_Pin *****************
  1848 ;; Defined at:
  1849 ;;		line 34 in file "GPIO.c"
  1850 ;; Parameters:    Size  Location     Type
  1851 ;;  DirRegAddres    2   11[BANK0 ] PTR unsigned char 
  1852 ;;		 -> TRISB(1), 
  1853 ;;  pin_number      1   13[BANK0 ] unsigned char 
  1854 ;;  dir             1   14[BANK0 ] unsigned char 
  1855 ;; Auto vars:     Size  Location     Type
  1856 ;;  ret             1    0        unsigned char 
  1857 ;; Return value:  Size  Location     Type
  1858 ;;                  1    wreg      unsigned char 
  1859 ;; Registers used:
  1860 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1861 ;; Tracked objects:
  1862 ;;		On entry : 0/0
  1863 ;;		On exit  : 0/0
  1864 ;;		Unchanged: 0/0
  1865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1866 ;;      Params:         0       4       0       0       0
  1867 ;;      Locals:         0       1       0       0       0
  1868 ;;      Temps:          0       3       0       0       0
  1869 ;;      Totals:         0       8       0       0       0
  1870 ;;Total ram usage:        8 bytes
  1871 ;; Hardware stack levels used:    1
  1872 ;; Hardware stack levels required when called:    5
  1873 ;; This function calls:
  1874 ;;		Nothing
  1875 ;; This function is called by:
  1876 ;;		_SSD_Init
  1877 ;;		_SW_Init
  1878 ;; This function uses a non-reentrant model
  1879 ;;
  1880                           
  1881                           
  1882                           ;psect for function _GPIO_Init_Pin
  1883  02E3                     _GPIO_Init_Pin:	
  1884  02E3                     l1528:	
  1885                           ;incstack = 0
  1886                           ; Regs used in _GPIO_Init_Pin: [wreg-fsr0h+status,2+status,0]
  1887                           
  1888  02E3                     l1530:	
  1889                           
  1890                           ;GPIO.c: 38:     if(*DirRegAddress != (TRISA) && *DirRegAddress != (TRISB) &&
  1891  02E3  1283               	bcf	3,5	;RP0=0, select bank0
  1892  02E4  1303               	bcf	3,6	;RP1=0, select bank0
  1893  02E5  0847               	movf	GPIO_Init_Pin@DirRegAddress,w
  1894  02E6  0084               	movwf	4
  1895  02E7  1783               	bsf	3,7
  1896  02E8  1C48               	btfss	GPIO_Init_Pin@DirRegAddress+1,0
  1897  02E9  1383               	bcf	3,7
  1898  02EA  0800               	movf	0,w
  1899  02EB  1683               	bsf	3,5	;RP0=1, select bank1
  1900  02EC  1303               	bcf	3,6	;RP1=0, select bank1
  1901  02ED  0605               	xorwf	5,w	;volatile
  1902  02EE  1903               	skipnz
  1903  02EF  2AF1               	goto	u731
  1904  02F0  2AF2               	goto	u730
  1905  02F1                     u731:	
  1906  02F1  2B2F               	goto	l1542
  1907  02F2                     u730:	
  1908  02F2                     l1532:	
  1909  02F2  1283               	bcf	3,5	;RP0=0, select bank0
  1910  02F3  1303               	bcf	3,6	;RP1=0, select bank0
  1911  02F4  0847               	movf	GPIO_Init_Pin@DirRegAddress,w
  1912  02F5  0084               	movwf	4
  1913  02F6  1783               	bsf	3,7
  1914  02F7  1C48               	btfss	GPIO_Init_Pin@DirRegAddress+1,0
  1915  02F8  1383               	bcf	3,7
  1916  02F9  0800               	movf	0,w
  1917  02FA  1683               	bsf	3,5	;RP0=1, select bank1
  1918  02FB  1303               	bcf	3,6	;RP1=0, select bank1
  1919  02FC  0606               	xorwf	6,w	;volatile
  1920  02FD  1903               	skipnz
  1921  02FE  2B00               	goto	u741
  1922  02FF  2B01               	goto	u740
  1923  0300                     u741:	
  1924  0300  2B2F               	goto	l1542
  1925  0301                     u740:	
  1926  0301                     l1534:	
  1927  0301  1283               	bcf	3,5	;RP0=0, select bank0
  1928  0302  1303               	bcf	3,6	;RP1=0, select bank0
  1929  0303  0847               	movf	GPIO_Init_Pin@DirRegAddress,w
  1930  0304  0084               	movwf	4
  1931  0305  1783               	bsf	3,7
  1932  0306  1C48               	btfss	GPIO_Init_Pin@DirRegAddress+1,0
  1933  0307  1383               	bcf	3,7
  1934  0308  0800               	movf	0,w
  1935  0309  1683               	bsf	3,5	;RP0=1, select bank1
  1936  030A  1303               	bcf	3,6	;RP1=0, select bank1
  1937  030B  0607               	xorwf	7,w	;volatile
  1938  030C  1903               	skipnz
  1939  030D  2B0F               	goto	u751
  1940  030E  2B10               	goto	u750
  1941  030F                     u751:	
  1942  030F  2B2F               	goto	l1542
  1943  0310                     u750:	
  1944  0310                     l1536:	
  1945  0310  1283               	bcf	3,5	;RP0=0, select bank0
  1946  0311  1303               	bcf	3,6	;RP1=0, select bank0
  1947  0312  0847               	movf	GPIO_Init_Pin@DirRegAddress,w
  1948  0313  0084               	movwf	4
  1949  0314  1783               	bsf	3,7
  1950  0315  1C48               	btfss	GPIO_Init_Pin@DirRegAddress+1,0
  1951  0316  1383               	bcf	3,7
  1952  0317  0800               	movf	0,w
  1953  0318  1683               	bsf	3,5	;RP0=1, select bank1
  1954  0319  1303               	bcf	3,6	;RP1=0, select bank1
  1955  031A  0608               	xorwf	8,w	;volatile
  1956  031B  1903               	skipnz
  1957  031C  2B1E               	goto	u761
  1958  031D  2B1F               	goto	u760
  1959  031E                     u761:	
  1960  031E  2B2F               	goto	l1542
  1961  031F                     u760:	
  1962  031F                     l1538:	
  1963  031F  1283               	bcf	3,5	;RP0=0, select bank0
  1964  0320  1303               	bcf	3,6	;RP1=0, select bank0
  1965  0321  0847               	movf	GPIO_Init_Pin@DirRegAddress,w
  1966  0322  0084               	movwf	4
  1967  0323  1783               	bsf	3,7
  1968  0324  1C48               	btfss	GPIO_Init_Pin@DirRegAddress+1,0
  1969  0325  1383               	bcf	3,7
  1970  0326  0800               	movf	0,w
  1971  0327  1683               	bsf	3,5	;RP0=1, select bank1
  1972  0328  1303               	bcf	3,6	;RP1=0, select bank1
  1973  0329  0609               	xorwf	9,w	;volatile
  1974  032A  1903               	skipnz
  1975  032B  2B2D               	goto	u771
  1976  032C  2B2E               	goto	u770
  1977  032D                     u771:	
  1978  032D  2B2F               	goto	l1542
  1979  032E                     u770:	
  1980  032E                     l1540:	
  1981                           
  1982                           ;GPIO.c: 44:     }
  1983  032E  2B54               	goto	l24
  1984  032F                     l1542:	
  1985                           
  1986                           ;GPIO.c: 46:     {;GPIO.c: 47:         ((*DirRegAddress)=(*DirRegAddress & ~(1<<pin_numb
      +                          er))|(dir<<pin_number));
  1987  032F  1283               	bcf	3,5	;RP0=0, select bank0
  1988  0330  1303               	bcf	3,6	;RP1=0, select bank0
  1989  0331  084A               	movf	GPIO_Init_Pin@dir,w
  1990  0332  00CB               	movwf	??_GPIO_Init_Pin
  1991  0333  0A49               	incf	GPIO_Init_Pin@pin_number,w
  1992  0334  2B37               	goto	u784
  1993  0335                     u785:	
  1994  0335  1003               	clrc
  1995  0336  0DCB               	rlf	??_GPIO_Init_Pin,f
  1996  0337                     u784:	
  1997  0337  3EFF               	addlw	-1
  1998  0338  1D03               	skipz
  1999  0339  2B35               	goto	u785
  2000  033A  0847               	movf	GPIO_Init_Pin@DirRegAddress,w
  2001  033B  0084               	movwf	4
  2002  033C  1783               	bsf	3,7
  2003  033D  1C48               	btfss	GPIO_Init_Pin@DirRegAddress+1,0
  2004  033E  1383               	bcf	3,7
  2005  033F  3001               	movlw	1
  2006  0340  00CC               	movwf	??_GPIO_Init_Pin+1
  2007  0341  0A49               	incf	GPIO_Init_Pin@pin_number,w
  2008  0342  2B45               	goto	u794
  2009  0343                     u795:	
  2010  0343  1003               	clrc
  2011  0344  0DCC               	rlf	??_GPIO_Init_Pin+1,f
  2012  0345                     u794:	
  2013  0345  3EFF               	addlw	-1
  2014  0346  1D03               	skipz
  2015  0347  2B43               	goto	u795
  2016  0348  084C               	movf	??_GPIO_Init_Pin+1,w
  2017  0349  3AFF               	xorlw	255
  2018  034A  0500               	andwf	0,w
  2019  034B  044B               	iorwf	??_GPIO_Init_Pin,w
  2020  034C  00CD               	movwf	??_GPIO_Init_Pin+2
  2021  034D  0847               	movf	GPIO_Init_Pin@DirRegAddress,w
  2022  034E  0084               	movwf	4
  2023  034F  1783               	bsf	3,7
  2024  0350  1C48               	btfss	GPIO_Init_Pin@DirRegAddress+1,0
  2025  0351  1383               	bcf	3,7
  2026  0352  084D               	movf	??_GPIO_Init_Pin+2,w
  2027  0353  0080               	movwf	0
  2028  0354                     l24:	
  2029  0354  0008               	return
  2030  0355                     __end_of_GPIO_Init_Pin:	
  2031                           
  2032                           	psect	text9
  2033  0FC4                     __ptext9:	
  2034 ;; *************** function _CLOCK_Init *****************
  2035 ;; Defined at:
  2036 ;;		line 45 in file "Clock.c"
  2037 ;; Parameters:    Size  Location     Type
  2038 ;;		None
  2039 ;; Auto vars:     Size  Location     Type
  2040 ;;		None
  2041 ;; Return value:  Size  Location     Type
  2042 ;;                  1    wreg      void 
  2043 ;; Registers used:
  2044 ;;		status,2
  2045 ;; Tracked objects:
  2046 ;;		On entry : 0/0
  2047 ;;		On exit  : 0/0
  2048 ;;		Unchanged: 0/0
  2049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2050 ;;      Params:         0       0       0       0       0
  2051 ;;      Locals:         0       0       0       0       0
  2052 ;;      Temps:          0       0       0       0       0
  2053 ;;      Totals:         0       0       0       0       0
  2054 ;;Total ram usage:        0 bytes
  2055 ;; Hardware stack levels used:    1
  2056 ;; Hardware stack levels required when called:    5
  2057 ;; This function calls:
  2058 ;;		Nothing
  2059 ;; This function is called by:
  2060 ;;		_main
  2061 ;; This function uses a non-reentrant model
  2062 ;;
  2063                           
  2064                           
  2065                           ;psect for function _CLOCK_Init
  2066  0FC4                     _CLOCK_Init:	
  2067  0FC4                     l1832:	
  2068                           ;incstack = 0
  2069                           ; Regs used in _CLOCK_Init: [status,2]
  2070                           
  2071                           
  2072                           ;Clock.c: 48:     CurrentTime.hours = 0;
  2073  0FC4  1283               	bcf	3,5	;RP0=0, select bank0
  2074  0FC5  1303               	bcf	3,6	;RP1=0, select bank0
  2075  0FC6  01B7               	clrf	_CurrentTime
  2076                           
  2077                           ;Clock.c: 49:     CurrentTime.minuts = 0;
  2078  0FC7  01B8               	clrf	_CurrentTime+1
  2079                           
  2080                           ;Clock.c: 50:     CurrentTime.seconds = 0;
  2081  0FC8  01B9               	clrf	_CurrentTime+2
  2082                           
  2083                           ;Clock.c: 51:     CurrentTime.mSeconds = 0;
  2084  0FC9  01BA               	clrf	_CurrentTime+3
  2085  0FCA  01BB               	clrf	_CurrentTime+4
  2086                           
  2087                           ;Clock.c: 54:     CurrentMode = CL_NORMAL;
  2088  0FCB  01B2               	clrf	_CurrentMode
  2089  0FCC                     l159:	
  2090  0FCC  0008               	return
  2091  0FCD                     __end_of_CLOCK_Init:	
  2092                           
  2093                           	psect	text10
  2094  0767                     __ptext10:	
  2095 ;; *************** function _TMR0_ISR *****************
  2096 ;; Defined at:
  2097 ;;		line 31 in file "Timer.c"
  2098 ;; Parameters:    Size  Location     Type
  2099 ;;		None
  2100 ;; Auto vars:     Size  Location     Type
  2101 ;;		None
  2102 ;; Return value:  Size  Location     Type
  2103 ;;                  1    wreg      void 
  2104 ;; Registers used:
  2105 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2106 ;; Tracked objects:
  2107 ;;		On entry : 0/0
  2108 ;;		On exit  : 0/0
  2109 ;;		Unchanged: 0/0
  2110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2111 ;;      Params:         0       0       0       0       0
  2112 ;;      Locals:         0       0       0       0       0
  2113 ;;      Temps:          0       3       0       0       0
  2114 ;;      Totals:         0       3       0       0       0
  2115 ;;Total ram usage:        3 bytes
  2116 ;; Hardware stack levels used:    1
  2117 ;; Hardware stack levels required when called:    4
  2118 ;; This function calls:
  2119 ;;		_CLOCK_Update
  2120 ;;		_Disp_Update
  2121 ;;		_SSD_Update
  2122 ;;		_SW_Update
  2123 ;; This function is called by:
  2124 ;;		Interrupt level 1
  2125 ;; This function uses a non-reentrant model
  2126 ;;
  2127                           
  2128                           
  2129                           ;psect for function _TMR0_ISR
  2130  0767                     _TMR0_ISR:	
  2131  0767                     i1l1964:	
  2132                           
  2133                           ;Timer.c: 35:     ((TMR0IF) = 0);
  2134  0767  110B               	bcf	11,2	;volatile
  2135  0768                     i1l1966:	
  2136                           
  2137                           ;Timer.c: 37:     ((TMR0) = 256 - (((5)) ));
  2138  0768  30FB               	movlw	251
  2139  0769  0081               	movwf	1	;volatile
  2140  076A                     i1l1968:	
  2141                           
  2142                           ;Timer.c: 40:     SW_Update();
  2143  076A  120A  118A  2587  120A  118A  	fcall	_SW_Update
  2144  076F                     i1l1970:	
  2145                           
  2146                           ;Timer.c: 41:     CLOCK_Update();
  2147  076F  120A  118A  23BC  120A  118A  	fcall	_CLOCK_Update
  2148  0774                     i1l1972:	
  2149                           
  2150                           ;Timer.c: 42:     Disp_Update();
  2151  0774  120A  118A  260B  120A  118A  	fcall	_Disp_Update
  2152  0779                     i1l1974:	
  2153                           
  2154                           ;Timer.c: 43:     SSD_Update();
  2155  0779  120A  118A  2714  120A  118A  	fcall	_SSD_Update
  2156  077E                     i1l279:	
  2157  077E  1283               	bcf	3,5	;RP0=0, select bank0
  2158  077F  1303               	bcf	3,6	;RP1=0, select bank0
  2159  0780  0846               	movf	??_TMR0_ISR+2,w
  2160  0781  008A               	movwf	10
  2161  0782  0845               	movf	??_TMR0_ISR+1,w
  2162  0783  0084               	movwf	4
  2163  0784  0E44               	swapf	??_TMR0_ISR^0,w
  2164  0785  0083               	movwf	3
  2165  0786  0EFE               	swapf	btemp,f
  2166  0787  0E7E               	swapf	btemp,w
  2167  0788  0009               	retfie
  2168  0789                     __end_of_TMR0_ISR:	
  2169                           
  2170                           	psect	intentry
  2171  0004                     __pintentry:	
  2172                           ;incstack = 0
  2173                           ; Regs used in _TMR0_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2174                           
  2175  0004                     interrupt_function:	
  2176  007E                     saved_w	set	btemp
  2177  0004  00FE               	movwf	btemp
  2178  0005  0E03               	swapf	3,w
  2179  0006  1283               	bcf	3,5	;RP0=0, select bank0
  2180  0007  1303               	bcf	3,6	;RP1=0, select bank0
  2181  0008  00C4               	movwf	??_TMR0_ISR
  2182  0009  0804               	movf	4,w
  2183  000A  00C5               	movwf	??_TMR0_ISR+1
  2184  000B  080A               	movf	10,w
  2185  000C  00C6               	movwf	??_TMR0_ISR+2
  2186  000D  120A  118A  2F67   	ljmp	_TMR0_ISR
  2187                           
  2188                           	psect	text11
  2189  0587                     __ptext11:	
  2190 ;; *************** function _SW_Update *****************
  2191 ;; Defined at:
  2192 ;;		line 80 in file "SW.c"
  2193 ;; Parameters:    Size  Location     Type
  2194 ;;		None
  2195 ;; Auto vars:     Size  Location     Type
  2196 ;;		None
  2197 ;; Return value:  Size  Location     Type
  2198 ;;                  1    wreg      void 
  2199 ;; Registers used:
  2200 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2201 ;; Tracked objects:
  2202 ;;		On entry : 0/0
  2203 ;;		On exit  : 0/0
  2204 ;;		Unchanged: 0/0
  2205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2206 ;;      Params:         0       0       0       0       0
  2207 ;;      Locals:         0       0       0       0       0
  2208 ;;      Temps:          2       0       0       0       0
  2209 ;;      Totals:         2       0       0       0       0
  2210 ;;Total ram usage:        2 bytes
  2211 ;; Hardware stack levels used:    1
  2212 ;; Hardware stack levels required when called:    2
  2213 ;; This function calls:
  2214 ;;		_SW_UpdateState
  2215 ;; This function is called by:
  2216 ;;		_TMR0_ISR
  2217 ;; This function uses a non-reentrant model
  2218 ;;
  2219                           
  2220                           
  2221                           ;psect for function _SW_Update
  2222  0587                     _SW_Update:	
  2223  0587                     i1l1864:	
  2224                           ;incstack = 0
  2225                           ; Regs used in _SW_Update: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2226                           
  2227                           
  2228                           ;SW.c: 89:     if(SW_Time_Counter != (20))
  2229  0587  3005               	movlw	5
  2230  0588  00F8               	movwf	??_SW_Update
  2231  0589  0878               	movf	??_SW_Update,w
  2232  058A  1283               	bcf	3,5	;RP0=0, select bank0
  2233  058B  1303               	bcf	3,6	;RP1=0, select bank0
  2234  058C  07B3               	addwf	SW_Update@SW_Time_Counter,f
  2235  058D                     i1l1866:	
  2236                           
  2237                           ;SW.c: 93:     SW_Time_Counter = 0;
  2238  058D  01B3               	clrf	SW_Update@SW_Time_Counter
  2239  058E                     i1l1868:	
  2240                           
  2241                           ;SW.c: 95:     SW_DATA[SW_PLUS].samples[0] = SW_DATA[SW_PLUS].samples[1];
  2242  058E  0821               	movf	_SW_DATA+1,w
  2243  058F  00F8               	movwf	??_SW_Update
  2244  0590  0878               	movf	??_SW_Update,w
  2245  0591  00A0               	movwf	_SW_DATA
  2246                           
  2247                           ;SW.c: 96:     SW_DATA[SW_PLUS].samples[1] = (((PORTB) >> (0))& 1);
  2248  0592  0806               	movf	6,w	;volatile
  2249  0593  3901               	andlw	1
  2250  0594  00F8               	movwf	??_SW_Update
  2251  0595  0878               	movf	??_SW_Update,w
  2252  0596  00A1               	movwf	_SW_DATA+1
  2253  0597                     i1l1870:	
  2254                           
  2255                           ;SW.c: 98:     SW_UpdateState(SW_PLUS);
  2256  0597  3000               	movlw	0
  2257  0598  120A  118A  202D  120A  118A  	fcall	_SW_UpdateState
  2258  059D                     i1l1872:	
  2259                           
  2260                           ;SW.c: 100:     SW_DATA[SW_MINUS].samples[0] = SW_DATA[SW_PLUS].samples[1];
  2261  059D  1283               	bcf	3,5	;RP0=0, select bank0
  2262  059E  1303               	bcf	3,6	;RP1=0, select bank0
  2263  059F  0821               	movf	_SW_DATA+1,w
  2264  05A0  00F8               	movwf	??_SW_Update
  2265  05A1  0878               	movf	??_SW_Update,w
  2266  05A2  00A3               	movwf	_SW_DATA+3
  2267  05A3                     i1l1874:	
  2268                           
  2269                           ;SW.c: 101:     SW_DATA[SW_MINUS].samples[1] = (((PORTB) >> (1))& 1);
  2270  05A3  0806               	movf	6,w	;volatile
  2271  05A4  00F8               	movwf	??_SW_Update
  2272  05A5  1003               	clrc
  2273  05A6  0C78               	rrf	??_SW_Update,w
  2274  05A7  3901               	andlw	1
  2275  05A8  00F9               	movwf	??_SW_Update+1
  2276  05A9  0879               	movf	??_SW_Update+1,w
  2277  05AA  00A4               	movwf	_SW_DATA+4
  2278  05AB                     i1l1876:	
  2279                           
  2280                           ;SW.c: 103:     SW_UpdateState(SW_MINUS);
  2281  05AB  3001               	movlw	1
  2282  05AC  120A  118A  202D  120A  118A  	fcall	_SW_UpdateState
  2283  05B1                     i1l1878:	
  2284                           
  2285                           ;SW.c: 106:     SW_DATA[SW_SET].samples[0] = SW_DATA[SW_PLUS].samples[1];
  2286  05B1  1283               	bcf	3,5	;RP0=0, select bank0
  2287  05B2  1303               	bcf	3,6	;RP1=0, select bank0
  2288  05B3  0821               	movf	_SW_DATA+1,w
  2289  05B4  00F8               	movwf	??_SW_Update
  2290  05B5  0878               	movf	??_SW_Update,w
  2291  05B6  00A6               	movwf	_SW_DATA+6
  2292  05B7                     i1l1880:	
  2293                           
  2294                           ;SW.c: 107:     SW_DATA[SW_SET].samples[1] = (((PORTB) >> (2))& 1);
  2295  05B7  0806               	movf	6,w	;volatile
  2296  05B8  00F8               	movwf	??_SW_Update
  2297  05B9  3002               	movlw	2
  2298  05BA                     u124_25:	
  2299  05BA  1003               	clrc
  2300  05BB  0CF8               	rrf	??_SW_Update,f
  2301  05BC  3EFF               	addlw	-1
  2302  05BD  1D03               	skipz
  2303  05BE  2DBA               	goto	u124_25
  2304  05BF  0878               	movf	??_SW_Update,w
  2305  05C0  3901               	andlw	1
  2306  05C1  00F9               	movwf	??_SW_Update+1
  2307  05C2  0879               	movf	??_SW_Update+1,w
  2308  05C3  00A7               	movwf	_SW_DATA+7
  2309  05C4                     i1l1882:	
  2310                           
  2311                           ;SW.c: 109:     SW_UpdateState(SW_SET);
  2312  05C4  3002               	movlw	2
  2313  05C5  120A  118A  202D  120A  118A  	fcall	_SW_UpdateState
  2314  05CA                     i1l134:	
  2315  05CA  0008               	return
  2316  05CB                     __end_of_SW_Update:	
  2317                           
  2318                           	psect	text12
  2319  002D                     __ptext12:	
  2320 ;; *************** function _SW_UpdateState *****************
  2321 ;; Defined at:
  2322 ;;		line 112 in file "SW.c"
  2323 ;; Parameters:    Size  Location     Type
  2324 ;;  sw              1    wreg     enum E859
  2325 ;; Auto vars:     Size  Location     Type
  2326 ;;  sw              1    7[COMMON] enum E859
  2327 ;; Return value:  Size  Location     Type
  2328 ;;                  1    wreg      void 
  2329 ;; Registers used:
  2330 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2331 ;; Tracked objects:
  2332 ;;		On entry : 0/0
  2333 ;;		On exit  : 0/0
  2334 ;;		Unchanged: 0/0
  2335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2336 ;;      Params:         0       0       0       0       0
  2337 ;;      Locals:         1       0       0       0       0
  2338 ;;      Temps:          3       0       0       0       0
  2339 ;;      Totals:         4       0       0       0       0
  2340 ;;Total ram usage:        4 bytes
  2341 ;; Hardware stack levels used:    1
  2342 ;; Hardware stack levels required when called:    1
  2343 ;; This function calls:
  2344 ;;		___bmul
  2345 ;; This function is called by:
  2346 ;;		_SW_Update
  2347 ;; This function uses a non-reentrant model
  2348 ;;
  2349                           
  2350                           
  2351                           ;psect for function _SW_UpdateState
  2352  002D                     _SW_UpdateState:	
  2353                           
  2354                           ;incstack = 0
  2355                           ; Regs used in _SW_UpdateState: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2356                           ;SW_UpdateState@sw stored from wreg
  2357  002D  00F7               	movwf	SW_UpdateState@sw
  2358  002E                     i1l1700:	
  2359                           
  2360                           ;SW.c: 112: void SW_UpdateState(SW_t sw);SW.c: 113: {;SW.c: 129:     switch(SW_DATA[sw].
      +                          state)
  2361  002E  2902               	goto	i1l1728
  2362  002F                     i1l1702:	
  2363                           
  2364                           ;SW.c: 133:             if(SW_DATA[sw].samples[0] == 1 && SW_DATA[sw].samples[1] == 1)
  2365  002F  3003               	movlw	3
  2366  0030  00F4               	movwf	??_SW_UpdateState
  2367  0031  0874               	movf	??_SW_UpdateState,w
  2368  0032  00F0               	movwf	___bmul@multiplicand
  2369  0033  0877               	movf	SW_UpdateState@sw,w
  2370  0034  120A  118A  27C6  120A  118A  	fcall	___bmul
  2371  0039  3E20               	addlw	(low (_SW_DATA| 0))& (0+255)
  2372  003A  0084               	movwf	4
  2373  003B  1383               	bcf	3,7	;select IRP bank0
  2374  003C  0300               	decf	0,w
  2375  003D  1D03               	btfss	3,2
  2376  003E  2840               	goto	u101_21
  2377  003F  2841               	goto	u101_20
  2378  0040                     u101_21:	
  2379  0040  2925               	goto	i1l148
  2380  0041                     u101_20:	
  2381  0041                     i1l1704:	
  2382  0041  3003               	movlw	3
  2383  0042  00F4               	movwf	??_SW_UpdateState
  2384  0043  0874               	movf	??_SW_UpdateState,w
  2385  0044  00F0               	movwf	___bmul@multiplicand
  2386  0045  0877               	movf	SW_UpdateState@sw,w
  2387  0046  120A  118A  27C6  120A  118A  	fcall	___bmul
  2388  004B  3E21               	addlw	(low ((_SW_DATA| 0+1)))& (0+255)
  2389  004C  0084               	movwf	4
  2390  004D  1383               	bcf	3,7	;select IRP bank0
  2391  004E  0300               	decf	0,w
  2392  004F  1D03               	btfss	3,2
  2393  0050  2852               	goto	u102_21
  2394  0051  2853               	goto	u102_20
  2395  0052                     u102_21:	
  2396  0052  2925               	goto	i1l148
  2397  0053                     u102_20:	
  2398  0053                     i1l1706:	
  2399                           
  2400                           ;SW.c: 134:                 SW_DATA[sw].state = SW_RELEASED;
  2401  0053  3003               	movlw	3
  2402  0054  00F4               	movwf	??_SW_UpdateState
  2403  0055  0874               	movf	??_SW_UpdateState,w
  2404  0056  00F0               	movwf	___bmul@multiplicand
  2405  0057  0877               	movf	SW_UpdateState@sw,w
  2406  0058  120A  118A  27C6  120A  118A  	fcall	___bmul
  2407  005D  3E22               	addlw	(low ((_SW_DATA| 0+2)))& (0+255)
  2408  005E  0084               	movwf	4
  2409  005F  1383               	bcf	3,7	;select IRP bank0
  2410  0060  0180               	clrf	0
  2411  0061  2925               	goto	i1l148
  2412  0062                     i1l1708:	
  2413                           
  2414                           ;SW.c: 137:             if(SW_DATA[sw].samples[0] == 0 && SW_DATA[sw].samples[1] == 0)
  2415  0062  3003               	movlw	3
  2416  0063  00F4               	movwf	??_SW_UpdateState
  2417  0064  0874               	movf	??_SW_UpdateState,w
  2418  0065  00F0               	movwf	___bmul@multiplicand
  2419  0066  0877               	movf	SW_UpdateState@sw,w
  2420  0067  120A  118A  27C6  120A  118A  	fcall	___bmul
  2421  006C  3E20               	addlw	(low (_SW_DATA| 0))& (0+255)
  2422  006D  0084               	movwf	4
  2423  006E  1383               	bcf	3,7	;select IRP bank0
  2424  006F  0800               	movf	0,w
  2425  0070  1D03               	btfss	3,2
  2426  0071  2873               	goto	u103_21
  2427  0072  2874               	goto	u103_20
  2428  0073                     u103_21:	
  2429  0073  2925               	goto	i1l148
  2430  0074                     u103_20:	
  2431  0074                     i1l1710:	
  2432  0074  3003               	movlw	3
  2433  0075  00F4               	movwf	??_SW_UpdateState
  2434  0076  0874               	movf	??_SW_UpdateState,w
  2435  0077  00F0               	movwf	___bmul@multiplicand
  2436  0078  0877               	movf	SW_UpdateState@sw,w
  2437  0079  120A  118A  27C6  120A  118A  	fcall	___bmul
  2438  007E  3E21               	addlw	(low ((_SW_DATA| 0+1)))& (0+255)
  2439  007F  0084               	movwf	4
  2440  0080  1383               	bcf	3,7	;select IRP bank0
  2441  0081  0800               	movf	0,w
  2442  0082  1D03               	btfss	3,2
  2443  0083  2885               	goto	u104_21
  2444  0084  2886               	goto	u104_20
  2445  0085                     u104_21:	
  2446  0085  2925               	goto	i1l148
  2447  0086                     u104_20:	
  2448  0086                     i1l1712:	
  2449                           
  2450                           ;SW.c: 138:                 SW_DATA[sw].state = SW_PRE_PRESSED;
  2451  0086  3003               	movlw	3
  2452  0087  00F4               	movwf	??_SW_UpdateState
  2453  0088  0874               	movf	??_SW_UpdateState,w
  2454  0089  00F0               	movwf	___bmul@multiplicand
  2455  008A  0877               	movf	SW_UpdateState@sw,w
  2456  008B  120A  118A  27C6  120A  118A  	fcall	___bmul
  2457  0090  3E22               	addlw	(low ((_SW_DATA| 0+2)))& (0+255)
  2458  0091  0084               	movwf	4
  2459  0092  1383               	bcf	3,7	;select IRP bank0
  2460  0093  0180               	clrf	0
  2461  0094  0A80               	incf	0,f
  2462  0095  2925               	goto	i1l148
  2463  0096                     i1l1714:	
  2464                           
  2465                           ;SW.c: 141:             if(SW_DATA[sw].samples[0] == 0 && SW_DATA[sw].samples[1] == 0)
  2466  0096  3003               	movlw	3
  2467  0097  00F4               	movwf	??_SW_UpdateState
  2468  0098  0874               	movf	??_SW_UpdateState,w
  2469  0099  00F0               	movwf	___bmul@multiplicand
  2470  009A  0877               	movf	SW_UpdateState@sw,w
  2471  009B  120A  118A  27C6  120A  118A  	fcall	___bmul
  2472  00A0  3E20               	addlw	(low (_SW_DATA| 0))& (0+255)
  2473  00A1  0084               	movwf	4
  2474  00A2  1383               	bcf	3,7	;select IRP bank0
  2475  00A3  0800               	movf	0,w
  2476  00A4  1D03               	btfss	3,2
  2477  00A5  28A7               	goto	u105_21
  2478  00A6  28A8               	goto	u105_20
  2479  00A7                     u105_21:	
  2480  00A7  2925               	goto	i1l148
  2481  00A8                     u105_20:	
  2482  00A8                     i1l1716:	
  2483  00A8  3003               	movlw	3
  2484  00A9  00F4               	movwf	??_SW_UpdateState
  2485  00AA  0874               	movf	??_SW_UpdateState,w
  2486  00AB  00F0               	movwf	___bmul@multiplicand
  2487  00AC  0877               	movf	SW_UpdateState@sw,w
  2488  00AD  120A  118A  27C6  120A  118A  	fcall	___bmul
  2489  00B2  3E21               	addlw	(low ((_SW_DATA| 0+1)))& (0+255)
  2490  00B3  0084               	movwf	4
  2491  00B4  1383               	bcf	3,7	;select IRP bank0
  2492  00B5  0800               	movf	0,w
  2493  00B6  1D03               	btfss	3,2
  2494  00B7  28B9               	goto	u106_21
  2495  00B8  28BA               	goto	u106_20
  2496  00B9                     u106_21:	
  2497  00B9  2925               	goto	i1l148
  2498  00BA                     u106_20:	
  2499  00BA                     i1l1718:	
  2500                           
  2501                           ;SW.c: 142:                 SW_DATA[sw].state = SW_PRESSED;
  2502  00BA  3002               	movlw	2
  2503  00BB  00F4               	movwf	??_SW_UpdateState
  2504  00BC  3003               	movlw	3
  2505  00BD  00F5               	movwf	??_SW_UpdateState+1
  2506  00BE  0875               	movf	??_SW_UpdateState+1,w
  2507  00BF  00F0               	movwf	___bmul@multiplicand
  2508  00C0  0877               	movf	SW_UpdateState@sw,w
  2509  00C1  120A  118A  27C6  120A  118A  	fcall	___bmul
  2510  00C6  3E22               	addlw	(low ((_SW_DATA| 0+2)))& (0+255)
  2511  00C7  0084               	movwf	4
  2512  00C8  0874               	movf	??_SW_UpdateState,w
  2513  00C9  1383               	bcf	3,7	;select IRP bank0
  2514  00CA  0080               	movwf	0
  2515  00CB  2925               	goto	i1l148
  2516  00CC                     i1l1720:	
  2517                           
  2518                           ;SW.c: 145:             if(SW_DATA[sw].samples[0] == 1 && SW_DATA[sw].samples[1] == 1)
  2519  00CC  3003               	movlw	3
  2520  00CD  00F4               	movwf	??_SW_UpdateState
  2521  00CE  0874               	movf	??_SW_UpdateState,w
  2522  00CF  00F0               	movwf	___bmul@multiplicand
  2523  00D0  0877               	movf	SW_UpdateState@sw,w
  2524  00D1  120A  118A  27C6  120A  118A  	fcall	___bmul
  2525  00D6  3E20               	addlw	(low (_SW_DATA| 0))& (0+255)
  2526  00D7  0084               	movwf	4
  2527  00D8  1383               	bcf	3,7	;select IRP bank0
  2528  00D9  0300               	decf	0,w
  2529  00DA  1D03               	btfss	3,2
  2530  00DB  28DD               	goto	u107_21
  2531  00DC  28DE               	goto	u107_20
  2532  00DD                     u107_21:	
  2533  00DD  2925               	goto	i1l148
  2534  00DE                     u107_20:	
  2535  00DE                     i1l1722:	
  2536  00DE  3003               	movlw	3
  2537  00DF  00F4               	movwf	??_SW_UpdateState
  2538  00E0  0874               	movf	??_SW_UpdateState,w
  2539  00E1  00F0               	movwf	___bmul@multiplicand
  2540  00E2  0877               	movf	SW_UpdateState@sw,w
  2541  00E3  120A  118A  27C6  120A  118A  	fcall	___bmul
  2542  00E8  3E21               	addlw	(low ((_SW_DATA| 0+1)))& (0+255)
  2543  00E9  0084               	movwf	4
  2544  00EA  1383               	bcf	3,7	;select IRP bank0
  2545  00EB  0300               	decf	0,w
  2546  00EC  1D03               	btfss	3,2
  2547  00ED  28EF               	goto	u108_21
  2548  00EE  28F0               	goto	u108_20
  2549  00EF                     u108_21:	
  2550  00EF  2925               	goto	i1l148
  2551  00F0                     u108_20:	
  2552  00F0                     i1l1724:	
  2553                           
  2554                           ;SW.c: 146:                 SW_DATA[sw].state = SW_PRE_RELEASED;
  2555  00F0  3003               	movlw	3
  2556  00F1  00F4               	movwf	??_SW_UpdateState
  2557  00F2  3003               	movlw	3
  2558  00F3  00F5               	movwf	??_SW_UpdateState+1
  2559  00F4  0875               	movf	??_SW_UpdateState+1,w
  2560  00F5  00F0               	movwf	___bmul@multiplicand
  2561  00F6  0877               	movf	SW_UpdateState@sw,w
  2562  00F7  120A  118A  27C6  120A  118A  	fcall	___bmul
  2563  00FC  3E22               	addlw	(low ((_SW_DATA| 0+2)))& (0+255)
  2564  00FD  0084               	movwf	4
  2565  00FE  0874               	movf	??_SW_UpdateState,w
  2566  00FF  1383               	bcf	3,7	;select IRP bank0
  2567  0100  0080               	movwf	0
  2568  0101  2925               	goto	i1l148
  2569  0102                     i1l1728:	
  2570  0102  3003               	movlw	3
  2571  0103  00F4               	movwf	??_SW_UpdateState
  2572  0104  0874               	movf	??_SW_UpdateState,w
  2573  0105  00F0               	movwf	___bmul@multiplicand
  2574  0106  0877               	movf	SW_UpdateState@sw,w
  2575  0107  120A  118A  27C6  120A  118A  	fcall	___bmul
  2576  010C  3E22               	addlw	(low ((_SW_DATA| 0+2)))& (0+255)
  2577  010D  0084               	movwf	4
  2578  010E  1383               	bcf	3,7	;select IRP bank0
  2579  010F  0800               	movf	0,w
  2580  0110  00F5               	movwf	??_SW_UpdateState+1
  2581  0111  01F6               	clrf	??_SW_UpdateState+2
  2582                           
  2583                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2584                           ; Switch size 1, requested type "simple"
  2585                           ; Number of cases is 1, Range of values is 0 to 0
  2586                           ; switch strategies available:
  2587                           ; Name         Instructions Cycles
  2588                           ; simple_byte            4     3 (average)
  2589                           ; direct_byte           11     8 (fixed)
  2590                           ; jumptable            260     6 (fixed)
  2591                           ;	Chosen strategy is simple_byte
  2592  0112  0876               	movf	??_SW_UpdateState+2,w
  2593  0113  3A00               	xorlw	0	; case 0
  2594  0114  1903               	skipnz
  2595  0115  2917               	goto	i1l2096
  2596  0116  2925               	goto	i1l148
  2597  0117                     i1l2096:	
  2598                           
  2599                           ; Switch size 1, requested type "simple"
  2600                           ; Number of cases is 4, Range of values is 0 to 3
  2601                           ; switch strategies available:
  2602                           ; Name         Instructions Cycles
  2603                           ; simple_byte           13     7 (average)
  2604                           ; direct_byte           20     8 (fixed)
  2605                           ; jumptable            260     6 (fixed)
  2606                           ;	Chosen strategy is simple_byte
  2607  0117  0875               	movf	??_SW_UpdateState+1,w
  2608  0118  3A00               	xorlw	0	; case 0
  2609  0119  1903               	skipnz
  2610  011A  2862               	goto	i1l1708
  2611  011B  3A01               	xorlw	1	; case 1
  2612  011C  1903               	skipnz
  2613  011D  2896               	goto	i1l1714
  2614  011E  3A03               	xorlw	3	; case 2
  2615  011F  1903               	skipnz
  2616  0120  28CC               	goto	i1l1720
  2617  0121  3A01               	xorlw	1	; case 3
  2618  0122  1903               	skipnz
  2619  0123  282F               	goto	i1l1702
  2620  0124  2925               	goto	i1l148
  2621  0125                     i1l148:	
  2622  0125  0008               	return
  2623  0126                     __end_of_SW_UpdateState:	
  2624                           
  2625                           	psect	text13
  2626  0714                     __ptext13:	
  2627 ;; *************** function _SSD_Update *****************
  2628 ;; Defined at:
  2629 ;;		line 92 in file "SSD.c"
  2630 ;; Parameters:    Size  Location     Type
  2631 ;;		None
  2632 ;; Auto vars:     Size  Location     Type
  2633 ;;		None
  2634 ;; Return value:  Size  Location     Type
  2635 ;;                  1    wreg      void 
  2636 ;; Registers used:
  2637 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2638 ;; Tracked objects:
  2639 ;;		On entry : 0/0
  2640 ;;		On exit  : 0/0
  2641 ;;		Unchanged: 0/0
  2642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2643 ;;      Params:         0       0       0       0       0
  2644 ;;      Locals:         0       0       0       0       0
  2645 ;;      Temps:          1       0       0       0       0
  2646 ;;      Totals:         1       0       0       0       0
  2647 ;;Total ram usage:        1 bytes
  2648 ;; Hardware stack levels used:    1
  2649 ;; Hardware stack levels required when called:    1
  2650 ;; This function calls:
  2651 ;;		_SSD_Data_write
  2652 ;;		_SSD_Disable
  2653 ;;		_SSD_Enable
  2654 ;; This function is called by:
  2655 ;;		_TMR0_ISR
  2656 ;; This function uses a non-reentrant model
  2657 ;;
  2658                           
  2659                           
  2660                           ;psect for function _SSD_Update
  2661  0714                     _SSD_Update:	
  2662  0714                     i1l1846:	
  2663                           ;incstack = 0
  2664                           ; Regs used in _SSD_Update: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2665                           
  2666                           
  2667                           ;SSD.c: 97:     static u8_t SSD_Time_Counter = 0;;SSD.c: 98:     SSD_Time_Counter += (5)
      +                          ;
  2668  0714  3005               	movlw	5
  2669  0715  00F3               	movwf	??_SSD_Update
  2670  0716  0873               	movf	??_SSD_Update,w
  2671  0717  1283               	bcf	3,5	;RP0=0, select bank0
  2672  0718  1303               	bcf	3,6	;RP1=0, select bank0
  2673  0719  07B4               	addwf	SSD_Update@SSD_Time_Counter,f
  2674                           
  2675                           ;SSD.c: 100:     if(SSD_Time_Counter != (5))
  2676  071A  3005               	movlw	5
  2677  071B  0634               	xorwf	SSD_Update@SSD_Time_Counter,w
  2678  071C  1903               	btfsc	3,2
  2679  071D  2F1F               	goto	u122_21
  2680  071E  2F20               	goto	u122_20
  2681  071F                     u122_21:	
  2682  071F  2F21               	goto	i1l1850
  2683  0720                     u122_20:	
  2684  0720  2F42               	goto	i1l84
  2685  0721                     i1l1850:	
  2686                           
  2687                           ;SSD.c: 104:     SSD_Time_Counter = 0;
  2688  0721  01B4               	clrf	SSD_Update@SSD_Time_Counter
  2689  0722                     i1l1852:	
  2690                           
  2691                           ;SSD.c: 107:     SSD_Disable(currentSSD);
  2692  0722  0836               	movf	_currentSSD,w
  2693  0723  120A  118A  26E3  120A  118A  	fcall	_SSD_Disable
  2694  0728                     i1l1854:	
  2695                           
  2696                           ;SSD.c: 109:     currentSSD++;
  2697  0728  3001               	movlw	1
  2698  0729  00F3               	movwf	??_SSD_Update
  2699  072A  0873               	movf	??_SSD_Update,w
  2700  072B  1283               	bcf	3,5	;RP0=0, select bank0
  2701  072C  1303               	bcf	3,6	;RP1=0, select bank0
  2702  072D  07B6               	addwf	_currentSSD,f
  2703  072E                     i1l1856:	
  2704                           
  2705                           ;SSD.c: 110:     if(currentSSD > SSD_HOURS_TENS)currentSSD = 0;
  2706  072E  3004               	movlw	4
  2707  072F  0236               	subwf	_currentSSD,w
  2708  0730  1C03               	skipc
  2709  0731  2F33               	goto	u123_21
  2710  0732  2F34               	goto	u123_20
  2711  0733                     u123_21:	
  2712  0733  2F35               	goto	i1l1860
  2713  0734                     u123_20:	
  2714  0734                     i1l1858:	
  2715  0734  01B6               	clrf	_currentSSD
  2716  0735                     i1l1860:	
  2717                           
  2718                           ;SSD.c: 112:     SSD_Data_write();
  2719  0735  120A  118A  27A9  120A  118A  	fcall	_SSD_Data_write
  2720  073A                     i1l1862:	
  2721                           
  2722                           ;SSD.c: 114:     SSD_Enable(currentSSD);
  2723  073A  1283               	bcf	3,5	;RP0=0, select bank0
  2724  073B  1303               	bcf	3,6	;RP1=0, select bank0
  2725  073C  0836               	movf	_currentSSD,w
  2726  073D  120A  118A  267A  120A  118A  	fcall	_SSD_Enable
  2727  0742                     i1l84:	
  2728  0742  0008               	return
  2729  0743                     __end_of_SSD_Update:	
  2730                           
  2731                           	psect	text14
  2732  067A                     __ptext14:	
  2733 ;; *************** function _SSD_Enable *****************
  2734 ;; Defined at:
  2735 ;;		line 138 in file "SSD.c"
  2736 ;; Parameters:    Size  Location     Type
  2737 ;;  s               1    wreg     enum E872
  2738 ;; Auto vars:     Size  Location     Type
  2739 ;;  s               1    2[COMMON] enum E872
  2740 ;; Return value:  Size  Location     Type
  2741 ;;                  1    wreg      void 
  2742 ;; Registers used:
  2743 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2744 ;; Tracked objects:
  2745 ;;		On entry : 0/0
  2746 ;;		On exit  : 0/0
  2747 ;;		Unchanged: 0/0
  2748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2749 ;;      Params:         0       0       0       0       0
  2750 ;;      Locals:         1       0       0       0       0
  2751 ;;      Temps:          2       0       0       0       0
  2752 ;;      Totals:         3       0       0       0       0
  2753 ;;Total ram usage:        3 bytes
  2754 ;; Hardware stack levels used:    1
  2755 ;; This function calls:
  2756 ;;		Nothing
  2757 ;; This function is called by:
  2758 ;;		_SSD_Update
  2759 ;; This function uses a non-reentrant model
  2760 ;;
  2761                           
  2762                           
  2763                           ;psect for function _SSD_Enable
  2764  067A                     _SSD_Enable:	
  2765                           
  2766                           ;incstack = 0
  2767                           ; Regs used in _SSD_Enable: [wreg-fsr0h+status,2+status,0]
  2768                           ;SSD_Enable@s stored from wreg
  2769  067A  00F2               	movwf	SSD_Enable@s
  2770  067B                     i1l1684:	
  2771                           
  2772                           ;SSD.c: 138: void SSD_Enable(SSD_t s);SSD.c: 139: {;SSD.c: 140:     switch(s)
  2773  067B  2E98               	goto	i1l1694
  2774  067C                     i1l1686:	
  2775                           
  2776                           ;SSD.c: 143:             (((PORTB))=((PORTB) & ~(1<<(4)))|(SSD_ON<<(4)));
  2777  067C  1283               	bcf	3,5	;RP0=0, select bank0
  2778  067D  1303               	bcf	3,6	;RP1=0, select bank0
  2779  067E  0806               	movf	6,w	;volatile
  2780  067F  39EF               	andlw	239
  2781  0680  3810               	iorlw	16
  2782  0681  0086               	movwf	6	;volatile
  2783                           
  2784                           ;SSD.c: 144:             break;
  2785  0682  2EAE               	goto	i1l105
  2786  0683                     i1l1688:	
  2787                           
  2788                           ;SSD.c: 146:             (((PORTB))=((PORTB) & ~(1<<(5)))|(SSD_ON<<(5)));
  2789  0683  1283               	bcf	3,5	;RP0=0, select bank0
  2790  0684  1303               	bcf	3,6	;RP1=0, select bank0
  2791  0685  0806               	movf	6,w	;volatile
  2792  0686  39DF               	andlw	223
  2793  0687  3820               	iorlw	32
  2794  0688  0086               	movwf	6	;volatile
  2795                           
  2796                           ;SSD.c: 147:             break;
  2797  0689  2EAE               	goto	i1l105
  2798  068A                     i1l1690:	
  2799                           
  2800                           ;SSD.c: 149:             (((PORTB))=((PORTB) & ~(1<<(6)))|(SSD_ON<<(6)));
  2801  068A  1283               	bcf	3,5	;RP0=0, select bank0
  2802  068B  1303               	bcf	3,6	;RP1=0, select bank0
  2803  068C  0806               	movf	6,w	;volatile
  2804  068D  39BF               	andlw	191
  2805  068E  3840               	iorlw	64
  2806  068F  0086               	movwf	6	;volatile
  2807                           
  2808                           ;SSD.c: 150:             break;
  2809  0690  2EAE               	goto	i1l105
  2810  0691                     i1l1692:	
  2811                           
  2812                           ;SSD.c: 152:             (((PORTB))=((PORTB) & ~(1<<(7)))|(SSD_ON<<(7)));
  2813  0691  1283               	bcf	3,5	;RP0=0, select bank0
  2814  0692  1303               	bcf	3,6	;RP1=0, select bank0
  2815  0693  0806               	movf	6,w	;volatile
  2816  0694  397F               	andlw	127
  2817  0695  3880               	iorlw	128
  2818  0696  0086               	movwf	6	;volatile
  2819                           
  2820                           ;SSD.c: 153:             break;
  2821  0697  2EAE               	goto	i1l105
  2822  0698                     i1l1694:	
  2823  0698  0872               	movf	SSD_Enable@s,w
  2824  0699  00F0               	movwf	??_SSD_Enable
  2825  069A  01F1               	clrf	??_SSD_Enable+1
  2826                           
  2827                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2828                           ; Switch size 1, requested type "simple"
  2829                           ; Number of cases is 1, Range of values is 0 to 0
  2830                           ; switch strategies available:
  2831                           ; Name         Instructions Cycles
  2832                           ; simple_byte            4     3 (average)
  2833                           ; direct_byte           11     8 (fixed)
  2834                           ; jumptable            260     6 (fixed)
  2835                           ;	Chosen strategy is simple_byte
  2836  069B  0871               	movf	??_SSD_Enable+1,w
  2837  069C  3A00               	xorlw	0	; case 0
  2838  069D  1903               	skipnz
  2839  069E  2EA0               	goto	i1l2098
  2840  069F  2EAE               	goto	i1l105
  2841  06A0                     i1l2098:	
  2842                           
  2843                           ; Switch size 1, requested type "simple"
  2844                           ; Number of cases is 4, Range of values is 0 to 3
  2845                           ; switch strategies available:
  2846                           ; Name         Instructions Cycles
  2847                           ; simple_byte           13     7 (average)
  2848                           ; direct_byte           20     8 (fixed)
  2849                           ; jumptable            260     6 (fixed)
  2850                           ;	Chosen strategy is simple_byte
  2851  06A0  0870               	movf	??_SSD_Enable,w
  2852  06A1  3A00               	xorlw	0	; case 0
  2853  06A2  1903               	skipnz
  2854  06A3  2E7C               	goto	i1l1686
  2855  06A4  3A01               	xorlw	1	; case 1
  2856  06A5  1903               	skipnz
  2857  06A6  2E83               	goto	i1l1688
  2858  06A7  3A03               	xorlw	3	; case 2
  2859  06A8  1903               	skipnz
  2860  06A9  2E8A               	goto	i1l1690
  2861  06AA  3A01               	xorlw	1	; case 3
  2862  06AB  1903               	skipnz
  2863  06AC  2E91               	goto	i1l1692
  2864  06AD  2EAE               	goto	i1l105
  2865  06AE                     i1l105:	
  2866  06AE  0008               	return
  2867  06AF                     __end_of_SSD_Enable:	
  2868                           
  2869                           	psect	text15
  2870  06E3                     __ptext15:	
  2871 ;; *************** function _SSD_Disable *****************
  2872 ;; Defined at:
  2873 ;;		line 117 in file "SSD.c"
  2874 ;; Parameters:    Size  Location     Type
  2875 ;;  s               1    wreg     enum E872
  2876 ;; Auto vars:     Size  Location     Type
  2877 ;;  s               1    2[COMMON] enum E872
  2878 ;; Return value:  Size  Location     Type
  2879 ;;                  1    wreg      void 
  2880 ;; Registers used:
  2881 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2882 ;; Tracked objects:
  2883 ;;		On entry : 0/0
  2884 ;;		On exit  : 0/0
  2885 ;;		Unchanged: 0/0
  2886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2887 ;;      Params:         0       0       0       0       0
  2888 ;;      Locals:         1       0       0       0       0
  2889 ;;      Temps:          2       0       0       0       0
  2890 ;;      Totals:         3       0       0       0       0
  2891 ;;Total ram usage:        3 bytes
  2892 ;; Hardware stack levels used:    1
  2893 ;; This function calls:
  2894 ;;		Nothing
  2895 ;; This function is called by:
  2896 ;;		_SSD_Update
  2897 ;; This function uses a non-reentrant model
  2898 ;;
  2899                           
  2900                           
  2901                           ;psect for function _SSD_Disable
  2902  06E3                     _SSD_Disable:	
  2903                           
  2904                           ;incstack = 0
  2905                           ; Regs used in _SSD_Disable: [wreg-fsr0h+status,2+status,0]
  2906                           ;SSD_Disable@s stored from wreg
  2907  06E3  00F2               	movwf	SSD_Disable@s
  2908  06E4                     i1l1662:	
  2909                           
  2910                           ;SSD.c: 117: void SSD_Disable(SSD_t s);SSD.c: 118: {;SSD.c: 119:     switch(s)
  2911  06E4  2EFD               	goto	i1l1672
  2912  06E5                     i1l1664:	
  2913                           
  2914                           ;SSD.c: 122:             (((PORTB))=((PORTB) & ~(1<<(4)))|(SSD_OFF<<(4)));
  2915  06E5  1283               	bcf	3,5	;RP0=0, select bank0
  2916  06E6  1303               	bcf	3,6	;RP1=0, select bank0
  2917  06E7  0806               	movf	6,w	;volatile
  2918  06E8  39EF               	andlw	239
  2919  06E9  0086               	movwf	6	;volatile
  2920                           
  2921                           ;SSD.c: 123:             break;
  2922  06EA  2F13               	goto	i1l95
  2923  06EB                     i1l1666:	
  2924                           
  2925                           ;SSD.c: 125:             (((PORTB))=((PORTB) & ~(1<<(5)))|(SSD_OFF<<(5)));
  2926  06EB  1283               	bcf	3,5	;RP0=0, select bank0
  2927  06EC  1303               	bcf	3,6	;RP1=0, select bank0
  2928  06ED  0806               	movf	6,w	;volatile
  2929  06EE  39DF               	andlw	223
  2930  06EF  0086               	movwf	6	;volatile
  2931                           
  2932                           ;SSD.c: 126:             break;
  2933  06F0  2F13               	goto	i1l95
  2934  06F1                     i1l1668:	
  2935                           
  2936                           ;SSD.c: 128:             (((PORTB))=((PORTB) & ~(1<<(6)))|(SSD_OFF<<(6)));
  2937  06F1  1283               	bcf	3,5	;RP0=0, select bank0
  2938  06F2  1303               	bcf	3,6	;RP1=0, select bank0
  2939  06F3  0806               	movf	6,w	;volatile
  2940  06F4  39BF               	andlw	191
  2941  06F5  0086               	movwf	6	;volatile
  2942                           
  2943                           ;SSD.c: 129:             break;
  2944  06F6  2F13               	goto	i1l95
  2945  06F7                     i1l1670:	
  2946                           
  2947                           ;SSD.c: 131:             (((PORTB))=((PORTB) & ~(1<<(7)))|(SSD_OFF<<(7)));
  2948  06F7  1283               	bcf	3,5	;RP0=0, select bank0
  2949  06F8  1303               	bcf	3,6	;RP1=0, select bank0
  2950  06F9  0806               	movf	6,w	;volatile
  2951  06FA  397F               	andlw	127
  2952  06FB  0086               	movwf	6	;volatile
  2953                           
  2954                           ;SSD.c: 132:             break;
  2955  06FC  2F13               	goto	i1l95
  2956  06FD                     i1l1672:	
  2957  06FD  0872               	movf	SSD_Disable@s,w
  2958  06FE  00F0               	movwf	??_SSD_Disable
  2959  06FF  01F1               	clrf	??_SSD_Disable+1
  2960                           
  2961                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2962                           ; Switch size 1, requested type "simple"
  2963                           ; Number of cases is 1, Range of values is 0 to 0
  2964                           ; switch strategies available:
  2965                           ; Name         Instructions Cycles
  2966                           ; simple_byte            4     3 (average)
  2967                           ; direct_byte           11     8 (fixed)
  2968                           ; jumptable            260     6 (fixed)
  2969                           ;	Chosen strategy is simple_byte
  2970  0700  0871               	movf	??_SSD_Disable+1,w
  2971  0701  3A00               	xorlw	0	; case 0
  2972  0702  1903               	skipnz
  2973  0703  2F05               	goto	i1l2100
  2974  0704  2F13               	goto	i1l95
  2975  0705                     i1l2100:	
  2976                           
  2977                           ; Switch size 1, requested type "simple"
  2978                           ; Number of cases is 4, Range of values is 0 to 3
  2979                           ; switch strategies available:
  2980                           ; Name         Instructions Cycles
  2981                           ; simple_byte           13     7 (average)
  2982                           ; direct_byte           20     8 (fixed)
  2983                           ; jumptable            260     6 (fixed)
  2984                           ;	Chosen strategy is simple_byte
  2985  0705  0870               	movf	??_SSD_Disable,w
  2986  0706  3A00               	xorlw	0	; case 0
  2987  0707  1903               	skipnz
  2988  0708  2EE5               	goto	i1l1664
  2989  0709  3A01               	xorlw	1	; case 1
  2990  070A  1903               	skipnz
  2991  070B  2EEB               	goto	i1l1666
  2992  070C  3A03               	xorlw	3	; case 2
  2993  070D  1903               	skipnz
  2994  070E  2EF1               	goto	i1l1668
  2995  070F  3A01               	xorlw	1	; case 3
  2996  0710  1903               	skipnz
  2997  0711  2EF7               	goto	i1l1670
  2998  0712  2F13               	goto	i1l95
  2999  0713                     i1l95:	
  3000  0713  0008               	return
  3001  0714                     __end_of_SSD_Disable:	
  3002                           
  3003                           	psect	text16
  3004  07A9                     __ptext16:	
  3005 ;; *************** function _SSD_Data_write *****************
  3006 ;; Defined at:
  3007 ;;		line 161 in file "SSD.c"
  3008 ;; Parameters:    Size  Location     Type
  3009 ;;		None
  3010 ;; Auto vars:     Size  Location     Type
  3011 ;;		None
  3012 ;; Return value:  Size  Location     Type
  3013 ;;                  1    wreg      void 
  3014 ;; Registers used:
  3015 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3016 ;; Tracked objects:
  3017 ;;		On entry : 0/0
  3018 ;;		On exit  : 0/0
  3019 ;;		Unchanged: 0/0
  3020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3021 ;;      Params:         0       0       0       0       0
  3022 ;;      Locals:         0       0       0       0       0
  3023 ;;      Temps:          1       0       0       0       0
  3024 ;;      Totals:         1       0       0       0       0
  3025 ;;Total ram usage:        1 bytes
  3026 ;; Hardware stack levels used:    1
  3027 ;; This function calls:
  3028 ;;		Nothing
  3029 ;; This function is called by:
  3030 ;;		_SSD_Update
  3031 ;; This function uses a non-reentrant model
  3032 ;;
  3033                           
  3034                           
  3035                           ;psect for function _SSD_Data_write
  3036  07A9                     _SSD_Data_write:	
  3037  07A9                     i1l1678:	
  3038                           ;incstack = 0
  3039                           ; Regs used in _SSD_Data_write: [wreg-fsr0h+status,2+status,0]
  3040                           
  3041                           
  3042                           ;SSD.c: 164:     (((PORTD))=(SSD_LOT_ARR[Buffer[currentSSD]]));
  3043  07A9  1283               	bcf	3,5	;RP0=0, select bank0
  3044  07AA  1303               	bcf	3,6	;RP1=0, select bank0
  3045  07AB  0836               	movf	_currentSSD,w
  3046  07AC  3E29               	addlw	(low (_Buffer| 0))& (0+255)
  3047  07AD  0084               	movwf	4
  3048  07AE  1383               	bcf	3,7	;select IRP bank0
  3049  07AF  0800               	movf	0,w
  3050  07B0  3E52               	addlw	(low (_SSD_LOT_ARR| 0))& (0+255)
  3051  07B1  0084               	movwf	4
  3052  07B2  0800               	movf	0,w
  3053  07B3  0088               	movwf	8	;volatile
  3054  07B4                     i1l1680:	
  3055                           
  3056                           ;SSD.c: 166:     if(currentSSD == SSD_MINUTES_UNITS)
  3057  07B4  0836               	movf	_currentSSD,w
  3058  07B5  1D03               	btfss	3,2
  3059  07B6  2FB8               	goto	u99_21
  3060  07B7  2FB9               	goto	u99_20
  3061  07B8                     u99_21:	
  3062  07B8  2FC5               	goto	i1l109
  3063  07B9                     u99_20:	
  3064  07B9                     i1l1682:	
  3065                           
  3066                           ;SSD.c: 167:     {;SSD.c: 168:         (((PORTD))=((PORTD) & ~(1<<(7)))|(Second_Dot_Stat
      +                          e<<(7)));
  3067  07B9  0835               	movf	_Second_Dot_State,w
  3068  07BA  00F0               	movwf	??_SSD_Data_write
  3069  07BB  3007               	movlw	7
  3070  07BC                     u100_25:	
  3071  07BC  1003               	clrc
  3072  07BD  0DF0               	rlf	??_SSD_Data_write,f
  3073  07BE  3EFF               	addlw	-1
  3074  07BF  1D03               	skipz
  3075  07C0  2FBC               	goto	u100_25
  3076  07C1  0808               	movf	8,w	;volatile
  3077  07C2  397F               	andlw	127
  3078  07C3  0470               	iorwf	??_SSD_Data_write,w
  3079  07C4  0088               	movwf	8	;volatile
  3080  07C5                     i1l109:	
  3081  07C5  0008               	return
  3082  07C6                     __end_of_SSD_Data_write:	
  3083                           
  3084                           	psect	text17
  3085  060B                     __ptext17:	
  3086 ;; *************** function _Disp_Update *****************
  3087 ;; Defined at:
  3088 ;;		line 61 in file "Disp.c"
  3089 ;; Parameters:    Size  Location     Type
  3090 ;;		None
  3091 ;; Auto vars:     Size  Location     Type
  3092 ;;		None
  3093 ;; Return value:  Size  Location     Type
  3094 ;;                  1    wreg      void 
  3095 ;; Registers used:
  3096 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3097 ;; Tracked objects:
  3098 ;;		On entry : 0/0
  3099 ;;		On exit  : 0/0
  3100 ;;		Unchanged: 0/0
  3101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3102 ;;      Params:         0       0       0       0       0
  3103 ;;      Locals:         0       0       0       0       0
  3104 ;;      Temps:          2       0       0       0       0
  3105 ;;      Totals:         2       0       0       0       0
  3106 ;;Total ram usage:        2 bytes
  3107 ;; Hardware stack levels used:    1
  3108 ;; Hardware stack levels required when called:    2
  3109 ;; This function calls:
  3110 ;;		_CLOCK_GetMode
  3111 ;;		_DISP_Normal_Operation
  3112 ;;		_DISP_Set_Hours_Operation
  3113 ;;		_DISP_Set_Minutes_Operation
  3114 ;; This function is called by:
  3115 ;;		_TMR0_ISR
  3116 ;; This function uses a non-reentrant model
  3117 ;;
  3118                           
  3119                           
  3120                           ;psect for function _Disp_Update
  3121  060B                     _Disp_Update:	
  3122  060B                     i1l1922:	
  3123                           ;incstack = 0
  3124                           ; Regs used in _Disp_Update: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3125                           
  3126                           
  3127                           ;Disp.c: 66:     static u8_t DISP_Time_Counter = 0;;Disp.c: 67:     DISP_Time_Counter +=
      +                           (5);
  3128  060B  3005               	movlw	5
  3129  060C  00FC               	movwf	??_Disp_Update
  3130  060D  087C               	movf	??_Disp_Update,w
  3131  060E  1283               	bcf	3,5	;RP0=0, select bank0
  3132  060F  1303               	bcf	3,6	;RP1=0, select bank0
  3133  0610  07AF               	addwf	Disp_Update@DISP_Time_Counter,f
  3134                           
  3135                           ;Disp.c: 69:     if(DISP_Time_Counter != (20))
  3136  0611  3014               	movlw	20
  3137  0612  062F               	xorwf	Disp_Update@DISP_Time_Counter,w
  3138  0613  1903               	btfsc	3,2
  3139  0614  2E16               	goto	u128_21
  3140  0615  2E17               	goto	u128_20
  3141  0616                     u128_21:	
  3142  0616  2E18               	goto	i1l1926
  3143  0617                     u128_20:	
  3144  0617  2E43               	goto	i1l224
  3145  0618                     i1l1926:	
  3146                           
  3147                           ;Disp.c: 73:     DISP_Time_Counter = 0;
  3148  0618  01AF               	clrf	Disp_Update@DISP_Time_Counter
  3149                           
  3150                           ;Disp.c: 75:     switch(CLOCK_GetMode())
  3151  0619  2E2C               	goto	i1l1936
  3152  061A                     i1l1928:	
  3153                           
  3154                           ;Disp.c: 79:             DISP_Normal_Operation();
  3155  061A  120A  118A  225D  120A  118A  	fcall	_DISP_Normal_Operation
  3156                           
  3157                           ;Disp.c: 80:             break;
  3158  061F  2E43               	goto	i1l224
  3159  0620                     i1l1930:	
  3160                           
  3161                           ;Disp.c: 83:             DISP_Set_Hours_Operation();
  3162  0620  120A  118A  2126  120A  118A  	fcall	_DISP_Set_Hours_Operation
  3163                           
  3164                           ;Disp.c: 84:             break;
  3165  0625  2E43               	goto	i1l224
  3166  0626                     i1l1932:	
  3167                           
  3168                           ;Disp.c: 87:             DISP_Set_Minutes_Operation();
  3169  0626  120A  118A  21C5  120A  118A  	fcall	_DISP_Set_Minutes_Operation
  3170                           
  3171                           ;Disp.c: 88:             break;
  3172  062B  2E43               	goto	i1l224
  3173  062C                     i1l1936:	
  3174  062C  120A  118A  27FB  120A  118A  	fcall	_CLOCK_GetMode
  3175  0631  00FC               	movwf	??_Disp_Update
  3176  0632  01FD               	clrf	??_Disp_Update+1
  3177                           
  3178                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3179                           ; Switch size 1, requested type "simple"
  3180                           ; Number of cases is 1, Range of values is 0 to 0
  3181                           ; switch strategies available:
  3182                           ; Name         Instructions Cycles
  3183                           ; simple_byte            4     3 (average)
  3184                           ; direct_byte           11     8 (fixed)
  3185                           ; jumptable            260     6 (fixed)
  3186                           ;	Chosen strategy is simple_byte
  3187  0633  087D               	movf	??_Disp_Update+1,w
  3188  0634  3A00               	xorlw	0	; case 0
  3189  0635  1903               	skipnz
  3190  0636  2E38               	goto	i1l2102
  3191  0637  2E43               	goto	i1l224
  3192  0638                     i1l2102:	
  3193                           
  3194                           ; Switch size 1, requested type "simple"
  3195                           ; Number of cases is 3, Range of values is 0 to 2
  3196                           ; switch strategies available:
  3197                           ; Name         Instructions Cycles
  3198                           ; simple_byte           10     6 (average)
  3199                           ; direct_byte           17     8 (fixed)
  3200                           ; jumptable            260     6 (fixed)
  3201                           ;	Chosen strategy is simple_byte
  3202  0638  087C               	movf	??_Disp_Update,w
  3203  0639  3A00               	xorlw	0	; case 0
  3204  063A  1903               	skipnz
  3205  063B  2E1A               	goto	i1l1928
  3206  063C  3A01               	xorlw	1	; case 1
  3207  063D  1903               	skipnz
  3208  063E  2E20               	goto	i1l1930
  3209  063F  3A03               	xorlw	3	; case 2
  3210  0640  1903               	skipnz
  3211  0641  2E26               	goto	i1l1932
  3212  0642  2E43               	goto	i1l224
  3213  0643                     i1l224:	
  3214  0643  0008               	return
  3215  0644                     __end_of_Disp_Update:	
  3216                           
  3217                           	psect	text18
  3218  01C5                     __ptext18:	
  3219 ;; *************** function _DISP_Set_Minutes_Operation *****************
  3220 ;; Defined at:
  3221 ;;		line 157 in file "Disp.c"
  3222 ;; Parameters:    Size  Location     Type
  3223 ;;		None
  3224 ;; Auto vars:     Size  Location     Type
  3225 ;;  tt              5    3[BANK0 ] struct .
  3226 ;; Return value:  Size  Location     Type
  3227 ;;                  1    wreg      void 
  3228 ;; Registers used:
  3229 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3230 ;; Tracked objects:
  3231 ;;		On entry : 0/0
  3232 ;;		On exit  : 0/0
  3233 ;;		Unchanged: 0/0
  3234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3235 ;;      Params:         0       0       0       0       0
  3236 ;;      Locals:         0       5       0       0       0
  3237 ;;      Temps:          0       3       0       0       0
  3238 ;;      Totals:         0       8       0       0       0
  3239 ;;Total ram usage:        8 bytes
  3240 ;; Hardware stack levels used:    1
  3241 ;; Hardware stack levels required when called:    1
  3242 ;; This function calls:
  3243 ;;		_CLOCK_GetTime
  3244 ;;		___awdiv
  3245 ;;		___awmod
  3246 ;;		i1_SSD_Set_Symbol
  3247 ;; This function is called by:
  3248 ;;		_Disp_Update
  3249 ;; This function uses a non-reentrant model
  3250 ;;
  3251                           
  3252                           
  3253                           ;psect for function _DISP_Set_Minutes_Operation
  3254  01C5                     _DISP_Set_Minutes_Operation:	
  3255  01C5                     i1l1792:	
  3256                           ;incstack = 0
  3257                           ; Regs used in _DISP_Set_Minutes_Operation: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3258                           
  3259                           
  3260                           ;Disp.c: 161:     Time_t tt;;Disp.c: 162:     CLOCK_GetTime(&tt);
  3261  01C5  303F               	movlw	(low (DISP_Set_Minutes_Operation@tt| 0))& (0+255)
  3262  01C6  120A  118A  2789  120A  118A  	fcall	_CLOCK_GetTime
  3263                           
  3264                           ;Disp.c: 165:     SSD_Set_Symbol(tt.hours/10,SSD_HOURS_TENS);
  3265  01CB  3003               	movlw	3
  3266  01CC  1283               	bcf	3,5	;RP0=0, select bank0
  3267  01CD  1303               	bcf	3,6	;RP1=0, select bank0
  3268  01CE  00BC               	movwf	??_DISP_Set_Minutes_Operation
  3269  01CF  083C               	movf	??_DISP_Set_Minutes_Operation,w
  3270  01D0  00F9               	movwf	i1SSD_Set_Symbol@index
  3271  01D1  300A               	movlw	10
  3272  01D2  00F0               	movwf	___awdiv@divisor
  3273  01D3  3000               	movlw	0
  3274  01D4  00F1               	movwf	___awdiv@divisor+1
  3275  01D5  083F               	movf	DISP_Set_Minutes_Operation@tt,w
  3276  01D6  00BD               	movwf	??_DISP_Set_Minutes_Operation+1
  3277  01D7  01BE               	clrf	??_DISP_Set_Minutes_Operation+2
  3278  01D8  083D               	movf	??_DISP_Set_Minutes_Operation+1,w
  3279  01D9  00F2               	movwf	___awdiv@dividend
  3280  01DA  083E               	movf	??_DISP_Set_Minutes_Operation+2,w
  3281  01DB  00F3               	movwf	___awdiv@dividend+1
  3282  01DC  120A  118A  2355  120A  118A  	fcall	___awdiv
  3283  01E1  0870               	movf	?___awdiv,w
  3284  01E2  120A  158A  27CD  120A  118A  	fcall	i1_SSD_Set_Symbol
  3285                           
  3286                           ;Disp.c: 166:     SSD_Set_Symbol(tt.hours%10,SSD_HOURS_UNITS);
  3287  01E7  3002               	movlw	2
  3288  01E8  1283               	bcf	3,5	;RP0=0, select bank0
  3289  01E9  1303               	bcf	3,6	;RP1=0, select bank0
  3290  01EA  00BC               	movwf	??_DISP_Set_Minutes_Operation
  3291  01EB  083C               	movf	??_DISP_Set_Minutes_Operation,w
  3292  01EC  00F9               	movwf	i1SSD_Set_Symbol@index
  3293  01ED  300A               	movlw	10
  3294  01EE  00F0               	movwf	___awmod@divisor
  3295  01EF  3000               	movlw	0
  3296  01F0  00F1               	movwf	___awmod@divisor+1
  3297  01F1  083F               	movf	DISP_Set_Minutes_Operation@tt,w
  3298  01F2  00BD               	movwf	??_DISP_Set_Minutes_Operation+1
  3299  01F3  01BE               	clrf	??_DISP_Set_Minutes_Operation+2
  3300  01F4  083D               	movf	??_DISP_Set_Minutes_Operation+1,w
  3301  01F5  00F2               	movwf	___awmod@dividend
  3302  01F6  083E               	movf	??_DISP_Set_Minutes_Operation+2,w
  3303  01F7  00F3               	movwf	___awmod@dividend+1
  3304  01F8  120A  118A  24E1  120A  118A  	fcall	___awmod
  3305  01FD  0870               	movf	?___awmod,w
  3306  01FE  120A  158A  27CD  120A  118A  	fcall	i1_SSD_Set_Symbol
  3307  0203                     i1l1794:	
  3308                           
  3309                           ;Disp.c: 174:     if(Disp_Blink_counter < 25)
  3310  0203  3019               	movlw	25
  3311  0204  1283               	bcf	3,5	;RP0=0, select bank0
  3312  0205  1303               	bcf	3,6	;RP1=0, select bank0
  3313  0206  0230               	subwf	_Disp_Blink_counter,w
  3314  0207  1803               	skipnc
  3315  0208  2A0A               	goto	u119_21
  3316  0209  2A0B               	goto	u119_20
  3317  020A                     u119_21:	
  3318  020A  2A3C               	goto	i1l1798
  3319  020B                     u119_20:	
  3320  020B                     i1l1796:	
  3321                           
  3322                           ;Disp.c: 175:     {;Disp.c: 177:         SSD_Set_Symbol(tt.minuts/10,SSD_MINUTES_TENS);
  3323  020B  01F9               	clrf	i1SSD_Set_Symbol@index
  3324  020C  0AF9               	incf	i1SSD_Set_Symbol@index,f
  3325  020D  300A               	movlw	10
  3326  020E  00F0               	movwf	___awdiv@divisor
  3327  020F  3000               	movlw	0
  3328  0210  00F1               	movwf	___awdiv@divisor+1
  3329  0211  0840               	movf	DISP_Set_Minutes_Operation@tt+1,w
  3330  0212  00BC               	movwf	??_DISP_Set_Minutes_Operation
  3331  0213  01BD               	clrf	??_DISP_Set_Minutes_Operation+1
  3332  0214  083C               	movf	??_DISP_Set_Minutes_Operation,w
  3333  0215  00F2               	movwf	___awdiv@dividend
  3334  0216  083D               	movf	??_DISP_Set_Minutes_Operation+1,w
  3335  0217  00F3               	movwf	___awdiv@dividend+1
  3336  0218  120A  118A  2355  120A  118A  	fcall	___awdiv
  3337  021D  0870               	movf	?___awdiv,w
  3338  021E  120A  158A  27CD  120A  118A  	fcall	i1_SSD_Set_Symbol
  3339                           
  3340                           ;Disp.c: 178:         SSD_Set_Symbol(tt.minuts%10,SSD_MINUTES_UNITS);
  3341  0223  01F9               	clrf	i1SSD_Set_Symbol@index
  3342  0224  300A               	movlw	10
  3343  0225  00F0               	movwf	___awmod@divisor
  3344  0226  3000               	movlw	0
  3345  0227  00F1               	movwf	___awmod@divisor+1
  3346  0228  1283               	bcf	3,5	;RP0=0, select bank0
  3347  0229  1303               	bcf	3,6	;RP1=0, select bank0
  3348  022A  0840               	movf	DISP_Set_Minutes_Operation@tt+1,w
  3349  022B  00BC               	movwf	??_DISP_Set_Minutes_Operation
  3350  022C  01BD               	clrf	??_DISP_Set_Minutes_Operation+1
  3351  022D  083C               	movf	??_DISP_Set_Minutes_Operation,w
  3352  022E  00F2               	movwf	___awmod@dividend
  3353  022F  083D               	movf	??_DISP_Set_Minutes_Operation+1,w
  3354  0230  00F3               	movwf	___awmod@dividend+1
  3355  0231  120A  118A  24E1  120A  118A  	fcall	___awmod
  3356  0236  0870               	movf	?___awmod,w
  3357  0237  120A  158A  27CD  120A  118A  	fcall	i1_SSD_Set_Symbol
  3358  023C                     i1l1798:	
  3359                           
  3360                           ;Disp.c: 180:     if(Disp_Blink_counter>25)
  3361  023C  301A               	movlw	26
  3362  023D  1283               	bcf	3,5	;RP0=0, select bank0
  3363  023E  1303               	bcf	3,6	;RP1=0, select bank0
  3364  023F  0230               	subwf	_Disp_Blink_counter,w
  3365  0240  1C03               	skipc
  3366  0241  2A43               	goto	u120_21
  3367  0242  2A44               	goto	u120_20
  3368  0243                     u120_21:	
  3369  0243  2A53               	goto	i1l1802
  3370  0244                     u120_20:	
  3371  0244                     i1l1800:	
  3372                           
  3373                           ;Disp.c: 181:     {;Disp.c: 183:         SSD_Set_Symbol(SSD_NULL,SSD_MINUTES_TENS);
  3374  0244  01F9               	clrf	i1SSD_Set_Symbol@index
  3375  0245  0AF9               	incf	i1SSD_Set_Symbol@index,f
  3376  0246  300A               	movlw	10
  3377  0247  120A  158A  27CD  120A  118A  	fcall	i1_SSD_Set_Symbol
  3378                           
  3379                           ;Disp.c: 184:         SSD_Set_Symbol(SSD_NULL,SSD_MINUTES_UNITS);
  3380  024C  01F9               	clrf	i1SSD_Set_Symbol@index
  3381  024D  300A               	movlw	10
  3382  024E  120A  158A  27CD  120A  118A  	fcall	i1_SSD_Set_Symbol
  3383  0253                     i1l1802:	
  3384                           
  3385                           ;Disp.c: 186:     if(Disp_Blink_counter>=50)
  3386  0253  3032               	movlw	50
  3387  0254  1283               	bcf	3,5	;RP0=0, select bank0
  3388  0255  1303               	bcf	3,6	;RP1=0, select bank0
  3389  0256  0230               	subwf	_Disp_Blink_counter,w
  3390  0257  1C03               	skipc
  3391  0258  2A5A               	goto	u121_21
  3392  0259  2A5B               	goto	u121_20
  3393  025A                     u121_21:	
  3394  025A  2A5C               	goto	i1l245
  3395  025B                     u121_20:	
  3396  025B                     i1l1804:	
  3397                           
  3398                           ;Disp.c: 187:     {;Disp.c: 189:         Disp_Blink_counter = 0;
  3399  025B  01B0               	clrf	_Disp_Blink_counter
  3400  025C                     i1l245:	
  3401  025C  0008               	return
  3402  025D                     __end_of_DISP_Set_Minutes_Operation:	
  3403                           
  3404                           	psect	text19
  3405  0126                     __ptext19:	
  3406 ;; *************** function _DISP_Set_Hours_Operation *****************
  3407 ;; Defined at:
  3408 ;;		line 127 in file "Disp.c"
  3409 ;; Parameters:    Size  Location     Type
  3410 ;;		None
  3411 ;; Auto vars:     Size  Location     Type
  3412 ;;  tt              5    3[BANK0 ] struct .
  3413 ;; Return value:  Size  Location     Type
  3414 ;;                  1    wreg      void 
  3415 ;; Registers used:
  3416 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3417 ;; Tracked objects:
  3418 ;;		On entry : 0/0
  3419 ;;		On exit  : 0/0
  3420 ;;		Unchanged: 0/0
  3421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3422 ;;      Params:         0       0       0       0       0
  3423 ;;      Locals:         0       5       0       0       0
  3424 ;;      Temps:          0       3       0       0       0
  3425 ;;      Totals:         0       8       0       0       0
  3426 ;;Total ram usage:        8 bytes
  3427 ;; Hardware stack levels used:    1
  3428 ;; Hardware stack levels required when called:    1
  3429 ;; This function calls:
  3430 ;;		_CLOCK_GetTime
  3431 ;;		___awdiv
  3432 ;;		___awmod
  3433 ;;		i1_SSD_Set_Symbol
  3434 ;; This function is called by:
  3435 ;;		_Disp_Update
  3436 ;; This function uses a non-reentrant model
  3437 ;;
  3438                           
  3439                           
  3440                           ;psect for function _DISP_Set_Hours_Operation
  3441  0126                     _DISP_Set_Hours_Operation:	
  3442  0126                     i1l1778:	
  3443                           ;incstack = 0
  3444                           ; Regs used in _DISP_Set_Hours_Operation: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3445                           
  3446                           
  3447                           ;Disp.c: 131:     Time_t tt;;Disp.c: 132:     CLOCK_GetTime(&tt);
  3448  0126  303F               	movlw	(low (DISP_Set_Hours_Operation@tt| 0))& (0+255)
  3449  0127  120A  118A  2789  120A  118A  	fcall	_CLOCK_GetTime
  3450                           
  3451                           ;Disp.c: 134:     SSD_Set_Symbol(tt.minuts/10,SSD_MINUTES_TENS);
  3452  012C  01F9               	clrf	i1SSD_Set_Symbol@index
  3453  012D  0AF9               	incf	i1SSD_Set_Symbol@index,f
  3454  012E  300A               	movlw	10
  3455  012F  00F0               	movwf	___awdiv@divisor
  3456  0130  3000               	movlw	0
  3457  0131  00F1               	movwf	___awdiv@divisor+1
  3458  0132  1283               	bcf	3,5	;RP0=0, select bank0
  3459  0133  1303               	bcf	3,6	;RP1=0, select bank0
  3460  0134  0840               	movf	DISP_Set_Hours_Operation@tt+1,w
  3461  0135  00BC               	movwf	??_DISP_Set_Hours_Operation
  3462  0136  01BD               	clrf	??_DISP_Set_Hours_Operation+1
  3463  0137  083C               	movf	??_DISP_Set_Hours_Operation,w
  3464  0138  00F2               	movwf	___awdiv@dividend
  3465  0139  083D               	movf	??_DISP_Set_Hours_Operation+1,w
  3466  013A  00F3               	movwf	___awdiv@dividend+1
  3467  013B  120A  118A  2355  120A  118A  	fcall	___awdiv
  3468  0140  0870               	movf	?___awdiv,w
  3469  0141  120A  158A  27CD  120A  118A  	fcall	i1_SSD_Set_Symbol
  3470                           
  3471                           ;Disp.c: 135:     SSD_Set_Symbol(tt.minuts%10,SSD_MINUTES_UNITS);
  3472  0146  01F9               	clrf	i1SSD_Set_Symbol@index
  3473  0147  300A               	movlw	10
  3474  0148  00F0               	movwf	___awmod@divisor
  3475  0149  3000               	movlw	0
  3476  014A  00F1               	movwf	___awmod@divisor+1
  3477  014B  1283               	bcf	3,5	;RP0=0, select bank0
  3478  014C  1303               	bcf	3,6	;RP1=0, select bank0
  3479  014D  0840               	movf	DISP_Set_Hours_Operation@tt+1,w
  3480  014E  00BC               	movwf	??_DISP_Set_Hours_Operation
  3481  014F  01BD               	clrf	??_DISP_Set_Hours_Operation+1
  3482  0150  083C               	movf	??_DISP_Set_Hours_Operation,w
  3483  0151  00F2               	movwf	___awmod@dividend
  3484  0152  083D               	movf	??_DISP_Set_Hours_Operation+1,w
  3485  0153  00F3               	movwf	___awmod@dividend+1
  3486  0154  120A  118A  24E1  120A  118A  	fcall	___awmod
  3487  0159  0870               	movf	?___awmod,w
  3488  015A  120A  158A  27CD  120A  118A  	fcall	i1_SSD_Set_Symbol
  3489  015F                     i1l1780:	
  3490                           
  3491                           ;Disp.c: 136:     if(Disp_Blink_counter < 25)
  3492  015F  3019               	movlw	25
  3493  0160  1283               	bcf	3,5	;RP0=0, select bank0
  3494  0161  1303               	bcf	3,6	;RP1=0, select bank0
  3495  0162  0230               	subwf	_Disp_Blink_counter,w
  3496  0163  1803               	skipnc
  3497  0164  2966               	goto	u116_21
  3498  0165  2967               	goto	u116_20
  3499  0166                     u116_21:	
  3500  0166  299D               	goto	i1l1784
  3501  0167                     u116_20:	
  3502  0167                     i1l1782:	
  3503                           
  3504                           ;Disp.c: 137:     {;Disp.c: 139:         SSD_Set_Symbol(tt.hours/10,SSD_HOURS_TENS);
  3505  0167  3003               	movlw	3
  3506  0168  00BC               	movwf	??_DISP_Set_Hours_Operation
  3507  0169  083C               	movf	??_DISP_Set_Hours_Operation,w
  3508  016A  00F9               	movwf	i1SSD_Set_Symbol@index
  3509  016B  300A               	movlw	10
  3510  016C  00F0               	movwf	___awdiv@divisor
  3511  016D  3000               	movlw	0
  3512  016E  00F1               	movwf	___awdiv@divisor+1
  3513  016F  083F               	movf	DISP_Set_Hours_Operation@tt,w
  3514  0170  00BD               	movwf	??_DISP_Set_Hours_Operation+1
  3515  0171  01BE               	clrf	??_DISP_Set_Hours_Operation+2
  3516  0172  083D               	movf	??_DISP_Set_Hours_Operation+1,w
  3517  0173  00F2               	movwf	___awdiv@dividend
  3518  0174  083E               	movf	??_DISP_Set_Hours_Operation+2,w
  3519  0175  00F3               	movwf	___awdiv@dividend+1
  3520  0176  120A  118A  2355  120A  118A  	fcall	___awdiv
  3521  017B  0870               	movf	?___awdiv,w
  3522  017C  120A  158A  27CD  120A  118A  	fcall	i1_SSD_Set_Symbol
  3523                           
  3524                           ;Disp.c: 140:         SSD_Set_Symbol(tt.hours%10,SSD_HOURS_UNITS);
  3525  0181  3002               	movlw	2
  3526  0182  1283               	bcf	3,5	;RP0=0, select bank0
  3527  0183  1303               	bcf	3,6	;RP1=0, select bank0
  3528  0184  00BC               	movwf	??_DISP_Set_Hours_Operation
  3529  0185  083C               	movf	??_DISP_Set_Hours_Operation,w
  3530  0186  00F9               	movwf	i1SSD_Set_Symbol@index
  3531  0187  300A               	movlw	10
  3532  0188  00F0               	movwf	___awmod@divisor
  3533  0189  3000               	movlw	0
  3534  018A  00F1               	movwf	___awmod@divisor+1
  3535  018B  083F               	movf	DISP_Set_Hours_Operation@tt,w
  3536  018C  00BD               	movwf	??_DISP_Set_Hours_Operation+1
  3537  018D  01BE               	clrf	??_DISP_Set_Hours_Operation+2
  3538  018E  083D               	movf	??_DISP_Set_Hours_Operation+1,w
  3539  018F  00F2               	movwf	___awmod@dividend
  3540  0190  083E               	movf	??_DISP_Set_Hours_Operation+2,w
  3541  0191  00F3               	movwf	___awmod@dividend+1
  3542  0192  120A  118A  24E1  120A  118A  	fcall	___awmod
  3543  0197  0870               	movf	?___awmod,w
  3544  0198  120A  158A  27CD  120A  118A  	fcall	i1_SSD_Set_Symbol
  3545  019D                     i1l1784:	
  3546                           
  3547                           ;Disp.c: 142:     if(Disp_Blink_counter>25)
  3548  019D  301A               	movlw	26
  3549  019E  1283               	bcf	3,5	;RP0=0, select bank0
  3550  019F  1303               	bcf	3,6	;RP1=0, select bank0
  3551  01A0  0230               	subwf	_Disp_Blink_counter,w
  3552  01A1  1C03               	skipc
  3553  01A2  29A4               	goto	u117_21
  3554  01A3  29A5               	goto	u117_20
  3555  01A4                     u117_21:	
  3556  01A4  29BB               	goto	i1l1788
  3557  01A5                     u117_20:	
  3558  01A5                     i1l1786:	
  3559                           
  3560                           ;Disp.c: 143:     {;Disp.c: 145:         SSD_Set_Symbol(SSD_NULL,SSD_HOURS_TENS);
  3561  01A5  3003               	movlw	3
  3562  01A6  00BC               	movwf	??_DISP_Set_Hours_Operation
  3563  01A7  083C               	movf	??_DISP_Set_Hours_Operation,w
  3564  01A8  00F9               	movwf	i1SSD_Set_Symbol@index
  3565  01A9  300A               	movlw	10
  3566  01AA  120A  158A  27CD  120A  118A  	fcall	i1_SSD_Set_Symbol
  3567                           
  3568                           ;Disp.c: 146:         SSD_Set_Symbol(SSD_NULL,SSD_HOURS_UNITS);
  3569  01AF  3002               	movlw	2
  3570  01B0  1283               	bcf	3,5	;RP0=0, select bank0
  3571  01B1  1303               	bcf	3,6	;RP1=0, select bank0
  3572  01B2  00BC               	movwf	??_DISP_Set_Hours_Operation
  3573  01B3  083C               	movf	??_DISP_Set_Hours_Operation,w
  3574  01B4  00F9               	movwf	i1SSD_Set_Symbol@index
  3575  01B5  300A               	movlw	10
  3576  01B6  120A  158A  27CD  120A  118A  	fcall	i1_SSD_Set_Symbol
  3577  01BB                     i1l1788:	
  3578                           
  3579                           ;Disp.c: 148:     if(Disp_Blink_counter>=50)
  3580  01BB  3032               	movlw	50
  3581  01BC  1283               	bcf	3,5	;RP0=0, select bank0
  3582  01BD  1303               	bcf	3,6	;RP1=0, select bank0
  3583  01BE  0230               	subwf	_Disp_Blink_counter,w
  3584  01BF  1C03               	skipc
  3585  01C0  29C2               	goto	u118_21
  3586  01C1  29C3               	goto	u118_20
  3587  01C2                     u118_21:	
  3588  01C2  29C4               	goto	i1l239
  3589  01C3                     u118_20:	
  3590  01C3                     i1l1790:	
  3591                           
  3592                           ;Disp.c: 149:     {;Disp.c: 151:         Disp_Blink_counter = 0;
  3593  01C3  01B0               	clrf	_Disp_Blink_counter
  3594  01C4                     i1l239:	
  3595  01C4  0008               	return
  3596  01C5                     __end_of_DISP_Set_Hours_Operation:	
  3597                           
  3598                           	psect	text20
  3599  025D                     __ptext20:	
  3600 ;; *************** function _DISP_Normal_Operation *****************
  3601 ;; Defined at:
  3602 ;;		line 98 in file "Disp.c"
  3603 ;; Parameters:    Size  Location     Type
  3604 ;;		None
  3605 ;; Auto vars:     Size  Location     Type
  3606 ;;  tt              5    3[BANK0 ] struct .
  3607 ;; Return value:  Size  Location     Type
  3608 ;;                  1    wreg      void 
  3609 ;; Registers used:
  3610 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3611 ;; Tracked objects:
  3612 ;;		On entry : 0/0
  3613 ;;		On exit  : 0/0
  3614 ;;		Unchanged: 0/0
  3615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3616 ;;      Params:         0       0       0       0       0
  3617 ;;      Locals:         0       5       0       0       0
  3618 ;;      Temps:          0       3       0       0       0
  3619 ;;      Totals:         0       8       0       0       0
  3620 ;;Total ram usage:        8 bytes
  3621 ;; Hardware stack levels used:    1
  3622 ;; Hardware stack levels required when called:    1
  3623 ;; This function calls:
  3624 ;;		_CLOCK_GetTime
  3625 ;;		_SSD_Toggle_Second_Dot
  3626 ;;		___awdiv
  3627 ;;		___awmod
  3628 ;;		i1_SSD_Set_Symbol
  3629 ;; This function is called by:
  3630 ;;		_Disp_Update
  3631 ;; This function uses a non-reentrant model
  3632 ;;
  3633                           
  3634                           
  3635                           ;psect for function _DISP_Normal_Operation
  3636  025D                     _DISP_Normal_Operation:	
  3637  025D                     i1l1768:	
  3638                           ;incstack = 0
  3639                           ; Regs used in _DISP_Normal_Operation: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3640                           
  3641                           
  3642                           ;Disp.c: 101:     Time_t tt;;Disp.c: 102:     CLOCK_GetTime(&tt);
  3643  025D  303F               	movlw	(low (DISP_Normal_Operation@tt| 0))& (0+255)
  3644  025E  120A  118A  2789  120A  118A  	fcall	_CLOCK_GetTime
  3645                           
  3646                           ;Disp.c: 105:     SSD_Set_Symbol(tt.hours/10,SSD_HOURS_TENS);
  3647  0263  3003               	movlw	3
  3648  0264  1283               	bcf	3,5	;RP0=0, select bank0
  3649  0265  1303               	bcf	3,6	;RP1=0, select bank0
  3650  0266  00BC               	movwf	??_DISP_Normal_Operation
  3651  0267  083C               	movf	??_DISP_Normal_Operation,w
  3652  0268  00F9               	movwf	i1SSD_Set_Symbol@index
  3653  0269  300A               	movlw	10
  3654  026A  00F0               	movwf	___awdiv@divisor
  3655  026B  3000               	movlw	0
  3656  026C  00F1               	movwf	___awdiv@divisor+1
  3657  026D  083F               	movf	DISP_Normal_Operation@tt,w
  3658  026E  00BD               	movwf	??_DISP_Normal_Operation+1
  3659  026F  01BE               	clrf	??_DISP_Normal_Operation+2
  3660  0270  083D               	movf	??_DISP_Normal_Operation+1,w
  3661  0271  00F2               	movwf	___awdiv@dividend
  3662  0272  083E               	movf	??_DISP_Normal_Operation+2,w
  3663  0273  00F3               	movwf	___awdiv@dividend+1
  3664  0274  120A  118A  2355  120A  118A  	fcall	___awdiv
  3665  0279  0870               	movf	?___awdiv,w
  3666  027A  120A  158A  27CD  120A  118A  	fcall	i1_SSD_Set_Symbol
  3667                           
  3668                           ;Disp.c: 106:     SSD_Set_Symbol(tt.hours%10,SSD_HOURS_UNITS);
  3669  027F  3002               	movlw	2
  3670  0280  1283               	bcf	3,5	;RP0=0, select bank0
  3671  0281  1303               	bcf	3,6	;RP1=0, select bank0
  3672  0282  00BC               	movwf	??_DISP_Normal_Operation
  3673  0283  083C               	movf	??_DISP_Normal_Operation,w
  3674  0284  00F9               	movwf	i1SSD_Set_Symbol@index
  3675  0285  300A               	movlw	10
  3676  0286  00F0               	movwf	___awmod@divisor
  3677  0287  3000               	movlw	0
  3678  0288  00F1               	movwf	___awmod@divisor+1
  3679  0289  083F               	movf	DISP_Normal_Operation@tt,w
  3680  028A  00BD               	movwf	??_DISP_Normal_Operation+1
  3681  028B  01BE               	clrf	??_DISP_Normal_Operation+2
  3682  028C  083D               	movf	??_DISP_Normal_Operation+1,w
  3683  028D  00F2               	movwf	___awmod@dividend
  3684  028E  083E               	movf	??_DISP_Normal_Operation+2,w
  3685  028F  00F3               	movwf	___awmod@dividend+1
  3686  0290  120A  118A  24E1  120A  118A  	fcall	___awmod
  3687  0295  0870               	movf	?___awmod,w
  3688  0296  120A  158A  27CD  120A  118A  	fcall	i1_SSD_Set_Symbol
  3689                           
  3690                           ;Disp.c: 108:     SSD_Set_Symbol(tt.minuts/10,SSD_MINUTES_TENS);
  3691  029B  01F9               	clrf	i1SSD_Set_Symbol@index
  3692  029C  0AF9               	incf	i1SSD_Set_Symbol@index,f
  3693  029D  300A               	movlw	10
  3694  029E  00F0               	movwf	___awdiv@divisor
  3695  029F  3000               	movlw	0
  3696  02A0  00F1               	movwf	___awdiv@divisor+1
  3697  02A1  1283               	bcf	3,5	;RP0=0, select bank0
  3698  02A2  1303               	bcf	3,6	;RP1=0, select bank0
  3699  02A3  0840               	movf	DISP_Normal_Operation@tt+1,w
  3700  02A4  00BC               	movwf	??_DISP_Normal_Operation
  3701  02A5  01BD               	clrf	??_DISP_Normal_Operation+1
  3702  02A6  083C               	movf	??_DISP_Normal_Operation,w
  3703  02A7  00F2               	movwf	___awdiv@dividend
  3704  02A8  083D               	movf	??_DISP_Normal_Operation+1,w
  3705  02A9  00F3               	movwf	___awdiv@dividend+1
  3706  02AA  120A  118A  2355  120A  118A  	fcall	___awdiv
  3707  02AF  0870               	movf	?___awdiv,w
  3708  02B0  120A  158A  27CD  120A  118A  	fcall	i1_SSD_Set_Symbol
  3709                           
  3710                           ;Disp.c: 109:     SSD_Set_Symbol(tt.minuts%10,SSD_MINUTES_UNITS);
  3711  02B5  01F9               	clrf	i1SSD_Set_Symbol@index
  3712  02B6  300A               	movlw	10
  3713  02B7  00F0               	movwf	___awmod@divisor
  3714  02B8  3000               	movlw	0
  3715  02B9  00F1               	movwf	___awmod@divisor+1
  3716  02BA  1283               	bcf	3,5	;RP0=0, select bank0
  3717  02BB  1303               	bcf	3,6	;RP1=0, select bank0
  3718  02BC  0840               	movf	DISP_Normal_Operation@tt+1,w
  3719  02BD  00BC               	movwf	??_DISP_Normal_Operation
  3720  02BE  01BD               	clrf	??_DISP_Normal_Operation+1
  3721  02BF  083C               	movf	??_DISP_Normal_Operation,w
  3722  02C0  00F2               	movwf	___awmod@dividend
  3723  02C1  083D               	movf	??_DISP_Normal_Operation+1,w
  3724  02C2  00F3               	movwf	___awmod@dividend+1
  3725  02C3  120A  118A  24E1  120A  118A  	fcall	___awmod
  3726  02C8  0870               	movf	?___awmod,w
  3727  02C9  120A  158A  27CD  120A  118A  	fcall	i1_SSD_Set_Symbol
  3728  02CE                     i1l1770:	
  3729                           
  3730                           ;Disp.c: 110:     Disp_Blink_counter++;
  3731  02CE  3001               	movlw	1
  3732  02CF  1283               	bcf	3,5	;RP0=0, select bank0
  3733  02D0  1303               	bcf	3,6	;RP1=0, select bank0
  3734  02D1  00BC               	movwf	??_DISP_Normal_Operation
  3735  02D2  083C               	movf	??_DISP_Normal_Operation,w
  3736  02D3  07B0               	addwf	_Disp_Blink_counter,f
  3737  02D4                     i1l1772:	
  3738                           
  3739                           ;Disp.c: 111:     if(Disp_Blink_counter>= 25)
  3740  02D4  3019               	movlw	25
  3741  02D5  0230               	subwf	_Disp_Blink_counter,w
  3742  02D6  1C03               	skipc
  3743  02D7  2AD9               	goto	u115_21
  3744  02D8  2ADA               	goto	u115_20
  3745  02D9                     u115_21:	
  3746  02D9  2AE2               	goto	i1l233
  3747  02DA                     u115_20:	
  3748  02DA                     i1l1774:	
  3749                           
  3750                           ;Disp.c: 112:     {;Disp.c: 113:         SSD_Toggle_Second_Dot();
  3751  02DA  120A  158A  27AE  120A  118A  	fcall	_SSD_Toggle_Second_Dot
  3752  02DF                     i1l1776:	
  3753                           
  3754                           ;Disp.c: 114:         Disp_Blink_counter = 0;
  3755  02DF  1283               	bcf	3,5	;RP0=0, select bank0
  3756  02E0  1303               	bcf	3,6	;RP1=0, select bank0
  3757  02E1  01B0               	clrf	_Disp_Blink_counter
  3758  02E2                     i1l233:	
  3759  02E2  0008               	return
  3760  02E3                     __end_of_DISP_Normal_Operation:	
  3761                           
  3762                           	psect	text21
  3763  0FCD                     __ptext21:	
  3764 ;; *************** function i1_SSD_Set_Symbol *****************
  3765 ;; Defined at:
  3766 ;;		line 87 in file "SSD.c"
  3767 ;; Parameters:    Size  Location     Type
  3768 ;;  symbol          1    wreg     enum E859
  3769 ;;  index           1    9[COMMON] enum E872
  3770 ;; Auto vars:     Size  Location     Type
  3771 ;;  symbol          1   11[COMMON] enum E859
  3772 ;; Return value:  Size  Location     Type
  3773 ;;                  1    wreg      void 
  3774 ;; Registers used:
  3775 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3776 ;; Tracked objects:
  3777 ;;		On entry : 0/0
  3778 ;;		On exit  : 0/0
  3779 ;;		Unchanged: 0/0
  3780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3781 ;;      Params:         1       0       0       0       0
  3782 ;;      Locals:         1       0       0       0       0
  3783 ;;      Temps:          1       0       0       0       0
  3784 ;;      Totals:         3       0       0       0       0
  3785 ;;Total ram usage:        3 bytes
  3786 ;; Hardware stack levels used:    1
  3787 ;; This function calls:
  3788 ;;		Nothing
  3789 ;; This function is called by:
  3790 ;;		_DISP_Normal_Operation
  3791 ;;		_DISP_Set_Hours_Operation
  3792 ;;		_DISP_Set_Minutes_Operation
  3793 ;; This function uses a non-reentrant model
  3794 ;;
  3795                           
  3796                           
  3797                           ;psect for function i1_SSD_Set_Symbol
  3798  0FCD                     i1_SSD_Set_Symbol:	
  3799                           
  3800                           ;incstack = 0
  3801                           ; Regs used in i1_SSD_Set_Symbol: [wreg-fsr0h+status,2+status,0]
  3802                           ;i1SSD_Set_Symbol@symbol stored from wreg
  3803  0FCD  00FB               	movwf	i1SSD_Set_Symbol@symbol
  3804  0FCE                     i1l1644:	
  3805                           
  3806                           ;SSD.c: 87: void SSD_Set_Symbol(SSD_Symbol_t symbol,SSD_t index);SSD.c: 88: {;SSD.c: 90:
      +                               Buffer[index] = symbol;
  3807  0FCE  087B               	movf	i1SSD_Set_Symbol@symbol,w
  3808  0FCF  00FA               	movwf	??i1_SSD_Set_Symbol
  3809  0FD0  0879               	movf	i1SSD_Set_Symbol@index,w
  3810  0FD1  3E29               	addlw	(low (_Buffer| 0))& (0+255)
  3811  0FD2  0084               	movwf	4
  3812  0FD3  087A               	movf	??i1_SSD_Set_Symbol,w
  3813  0FD4  1383               	bcf	3,7	;select IRP bank0
  3814  0FD5  0080               	movwf	0
  3815  0FD6                     i1l78:	
  3816  0FD6  0008               	return
  3817  0FD7                     __end_ofi1_SSD_Set_Symbol:	
  3818                           
  3819                           	psect	text22
  3820  04E1                     __ptext22:	
  3821 ;; *************** function ___awmod *****************
  3822 ;; Defined at:
  3823 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  3824 ;; Parameters:    Size  Location     Type
  3825 ;;  divisor         2    0[COMMON] int 
  3826 ;;  dividend        2    2[COMMON] int 
  3827 ;; Auto vars:     Size  Location     Type
  3828 ;;  sign            1    6[COMMON] unsigned char 
  3829 ;;  counter         1    5[COMMON] unsigned char 
  3830 ;; Return value:  Size  Location     Type
  3831 ;;                  2    0[COMMON] int 
  3832 ;; Registers used:
  3833 ;;		wreg, status,2, status,0
  3834 ;; Tracked objects:
  3835 ;;		On entry : 0/0
  3836 ;;		On exit  : 0/0
  3837 ;;		Unchanged: 0/0
  3838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3839 ;;      Params:         4       0       0       0       0
  3840 ;;      Locals:         2       0       0       0       0
  3841 ;;      Temps:          1       0       0       0       0
  3842 ;;      Totals:         7       0       0       0       0
  3843 ;;Total ram usage:        7 bytes
  3844 ;; Hardware stack levels used:    1
  3845 ;; This function calls:
  3846 ;;		Nothing
  3847 ;; This function is called by:
  3848 ;;		_DISP_Normal_Operation
  3849 ;;		_DISP_Set_Hours_Operation
  3850 ;;		_DISP_Set_Minutes_Operation
  3851 ;; This function uses a non-reentrant model
  3852 ;;
  3853                           
  3854                           
  3855                           ;psect for function ___awmod
  3856  04E1                     ___awmod:	
  3857  04E1                     i1l1606:	
  3858                           ;incstack = 0
  3859                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3860                           
  3861  04E1  01F6               	clrf	___awmod@sign
  3862  04E2                     i1l1608:	
  3863  04E2  1FF3               	btfss	___awmod@dividend+1,7
  3864  04E3  2CE5               	goto	u90_21
  3865  04E4  2CE6               	goto	u90_20
  3866  04E5                     u90_21:	
  3867  04E5  2CED               	goto	i1l1614
  3868  04E6                     u90_20:	
  3869  04E6                     i1l1610:	
  3870  04E6  09F2               	comf	___awmod@dividend,f
  3871  04E7  09F3               	comf	___awmod@dividend+1,f
  3872  04E8  0AF2               	incf	___awmod@dividend,f
  3873  04E9  1903               	skipnz
  3874  04EA  0AF3               	incf	___awmod@dividend+1,f
  3875  04EB                     i1l1612:	
  3876  04EB  01F6               	clrf	___awmod@sign
  3877  04EC  0AF6               	incf	___awmod@sign,f
  3878  04ED                     i1l1614:	
  3879  04ED  1FF1               	btfss	___awmod@divisor+1,7
  3880  04EE  2CF0               	goto	u91_21
  3881  04EF  2CF1               	goto	u91_20
  3882  04F0                     u91_21:	
  3883  04F0  2CF6               	goto	i1l1618
  3884  04F1                     u91_20:	
  3885  04F1                     i1l1616:	
  3886  04F1  09F0               	comf	___awmod@divisor,f
  3887  04F2  09F1               	comf	___awmod@divisor+1,f
  3888  04F3  0AF0               	incf	___awmod@divisor,f
  3889  04F4  1903               	skipnz
  3890  04F5  0AF1               	incf	___awmod@divisor+1,f
  3891  04F6                     i1l1618:	
  3892  04F6  0870               	movf	___awmod@divisor,w
  3893  04F7  0471               	iorwf	___awmod@divisor+1,w
  3894  04F8  1903               	btfsc	3,2
  3895  04F9  2CFB               	goto	u92_21
  3896  04FA  2CFC               	goto	u92_20
  3897  04FB                     u92_21:	
  3898  04FB  2D2B               	goto	i1l1636
  3899  04FC                     u92_20:	
  3900  04FC                     i1l1620:	
  3901  04FC  01F5               	clrf	___awmod@counter
  3902  04FD  0AF5               	incf	___awmod@counter,f
  3903  04FE  2D0A               	goto	i1l1626
  3904  04FF                     i1l1622:	
  3905  04FF  3001               	movlw	1
  3906  0500                     u93_25:	
  3907  0500  1003               	clrc
  3908  0501  0DF0               	rlf	___awmod@divisor,f
  3909  0502  0DF1               	rlf	___awmod@divisor+1,f
  3910  0503  3EFF               	addlw	-1
  3911  0504  1D03               	skipz
  3912  0505  2D00               	goto	u93_25
  3913  0506                     i1l1624:	
  3914  0506  3001               	movlw	1
  3915  0507  00F4               	movwf	??___awmod
  3916  0508  0874               	movf	??___awmod,w
  3917  0509  07F5               	addwf	___awmod@counter,f
  3918  050A                     i1l1626:	
  3919  050A  1FF1               	btfss	___awmod@divisor+1,7
  3920  050B  2D0D               	goto	u94_21
  3921  050C  2D0E               	goto	u94_20
  3922  050D                     u94_21:	
  3923  050D  2CFF               	goto	i1l1622
  3924  050E                     u94_20:	
  3925  050E                     i1l1628:	
  3926  050E  0871               	movf	___awmod@divisor+1,w
  3927  050F  0273               	subwf	___awmod@dividend+1,w
  3928  0510  1D03               	skipz
  3929  0511  2D14               	goto	u95_25
  3930  0512  0870               	movf	___awmod@divisor,w
  3931  0513  0272               	subwf	___awmod@dividend,w
  3932  0514                     u95_25:	
  3933  0514  1C03               	skipc
  3934  0515  2D17               	goto	u95_21
  3935  0516  2D18               	goto	u95_20
  3936  0517                     u95_21:	
  3937  0517  2D1E               	goto	i1l1632
  3938  0518                     u95_20:	
  3939  0518                     i1l1630:	
  3940  0518  0870               	movf	___awmod@divisor,w
  3941  0519  02F2               	subwf	___awmod@dividend,f
  3942  051A  0871               	movf	___awmod@divisor+1,w
  3943  051B  1C03               	skipc
  3944  051C  03F3               	decf	___awmod@dividend+1,f
  3945  051D  02F3               	subwf	___awmod@dividend+1,f
  3946  051E                     i1l1632:	
  3947  051E  3001               	movlw	1
  3948  051F                     u96_25:	
  3949  051F  1003               	clrc
  3950  0520  0CF1               	rrf	___awmod@divisor+1,f
  3951  0521  0CF0               	rrf	___awmod@divisor,f
  3952  0522  3EFF               	addlw	-1
  3953  0523  1D03               	skipz
  3954  0524  2D1F               	goto	u96_25
  3955  0525                     i1l1634:	
  3956  0525  3001               	movlw	1
  3957  0526  02F5               	subwf	___awmod@counter,f
  3958  0527  1D03               	btfss	3,2
  3959  0528  2D2A               	goto	u97_21
  3960  0529  2D2B               	goto	u97_20
  3961  052A                     u97_21:	
  3962  052A  2D0E               	goto	i1l1628
  3963  052B                     u97_20:	
  3964  052B                     i1l1636:	
  3965  052B  0876               	movf	___awmod@sign,w
  3966  052C  1903               	btfsc	3,2
  3967  052D  2D2F               	goto	u98_21
  3968  052E  2D30               	goto	u98_20
  3969  052F                     u98_21:	
  3970  052F  2D35               	goto	i1l1640
  3971  0530                     u98_20:	
  3972  0530                     i1l1638:	
  3973  0530  09F2               	comf	___awmod@dividend,f
  3974  0531  09F3               	comf	___awmod@dividend+1,f
  3975  0532  0AF2               	incf	___awmod@dividend,f
  3976  0533  1903               	skipnz
  3977  0534  0AF3               	incf	___awmod@dividend+1,f
  3978  0535                     i1l1640:	
  3979  0535  0873               	movf	___awmod@dividend+1,w
  3980  0536  00F1               	movwf	?___awmod+1
  3981  0537  0872               	movf	___awmod@dividend,w
  3982  0538  00F0               	movwf	?___awmod
  3983  0539                     i1l540:	
  3984  0539  0008               	return
  3985  053A                     __end_of___awmod:	
  3986                           
  3987                           	psect	text23
  3988  0355                     __ptext23:	
  3989 ;; *************** function ___awdiv *****************
  3990 ;; Defined at:
  3991 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  3992 ;; Parameters:    Size  Location     Type
  3993 ;;  divisor         2    0[COMMON] int 
  3994 ;;  dividend        2    2[COMMON] int 
  3995 ;; Auto vars:     Size  Location     Type
  3996 ;;  quotient        2    7[COMMON] int 
  3997 ;;  sign            1    6[COMMON] unsigned char 
  3998 ;;  counter         1    5[COMMON] unsigned char 
  3999 ;; Return value:  Size  Location     Type
  4000 ;;                  2    0[COMMON] int 
  4001 ;; Registers used:
  4002 ;;		wreg, status,2, status,0
  4003 ;; Tracked objects:
  4004 ;;		On entry : 0/0
  4005 ;;		On exit  : 0/0
  4006 ;;		Unchanged: 0/0
  4007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4008 ;;      Params:         4       0       0       0       0
  4009 ;;      Locals:         4       0       0       0       0
  4010 ;;      Temps:          1       0       0       0       0
  4011 ;;      Totals:         9       0       0       0       0
  4012 ;;Total ram usage:        9 bytes
  4013 ;; Hardware stack levels used:    1
  4014 ;; This function calls:
  4015 ;;		Nothing
  4016 ;; This function is called by:
  4017 ;;		_DISP_Normal_Operation
  4018 ;;		_DISP_Set_Hours_Operation
  4019 ;;		_DISP_Set_Minutes_Operation
  4020 ;; This function uses a non-reentrant model
  4021 ;;
  4022                           
  4023                           
  4024                           ;psect for function ___awdiv
  4025  0355                     ___awdiv:	
  4026  0355                     i1l1562:	
  4027                           ;incstack = 0
  4028                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4029                           
  4030  0355  01F6               	clrf	___awdiv@sign
  4031  0356                     i1l1564:	
  4032  0356  1FF1               	btfss	___awdiv@divisor+1,7
  4033  0357  2B59               	goto	u80_21
  4034  0358  2B5A               	goto	u80_20
  4035  0359                     u80_21:	
  4036  0359  2B61               	goto	i1l1570
  4037  035A                     u80_20:	
  4038  035A                     i1l1566:	
  4039  035A  09F0               	comf	___awdiv@divisor,f
  4040  035B  09F1               	comf	___awdiv@divisor+1,f
  4041  035C  0AF0               	incf	___awdiv@divisor,f
  4042  035D  1903               	skipnz
  4043  035E  0AF1               	incf	___awdiv@divisor+1,f
  4044  035F                     i1l1568:	
  4045  035F  01F6               	clrf	___awdiv@sign
  4046  0360  0AF6               	incf	___awdiv@sign,f
  4047  0361                     i1l1570:	
  4048  0361  1FF3               	btfss	___awdiv@dividend+1,7
  4049  0362  2B64               	goto	u81_21
  4050  0363  2B65               	goto	u81_20
  4051  0364                     u81_21:	
  4052  0364  2B6E               	goto	i1l1576
  4053  0365                     u81_20:	
  4054  0365                     i1l1572:	
  4055  0365  09F2               	comf	___awdiv@dividend,f
  4056  0366  09F3               	comf	___awdiv@dividend+1,f
  4057  0367  0AF2               	incf	___awdiv@dividend,f
  4058  0368  1903               	skipnz
  4059  0369  0AF3               	incf	___awdiv@dividend+1,f
  4060  036A                     i1l1574:	
  4061  036A  3001               	movlw	1
  4062  036B  00F4               	movwf	??___awdiv
  4063  036C  0874               	movf	??___awdiv,w
  4064  036D  06F6               	xorwf	___awdiv@sign,f
  4065  036E                     i1l1576:	
  4066  036E  01F7               	clrf	___awdiv@quotient
  4067  036F  01F8               	clrf	___awdiv@quotient+1
  4068  0370                     i1l1578:	
  4069  0370  0870               	movf	___awdiv@divisor,w
  4070  0371  0471               	iorwf	___awdiv@divisor+1,w
  4071  0372  1903               	btfsc	3,2
  4072  0373  2B75               	goto	u82_21
  4073  0374  2B76               	goto	u82_20
  4074  0375                     u82_21:	
  4075  0375  2BAD               	goto	i1l1598
  4076  0376                     u82_20:	
  4077  0376                     i1l1580:	
  4078  0376  01F5               	clrf	___awdiv@counter
  4079  0377  0AF5               	incf	___awdiv@counter,f
  4080  0378  2B84               	goto	i1l1586
  4081  0379                     i1l1582:	
  4082  0379  3001               	movlw	1
  4083  037A                     u83_25:	
  4084  037A  1003               	clrc
  4085  037B  0DF0               	rlf	___awdiv@divisor,f
  4086  037C  0DF1               	rlf	___awdiv@divisor+1,f
  4087  037D  3EFF               	addlw	-1
  4088  037E  1D03               	skipz
  4089  037F  2B7A               	goto	u83_25
  4090  0380                     i1l1584:	
  4091  0380  3001               	movlw	1
  4092  0381  00F4               	movwf	??___awdiv
  4093  0382  0874               	movf	??___awdiv,w
  4094  0383  07F5               	addwf	___awdiv@counter,f
  4095  0384                     i1l1586:	
  4096  0384  1FF1               	btfss	___awdiv@divisor+1,7
  4097  0385  2B87               	goto	u84_21
  4098  0386  2B88               	goto	u84_20
  4099  0387                     u84_21:	
  4100  0387  2B79               	goto	i1l1582
  4101  0388                     u84_20:	
  4102  0388                     i1l1588:	
  4103  0388  3001               	movlw	1
  4104  0389                     u85_25:	
  4105  0389  1003               	clrc
  4106  038A  0DF7               	rlf	___awdiv@quotient,f
  4107  038B  0DF8               	rlf	___awdiv@quotient+1,f
  4108  038C  3EFF               	addlw	-1
  4109  038D  1D03               	skipz
  4110  038E  2B89               	goto	u85_25
  4111  038F  0871               	movf	___awdiv@divisor+1,w
  4112  0390  0273               	subwf	___awdiv@dividend+1,w
  4113  0391  1D03               	skipz
  4114  0392  2B95               	goto	u86_25
  4115  0393  0870               	movf	___awdiv@divisor,w
  4116  0394  0272               	subwf	___awdiv@dividend,w
  4117  0395                     u86_25:	
  4118  0395  1C03               	skipc
  4119  0396  2B98               	goto	u86_21
  4120  0397  2B99               	goto	u86_20
  4121  0398                     u86_21:	
  4122  0398  2BA0               	goto	i1l1594
  4123  0399                     u86_20:	
  4124  0399                     i1l1590:	
  4125  0399  0870               	movf	___awdiv@divisor,w
  4126  039A  02F2               	subwf	___awdiv@dividend,f
  4127  039B  0871               	movf	___awdiv@divisor+1,w
  4128  039C  1C03               	skipc
  4129  039D  03F3               	decf	___awdiv@dividend+1,f
  4130  039E  02F3               	subwf	___awdiv@dividend+1,f
  4131  039F                     i1l1592:	
  4132  039F  1477               	bsf	___awdiv@quotient,0
  4133  03A0                     i1l1594:	
  4134  03A0  3001               	movlw	1
  4135  03A1                     u87_25:	
  4136  03A1  1003               	clrc
  4137  03A2  0CF1               	rrf	___awdiv@divisor+1,f
  4138  03A3  0CF0               	rrf	___awdiv@divisor,f
  4139  03A4  3EFF               	addlw	-1
  4140  03A5  1D03               	skipz
  4141  03A6  2BA1               	goto	u87_25
  4142  03A7                     i1l1596:	
  4143  03A7  3001               	movlw	1
  4144  03A8  02F5               	subwf	___awdiv@counter,f
  4145  03A9  1D03               	btfss	3,2
  4146  03AA  2BAC               	goto	u88_21
  4147  03AB  2BAD               	goto	u88_20
  4148  03AC                     u88_21:	
  4149  03AC  2B88               	goto	i1l1588
  4150  03AD                     u88_20:	
  4151  03AD                     i1l1598:	
  4152  03AD  0876               	movf	___awdiv@sign,w
  4153  03AE  1903               	btfsc	3,2
  4154  03AF  2BB1               	goto	u89_21
  4155  03B0  2BB2               	goto	u89_20
  4156  03B1                     u89_21:	
  4157  03B1  2BB7               	goto	i1l1602
  4158  03B2                     u89_20:	
  4159  03B2                     i1l1600:	
  4160  03B2  09F7               	comf	___awdiv@quotient,f
  4161  03B3  09F8               	comf	___awdiv@quotient+1,f
  4162  03B4  0AF7               	incf	___awdiv@quotient,f
  4163  03B5  1903               	skipnz
  4164  03B6  0AF8               	incf	___awdiv@quotient+1,f
  4165  03B7                     i1l1602:	
  4166  03B7  0878               	movf	___awdiv@quotient+1,w
  4167  03B8  00F1               	movwf	?___awdiv+1
  4168  03B9  0877               	movf	___awdiv@quotient,w
  4169  03BA  00F0               	movwf	?___awdiv
  4170  03BB                     i1l527:	
  4171  03BB  0008               	return
  4172  03BC                     __end_of___awdiv:	
  4173                           
  4174                           	psect	text24
  4175  0FAE                     __ptext24:	
  4176 ;; *************** function _SSD_Toggle_Second_Dot *****************
  4177 ;; Defined at:
  4178 ;;		line 181 in file "SSD.c"
  4179 ;; Parameters:    Size  Location     Type
  4180 ;;		None
  4181 ;; Auto vars:     Size  Location     Type
  4182 ;;		None
  4183 ;; Return value:  Size  Location     Type
  4184 ;;                  1    wreg      void 
  4185 ;; Registers used:
  4186 ;;		wreg, status,2, status,0
  4187 ;; Tracked objects:
  4188 ;;		On entry : 0/0
  4189 ;;		On exit  : 0/0
  4190 ;;		Unchanged: 0/0
  4191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4192 ;;      Params:         0       0       0       0       0
  4193 ;;      Locals:         0       0       0       0       0
  4194 ;;      Temps:          1       0       0       0       0
  4195 ;;      Totals:         1       0       0       0       0
  4196 ;;Total ram usage:        1 bytes
  4197 ;; Hardware stack levels used:    1
  4198 ;; This function calls:
  4199 ;;		Nothing
  4200 ;; This function is called by:
  4201 ;;		_DISP_Normal_Operation
  4202 ;; This function uses a non-reentrant model
  4203 ;;
  4204                           
  4205                           
  4206                           ;psect for function _SSD_Toggle_Second_Dot
  4207  0FAE                     _SSD_Toggle_Second_Dot:	
  4208  0FAE                     i1l1546:	
  4209                           ;incstack = 0
  4210                           ; Regs used in _SSD_Toggle_Second_Dot: [wreg+status,2+status,0]
  4211                           
  4212                           
  4213                           ;SSD.c: 183:     Second_Dot_State ^= 1;
  4214  0FAE  3001               	movlw	1
  4215  0FAF  00F0               	movwf	??_SSD_Toggle_Second_Dot
  4216  0FB0  0870               	movf	??_SSD_Toggle_Second_Dot,w
  4217  0FB1  1283               	bcf	3,5	;RP0=0, select bank0
  4218  0FB2  1303               	bcf	3,6	;RP1=0, select bank0
  4219  0FB3  06B5               	xorwf	_Second_Dot_State,f
  4220  0FB4                     i1l112:	
  4221  0FB4  0008               	return
  4222  0FB5                     __end_of_SSD_Toggle_Second_Dot:	
  4223                           
  4224                           	psect	text25
  4225  0789                     __ptext25:	
  4226 ;; *************** function _CLOCK_GetTime *****************
  4227 ;; Defined at:
  4228 ;;		line 69 in file "Clock.c"
  4229 ;; Parameters:    Size  Location     Type
  4230 ;;  t               1    wreg     PTR struct .
  4231 ;;		 -> DISP_Set_Minutes_Operation@tt(5), DISP_Set_Hours_Operation@tt(5), DISP_Normal_Operation@tt(5), 
  4232 ;; Auto vars:     Size  Location     Type
  4233 ;;  t               1    1[COMMON] PTR struct .
  4234 ;;		 -> DISP_Set_Minutes_Operation@tt(5), DISP_Set_Hours_Operation@tt(5), DISP_Normal_Operation@tt(5), 
  4235 ;; Return value:  Size  Location     Type
  4236 ;;                  1    wreg      void 
  4237 ;; Registers used:
  4238 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4239 ;; Tracked objects:
  4240 ;;		On entry : 0/0
  4241 ;;		On exit  : 0/0
  4242 ;;		Unchanged: 0/0
  4243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4244 ;;      Params:         0       0       0       0       0
  4245 ;;      Locals:         1       0       0       0       0
  4246 ;;      Temps:          1       0       0       0       0
  4247 ;;      Totals:         2       0       0       0       0
  4248 ;;Total ram usage:        2 bytes
  4249 ;; Hardware stack levels used:    1
  4250 ;; This function calls:
  4251 ;;		Nothing
  4252 ;; This function is called by:
  4253 ;;		_DISP_Normal_Operation
  4254 ;;		_DISP_Set_Hours_Operation
  4255 ;;		_DISP_Set_Minutes_Operation
  4256 ;; This function uses a non-reentrant model
  4257 ;;
  4258                           
  4259                           
  4260                           ;psect for function _CLOCK_GetTime
  4261  0789                     _CLOCK_GetTime:	
  4262                           
  4263                           ;incstack = 0
  4264                           ; Regs used in _CLOCK_GetTime: [wreg-fsr0h+status,2+status,0]
  4265                           ;CLOCK_GetTime@t stored from wreg
  4266  0789  00F1               	movwf	CLOCK_GetTime@t
  4267  078A                     i1l1556:	
  4268                           
  4269                           ;Clock.c: 69: void CLOCK_GetTime(Time_t * t);Clock.c: 70: {;Clock.c: 72:     t->hours = 
      +                          CurrentTime.hours;
  4270  078A  1283               	bcf	3,5	;RP0=0, select bank0
  4271  078B  1303               	bcf	3,6	;RP1=0, select bank0
  4272  078C  0837               	movf	_CurrentTime,w
  4273  078D  00F0               	movwf	??_CLOCK_GetTime
  4274  078E  0871               	movf	CLOCK_GetTime@t,w
  4275  078F  0084               	movwf	4
  4276  0790  0870               	movf	??_CLOCK_GetTime,w
  4277  0791  1383               	bcf	3,7	;select IRP bank0
  4278  0792  0080               	movwf	0
  4279                           
  4280                           ;Clock.c: 73:     t->minuts = CurrentTime.minuts;
  4281  0793  0838               	movf	_CurrentTime+1,w
  4282  0794  00F0               	movwf	??_CLOCK_GetTime
  4283  0795  0A71               	incf	CLOCK_GetTime@t,w
  4284  0796  0084               	movwf	4
  4285  0797  0870               	movf	??_CLOCK_GetTime,w
  4286  0798  0080               	movwf	0
  4287  0799                     i1l1558:	
  4288                           
  4289                           ;Clock.c: 74:     t->seconds = CurrentTime.seconds;
  4290  0799  0839               	movf	_CurrentTime+2,w
  4291  079A  00F0               	movwf	??_CLOCK_GetTime
  4292  079B  0871               	movf	CLOCK_GetTime@t,w
  4293  079C  3E02               	addlw	2
  4294  079D  0084               	movwf	4
  4295  079E  0870               	movf	??_CLOCK_GetTime,w
  4296  079F  0080               	movwf	0
  4297  07A0                     i1l1560:	
  4298                           
  4299                           ;Clock.c: 75:     t->mSeconds = CurrentTime.mSeconds;
  4300  07A0  0871               	movf	CLOCK_GetTime@t,w
  4301  07A1  3E03               	addlw	3
  4302  07A2  0084               	movwf	4
  4303  07A3  083A               	movf	_CurrentTime+3,w
  4304  07A4  0080               	movwf	0
  4305  07A5  0A84               	incf	4,f
  4306  07A6  083B               	movf	_CurrentTime+4,w
  4307  07A7  0080               	movwf	0
  4308  07A8                     i1l165:	
  4309  07A8  0008               	return
  4310  07A9                     __end_of_CLOCK_GetTime:	
  4311                           
  4312                           	psect	text26
  4313  07FB                     __ptext26:	
  4314 ;; *************** function _CLOCK_GetMode *****************
  4315 ;; Defined at:
  4316 ;;		line 61 in file "Clock.c"
  4317 ;; Parameters:    Size  Location     Type
  4318 ;;		None
  4319 ;; Auto vars:     Size  Location     Type
  4320 ;;		None
  4321 ;; Return value:  Size  Location     Type
  4322 ;;                  1    wreg      enum E858
  4323 ;; Registers used:
  4324 ;;		wreg
  4325 ;; Tracked objects:
  4326 ;;		On entry : 0/0
  4327 ;;		On exit  : 0/0
  4328 ;;		Unchanged: 0/0
  4329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4330 ;;      Params:         0       0       0       0       0
  4331 ;;      Locals:         0       0       0       0       0
  4332 ;;      Temps:          0       0       0       0       0
  4333 ;;      Totals:         0       0       0       0       0
  4334 ;;Total ram usage:        0 bytes
  4335 ;; Hardware stack levels used:    1
  4336 ;; This function calls:
  4337 ;;		Nothing
  4338 ;; This function is called by:
  4339 ;;		_Disp_Update
  4340 ;; This function uses a non-reentrant model
  4341 ;;
  4342                           
  4343                           
  4344                           ;psect for function _CLOCK_GetMode
  4345  07FB                     _CLOCK_GetMode:	
  4346  07FB                     i1l1734:	
  4347                           ;incstack = 0
  4348                           ; Regs used in _CLOCK_GetMode: [wreg]
  4349                           
  4350                           
  4351                           ;Clock.c: 64:     return CurrentMode;
  4352  07FB  1283               	bcf	3,5	;RP0=0, select bank0
  4353  07FC  1303               	bcf	3,6	;RP1=0, select bank0
  4354  07FD  0832               	movf	_CurrentMode,w
  4355  07FE                     i1l162:	
  4356  07FE  0008               	return
  4357  07FF                     __end_of_CLOCK_GetMode:	
  4358                           
  4359                           	psect	text27
  4360  03BC                     __ptext27:	
  4361 ;; *************** function _CLOCK_Update *****************
  4362 ;; Defined at:
  4363 ;;		line 119 in file "Clock.c"
  4364 ;; Parameters:    Size  Location     Type
  4365 ;;		None
  4366 ;; Auto vars:     Size  Location     Type
  4367 ;;		None
  4368 ;; Return value:  Size  Location     Type
  4369 ;;                  1    wreg      void 
  4370 ;; Registers used:
  4371 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4372 ;; Tracked objects:
  4373 ;;		On entry : 0/0
  4374 ;;		On exit  : 0/0
  4375 ;;		Unchanged: 0/0
  4376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4377 ;;      Params:         0       0       0       0       0
  4378 ;;      Locals:         0       0       0       0       0
  4379 ;;      Temps:          2       0       0       0       0
  4380 ;;      Totals:         2       0       0       0       0
  4381 ;;Total ram usage:        2 bytes
  4382 ;; Hardware stack levels used:    1
  4383 ;; Hardware stack levels required when called:    3
  4384 ;; This function calls:
  4385 ;;		_CLOCK_Increment
  4386 ;;		_SW_GetState
  4387 ;;		_set_mode_process
  4388 ;; This function is called by:
  4389 ;;		_TMR0_ISR
  4390 ;; This function uses a non-reentrant model
  4391 ;;
  4392                           
  4393                           
  4394                           ;psect for function _CLOCK_Update
  4395  03BC                     _CLOCK_Update:	
  4396  03BC                     i1l1884:	
  4397                           ;incstack = 0
  4398                           ; Regs used in _CLOCK_Update: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4399                           
  4400                           
  4401                           ;Clock.c: 124:     static u8_t CLOCK_Time_Counter = 0;;Clock.c: 125:     CLOCK_Time_Coun
      +                          ter += (5);
  4402  03BC  3005               	movlw	5
  4403  03BD  00FA               	movwf	??_CLOCK_Update
  4404  03BE  087A               	movf	??_CLOCK_Update,w
  4405  03BF  1283               	bcf	3,5	;RP0=0, select bank0
  4406  03C0  1303               	bcf	3,6	;RP1=0, select bank0
  4407  03C1  07B1               	addwf	CLOCK_Update@CLOCK_Time_Counter,f
  4408                           
  4409                           ;Clock.c: 127:     if(CLOCK_Time_Counter != (20))
  4410  03C2  3014               	movlw	20
  4411  03C3  0631               	xorwf	CLOCK_Update@CLOCK_Time_Counter,w
  4412  03C4  1903               	btfsc	3,2
  4413  03C5  2BC7               	goto	u125_21
  4414  03C6  2BC8               	goto	u125_20
  4415  03C7                     u125_21:	
  4416  03C7  2BC9               	goto	i1l1888
  4417  03C8                     u125_20:	
  4418  03C8  2C20               	goto	i1l178
  4419  03C9                     i1l1888:	
  4420                           
  4421                           ;Clock.c: 131:     CLOCK_Time_Counter = 0;
  4422  03C9  01B1               	clrf	CLOCK_Update@CLOCK_Time_Counter
  4423  03CA                     i1l1890:	
  4424                           
  4425                           ;Clock.c: 134:     if(SW_GetState(SW_SET)== SW_PRE_PRESSED)
  4426  03CA  3002               	movlw	2
  4427  03CB  120A  118A  27DB  120A  118A  	fcall	_SW_GetState
  4428  03D0  3A01               	xorlw	1
  4429  03D1  1D03               	skipz
  4430  03D2  2BD4               	goto	u126_21
  4431  03D3  2BD5               	goto	u126_20
  4432  03D4                     u126_21:	
  4433  03D4  2BF5               	goto	i1l1902
  4434  03D5                     u126_20:	
  4435  03D5  2BE0               	goto	i1l1900
  4436  03D6                     i1l181:	
  4437                           ;Clock.c: 138:         {;Clock.c: 139:             case CL_NORMAL:
  4438                           
  4439                           
  4440                           ;Clock.c: 140:                 CurrentMode = CL_SET_HOURS;
  4441  03D6  01B2               	clrf	_CurrentMode
  4442  03D7  0AB2               	incf	_CurrentMode,f
  4443                           
  4444                           ;Clock.c: 141:                 break;
  4445  03D8  2BF5               	goto	i1l1902
  4446  03D9                     i1l1894:	
  4447                           
  4448                           ;Clock.c: 143:                 CurrentMode = CL_SET_MINUTES;
  4449  03D9  3002               	movlw	2
  4450  03DA  00FA               	movwf	??_CLOCK_Update
  4451  03DB  087A               	movf	??_CLOCK_Update,w
  4452  03DC  00B2               	movwf	_CurrentMode
  4453                           
  4454                           ;Clock.c: 144:                 break;
  4455  03DD  2BF5               	goto	i1l1902
  4456  03DE                     i1l1896:	
  4457                           
  4458                           ;Clock.c: 146:                 CurrentMode = CL_NORMAL;
  4459  03DE  01B2               	clrf	_CurrentMode
  4460                           
  4461                           ;Clock.c: 147:                 break;
  4462  03DF  2BF5               	goto	i1l1902
  4463  03E0                     i1l1900:	
  4464  03E0  1283               	bcf	3,5	;RP0=0, select bank0
  4465  03E1  1303               	bcf	3,6	;RP1=0, select bank0
  4466  03E2  0832               	movf	_CurrentMode,w
  4467  03E3  00FA               	movwf	??_CLOCK_Update
  4468  03E4  01FB               	clrf	??_CLOCK_Update+1
  4469                           
  4470                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4471                           ; Switch size 1, requested type "simple"
  4472                           ; Number of cases is 1, Range of values is 0 to 0
  4473                           ; switch strategies available:
  4474                           ; Name         Instructions Cycles
  4475                           ; simple_byte            4     3 (average)
  4476                           ; direct_byte           11     8 (fixed)
  4477                           ; jumptable            260     6 (fixed)
  4478                           ;	Chosen strategy is simple_byte
  4479  03E5  087B               	movf	??_CLOCK_Update+1,w
  4480  03E6  3A00               	xorlw	0	; case 0
  4481  03E7  1903               	skipnz
  4482  03E8  2BEA               	goto	i1l2104
  4483  03E9  2BF5               	goto	i1l1902
  4484  03EA                     i1l2104:	
  4485                           
  4486                           ; Switch size 1, requested type "simple"
  4487                           ; Number of cases is 3, Range of values is 0 to 2
  4488                           ; switch strategies available:
  4489                           ; Name         Instructions Cycles
  4490                           ; simple_byte           10     6 (average)
  4491                           ; direct_byte           17     8 (fixed)
  4492                           ; jumptable            260     6 (fixed)
  4493                           ;	Chosen strategy is simple_byte
  4494  03EA  087A               	movf	??_CLOCK_Update,w
  4495  03EB  3A00               	xorlw	0	; case 0
  4496  03EC  1903               	skipnz
  4497  03ED  2BD6               	goto	i1l181
  4498  03EE  3A01               	xorlw	1	; case 1
  4499  03EF  1903               	skipnz
  4500  03F0  2BD9               	goto	i1l1894
  4501  03F1  3A03               	xorlw	3	; case 2
  4502  03F2  1903               	skipnz
  4503  03F3  2BDE               	goto	i1l1896
  4504  03F4  2BF5               	goto	i1l1902
  4505  03F5                     i1l1902:	
  4506                           
  4507                           ;Clock.c: 154:     if(CurrentMode == CL_NORMAL)
  4508  03F5  1283               	bcf	3,5	;RP0=0, select bank0
  4509  03F6  1303               	bcf	3,6	;RP1=0, select bank0
  4510  03F7  0832               	movf	_CurrentMode,w
  4511  03F8  1D03               	btfss	3,2
  4512  03F9  2BFB               	goto	u127_21
  4513  03FA  2BFC               	goto	u127_20
  4514  03FB                     u127_21:	
  4515  03FB  2C10               	goto	i1l1912
  4516  03FC                     u127_20:	
  4517  03FC                     i1l1904:	
  4518                           
  4519                           ;Clock.c: 155:     {;Clock.c: 156:         CLOCK_Increment();
  4520  03FC  120A  118A  2644  120A  118A  	fcall	_CLOCK_Increment
  4521                           
  4522                           ;Clock.c: 157:     }
  4523  0401  2C20               	goto	i1l178
  4524  0402                     i1l1906:	
  4525                           
  4526                           ;Clock.c: 165:                 set_mode_process(&CurrentTime.hours);
  4527  0402  3037               	movlw	(low (_CurrentTime| 0))& (0+255)
  4528  0403  120A  118A  2743  120A  118A  	fcall	_set_mode_process
  4529                           
  4530                           ;Clock.c: 166:                 break;
  4531  0408  2C20               	goto	i1l178
  4532  0409                     i1l1908:	
  4533                           
  4534                           ;Clock.c: 169:                 set_mode_process(&CurrentTime.minuts);
  4535  0409  3038               	movlw	(low ((_CurrentTime| 0+1)))& (0+255)
  4536  040A  120A  118A  2743  120A  118A  	fcall	_set_mode_process
  4537                           
  4538                           ;Clock.c: 170:                 break;
  4539  040F  2C20               	goto	i1l178
  4540  0410                     i1l1912:	
  4541  0410  0832               	movf	_CurrentMode,w
  4542  0411  00FA               	movwf	??_CLOCK_Update
  4543  0412  01FB               	clrf	??_CLOCK_Update+1
  4544                           
  4545                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4546                           ; Switch size 1, requested type "simple"
  4547                           ; Number of cases is 1, Range of values is 0 to 0
  4548                           ; switch strategies available:
  4549                           ; Name         Instructions Cycles
  4550                           ; simple_byte            4     3 (average)
  4551                           ; direct_byte           11     8 (fixed)
  4552                           ; jumptable            260     6 (fixed)
  4553                           ;	Chosen strategy is simple_byte
  4554  0413  087B               	movf	??_CLOCK_Update+1,w
  4555  0414  3A00               	xorlw	0	; case 0
  4556  0415  1903               	skipnz
  4557  0416  2C18               	goto	i1l2106
  4558  0417  2C20               	goto	i1l178
  4559  0418                     i1l2106:	
  4560                           
  4561                           ; Switch size 1, requested type "simple"
  4562                           ; Number of cases is 2, Range of values is 1 to 2
  4563                           ; switch strategies available:
  4564                           ; Name         Instructions Cycles
  4565                           ; simple_byte            7     4 (average)
  4566                           ; direct_byte           17    11 (fixed)
  4567                           ; jumptable            263     9 (fixed)
  4568                           ;	Chosen strategy is simple_byte
  4569  0418  087A               	movf	??_CLOCK_Update,w
  4570  0419  3A01               	xorlw	1	; case 1
  4571  041A  1903               	skipnz
  4572  041B  2C02               	goto	i1l1906
  4573  041C  3A03               	xorlw	3	; case 2
  4574  041D  1903               	skipnz
  4575  041E  2C09               	goto	i1l1908
  4576  041F  2C20               	goto	i1l178
  4577  0420                     i1l178:	
  4578  0420  0008               	return
  4579  0421                     __end_of_CLOCK_Update:	
  4580                           
  4581                           	psect	text28
  4582  0743                     __ptext28:	
  4583 ;; *************** function _set_mode_process *****************
  4584 ;; Defined at:
  4585 ;;		line 178 in file "Clock.c"
  4586 ;; Parameters:    Size  Location     Type
  4587 ;;  var             1    wreg     PTR unsigned char 
  4588 ;;		 -> CurrentTime(5), 
  4589 ;; Auto vars:     Size  Location     Type
  4590 ;;  var             1    9[COMMON] PTR unsigned char 
  4591 ;;		 -> CurrentTime(5), 
  4592 ;; Return value:  Size  Location     Type
  4593 ;;                  1    wreg      void 
  4594 ;; Registers used:
  4595 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4596 ;; Tracked objects:
  4597 ;;		On entry : 0/0
  4598 ;;		On exit  : 0/0
  4599 ;;		Unchanged: 0/0
  4600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4601 ;;      Params:         0       0       0       0       0
  4602 ;;      Locals:         1       0       0       0       0
  4603 ;;      Temps:          1       0       0       0       0
  4604 ;;      Totals:         2       0       0       0       0
  4605 ;;Total ram usage:        2 bytes
  4606 ;; Hardware stack levels used:    1
  4607 ;; Hardware stack levels required when called:    2
  4608 ;; This function calls:
  4609 ;;		_SW_GetState
  4610 ;; This function is called by:
  4611 ;;		_CLOCK_Update
  4612 ;; This function uses a non-reentrant model
  4613 ;;
  4614                           
  4615                           
  4616                           ;psect for function _set_mode_process
  4617  0743                     _set_mode_process:	
  4618                           
  4619                           ;incstack = 0
  4620                           ; Regs used in _set_mode_process: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4621                           ;set_mode_process@var stored from wreg
  4622  0743  00F9               	movwf	set_mode_process@var
  4623  0744                     i1l1760:	
  4624                           
  4625                           ;Clock.c: 178: void set_mode_process(u8_t * var);Clock.c: 179: {;Clock.c: 180:     if(SW
      +                          _GetState(SW_PLUS) == SW_PRE_PRESSED)
  4626  0744  3000               	movlw	0
  4627  0745  120A  118A  27DB  120A  118A  	fcall	_SW_GetState
  4628  074A  3A01               	xorlw	1
  4629  074B  1D03               	skipz
  4630  074C  2F4E               	goto	u113_21
  4631  074D  2F4F               	goto	u113_20
  4632  074E                     u113_21:	
  4633  074E  2F56               	goto	i1l1764
  4634  074F                     u113_20:	
  4635  074F                     i1l1762:	
  4636                           
  4637                           ;Clock.c: 181:     {;Clock.c: 184:         *var += 1;
  4638  074F  3001               	movlw	1
  4639  0750  00F8               	movwf	??_set_mode_process
  4640  0751  0879               	movf	set_mode_process@var,w
  4641  0752  0084               	movwf	4
  4642  0753  0878               	movf	??_set_mode_process,w
  4643  0754  1383               	bcf	3,7	;select IRP bank0
  4644  0755  0780               	addwf	0,f
  4645  0756                     i1l1764:	
  4646                           
  4647                           ;Clock.c: 186:     if(SW_GetState(SW_MINUS) == SW_PRE_PRESSED)
  4648  0756  3001               	movlw	1
  4649  0757  120A  118A  27DB  120A  118A  	fcall	_SW_GetState
  4650  075C  3A01               	xorlw	1
  4651  075D  1D03               	skipz
  4652  075E  2F60               	goto	u114_21
  4653  075F  2F61               	goto	u114_20
  4654  0760                     u114_21:	
  4655  0760  2F66               	goto	i1l197
  4656  0761                     u114_20:	
  4657  0761                     i1l1766:	
  4658                           
  4659                           ;Clock.c: 187:     {;Clock.c: 190:         *var -= 1;
  4660  0761  0879               	movf	set_mode_process@var,w
  4661  0762  0084               	movwf	4
  4662  0763  3001               	movlw	1
  4663  0764  1383               	bcf	3,7	;select IRP bank0
  4664  0765  0280               	subwf	0,f
  4665  0766                     i1l197:	
  4666  0766  0008               	return
  4667  0767                     __end_of_set_mode_process:	
  4668                           
  4669                           	psect	text29
  4670  07DB                     __ptext29:	
  4671 ;; *************** function _SW_GetState *****************
  4672 ;; Defined at:
  4673 ;;		line 70 in file "SW.c"
  4674 ;; Parameters:    Size  Location     Type
  4675 ;;  sw              1    wreg     enum E859
  4676 ;; Auto vars:     Size  Location     Type
  4677 ;;  sw              1    6[COMMON] enum E859
  4678 ;;  ret             1    7[COMMON] unsigned char 
  4679 ;; Return value:  Size  Location     Type
  4680 ;;                  1    wreg      unsigned char 
  4681 ;; Registers used:
  4682 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4683 ;; Tracked objects:
  4684 ;;		On entry : 0/0
  4685 ;;		On exit  : 0/0
  4686 ;;		Unchanged: 0/0
  4687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4688 ;;      Params:         0       0       0       0       0
  4689 ;;      Locals:         2       0       0       0       0
  4690 ;;      Temps:          2       0       0       0       0
  4691 ;;      Totals:         4       0       0       0       0
  4692 ;;Total ram usage:        4 bytes
  4693 ;; Hardware stack levels used:    1
  4694 ;; Hardware stack levels required when called:    1
  4695 ;; This function calls:
  4696 ;;		___bmul
  4697 ;; This function is called by:
  4698 ;;		_CLOCK_Update
  4699 ;;		_set_mode_process
  4700 ;; This function uses a non-reentrant model
  4701 ;;
  4702                           
  4703                           
  4704                           ;psect for function _SW_GetState
  4705  07DB                     _SW_GetState:	
  4706                           
  4707                           ;incstack = 0
  4708                           ; Regs used in _SW_GetState: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4709                           ;SW_GetState@sw stored from wreg
  4710  07DB  00F6               	movwf	SW_GetState@sw
  4711  07DC                     i1l1548:	
  4712  07DC                     i1l1550:	
  4713                           
  4714                           ;SW.c: 75:     ret = SW_DATA[sw].state;
  4715  07DC  3003               	movlw	3
  4716  07DD  00F4               	movwf	??_SW_GetState
  4717  07DE  0874               	movf	??_SW_GetState,w
  4718  07DF  00F0               	movwf	___bmul@multiplicand
  4719  07E0  0876               	movf	SW_GetState@sw,w
  4720  07E1  120A  118A  27C6  120A  118A  	fcall	___bmul
  4721  07E6  3E22               	addlw	(low ((_SW_DATA| 0+2)))& (0+255)
  4722  07E7  0084               	movwf	4
  4723  07E8  1383               	bcf	3,7	;select IRP bank0
  4724  07E9  0800               	movf	0,w
  4725  07EA  00F5               	movwf	??_SW_GetState+1
  4726  07EB  0875               	movf	??_SW_GetState+1,w
  4727  07EC  00F7               	movwf	SW_GetState@ret
  4728  07ED                     i1l1552:	
  4729                           
  4730                           ;SW.c: 77:     return ret;
  4731  07ED  0877               	movf	SW_GetState@ret,w
  4732  07EE                     i1l128:	
  4733  07EE  0008               	return
  4734  07EF                     __end_of_SW_GetState:	
  4735                           
  4736                           	psect	text30
  4737  07C6                     __ptext30:	
  4738 ;; *************** function ___bmul *****************
  4739 ;; Defined at:
  4740 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8.c"
  4741 ;; Parameters:    Size  Location     Type
  4742 ;;  multiplier      1    wreg     unsigned char 
  4743 ;;  multiplicand    1    0[COMMON] unsigned char 
  4744 ;; Auto vars:     Size  Location     Type
  4745 ;;  multiplier      1    3[COMMON] unsigned char 
  4746 ;;  product         1    2[COMMON] unsigned char 
  4747 ;; Return value:  Size  Location     Type
  4748 ;;                  1    wreg      unsigned char 
  4749 ;; Registers used:
  4750 ;;		wreg, status,2, status,0
  4751 ;; Tracked objects:
  4752 ;;		On entry : 0/0
  4753 ;;		On exit  : 0/0
  4754 ;;		Unchanged: 0/0
  4755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4756 ;;      Params:         1       0       0       0       0
  4757 ;;      Locals:         2       0       0       0       0
  4758 ;;      Temps:          1       0       0       0       0
  4759 ;;      Totals:         4       0       0       0       0
  4760 ;;Total ram usage:        4 bytes
  4761 ;; Hardware stack levels used:    1
  4762 ;; This function calls:
  4763 ;;		Nothing
  4764 ;; This function is called by:
  4765 ;;		_SW_GetState
  4766 ;;		_SW_UpdateState
  4767 ;; This function uses a non-reentrant model
  4768 ;;
  4769                           
  4770                           
  4771                           ;psect for function ___bmul
  4772  07C6                     ___bmul:	
  4773                           
  4774                           ;incstack = 0
  4775                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4776                           ;___bmul@multiplier stored from wreg
  4777  07C6  00F3               	movwf	___bmul@multiplier
  4778  07C7                     i1l1490:	
  4779  07C7  01F2               	clrf	___bmul@product
  4780  07C8                     i1l1492:	
  4781  07C8  1C73               	btfss	___bmul@multiplier,0
  4782  07C9  2FCB               	goto	u65_21
  4783  07CA  2FCC               	goto	u65_20
  4784  07CB                     u65_21:	
  4785  07CB  2FD0               	goto	i1l1496
  4786  07CC                     u65_20:	
  4787  07CC                     i1l1494:	
  4788  07CC  0870               	movf	___bmul@multiplicand,w
  4789  07CD  00F1               	movwf	??___bmul
  4790  07CE  0871               	movf	??___bmul,w
  4791  07CF  07F2               	addwf	___bmul@product,f
  4792  07D0                     i1l1496:	
  4793  07D0  1003               	clrc
  4794  07D1  0DF0               	rlf	___bmul@multiplicand,f
  4795  07D2                     i1l1498:	
  4796  07D2  1003               	clrc
  4797  07D3  0CF3               	rrf	___bmul@multiplier,f
  4798  07D4  0873               	movf	___bmul@multiplier,w
  4799  07D5  1D03               	btfss	3,2
  4800  07D6  2FD8               	goto	u66_21
  4801  07D7  2FD9               	goto	u66_20
  4802  07D8                     u66_21:	
  4803  07D8  2FC8               	goto	i1l1492
  4804  07D9                     u66_20:	
  4805  07D9                     i1l1500:	
  4806  07D9  0872               	movf	___bmul@product,w
  4807  07DA                     i1l400:	
  4808  07DA  0008               	return
  4809  07DB                     __end_of___bmul:	
  4810                           
  4811                           	psect	text31
  4812  0644                     __ptext31:	
  4813 ;; *************** function _CLOCK_Increment *****************
  4814 ;; Defined at:
  4815 ;;		line 80 in file "Clock.c"
  4816 ;; Parameters:    Size  Location     Type
  4817 ;;		None
  4818 ;; Auto vars:     Size  Location     Type
  4819 ;;		None
  4820 ;; Return value:  Size  Location     Type
  4821 ;;                  1    wreg      void 
  4822 ;; Registers used:
  4823 ;;		wreg, status,2, status,0
  4824 ;; Tracked objects:
  4825 ;;		On entry : 0/0
  4826 ;;		On exit  : 0/0
  4827 ;;		Unchanged: 0/0
  4828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4829 ;;      Params:         0       0       0       0       0
  4830 ;;      Locals:         0       0       0       0       0
  4831 ;;      Temps:          1       0       0       0       0
  4832 ;;      Totals:         1       0       0       0       0
  4833 ;;Total ram usage:        1 bytes
  4834 ;; Hardware stack levels used:    1
  4835 ;; This function calls:
  4836 ;;		Nothing
  4837 ;; This function is called by:
  4838 ;;		_CLOCK_Update
  4839 ;; This function uses a non-reentrant model
  4840 ;;
  4841                           
  4842                           
  4843                           ;psect for function _CLOCK_Increment
  4844  0644                     _CLOCK_Increment:	
  4845  0644                     i1l1738:	
  4846                           ;incstack = 0
  4847                           ; Regs used in _CLOCK_Increment: [wreg+status,2+status,0]
  4848                           
  4849                           
  4850                           ;Clock.c: 83:     CurrentTime.mSeconds+=(20);
  4851  0644  3014               	movlw	20
  4852  0645  1283               	bcf	3,5	;RP0=0, select bank0
  4853  0646  1303               	bcf	3,6	;RP1=0, select bank0
  4854  0647  07BA               	addwf	_CurrentTime+3,f
  4855  0648  1803               	skipnc
  4856  0649  0ABB               	incf	_CurrentTime+4,f
  4857  064A  3000               	movlw	0
  4858  064B  07BB               	addwf	_CurrentTime+4,f
  4859                           
  4860                           ;Clock.c: 85:     if(CurrentTime.mSeconds >= 1000)
  4861  064C  3003               	movlw	3
  4862  064D  023B               	subwf	_CurrentTime+4,w
  4863  064E  30E8               	movlw	232
  4864  064F  1903               	skipnz
  4865  0650  023A               	subwf	_CurrentTime+3,w
  4866  0651  1C03               	skipc
  4867  0652  2E54               	goto	u109_21
  4868  0653  2E55               	goto	u109_20
  4869  0654                     u109_21:	
  4870  0654  2E79               	goto	i1l172
  4871  0655                     u109_20:	
  4872  0655                     i1l1740:	
  4873                           
  4874                           ;Clock.c: 86:     {;Clock.c: 89:         CurrentTime.mSeconds = 0;
  4875  0655  01BA               	clrf	_CurrentTime+3
  4876  0656  01BB               	clrf	_CurrentTime+4
  4877  0657                     i1l1742:	
  4878                           
  4879                           ;Clock.c: 90:         CurrentTime.seconds += 1;
  4880  0657  3001               	movlw	1
  4881  0658  00F0               	movwf	??_CLOCK_Increment
  4882  0659  0870               	movf	??_CLOCK_Increment,w
  4883  065A  07B9               	addwf	_CurrentTime+2,f
  4884  065B                     i1l1744:	
  4885                           
  4886                           ;Clock.c: 92:         if(CurrentTime.seconds>=60)
  4887  065B  303C               	movlw	60
  4888  065C  0239               	subwf	_CurrentTime+2,w
  4889  065D  1C03               	skipc
  4890  065E  2E60               	goto	u110_21
  4891  065F  2E61               	goto	u110_20
  4892  0660                     u110_21:	
  4893  0660  2E79               	goto	i1l172
  4894  0661                     u110_20:	
  4895  0661                     i1l1746:	
  4896                           
  4897                           ;Clock.c: 93:         {;Clock.c: 96:             CurrentTime.seconds = 0;
  4898  0661  01B9               	clrf	_CurrentTime+2
  4899  0662                     i1l1748:	
  4900                           
  4901                           ;Clock.c: 97:             CurrentTime.minuts += 1;
  4902  0662  3001               	movlw	1
  4903  0663  00F0               	movwf	??_CLOCK_Increment
  4904  0664  0870               	movf	??_CLOCK_Increment,w
  4905  0665  07B8               	addwf	_CurrentTime+1,f
  4906  0666                     i1l1750:	
  4907                           
  4908                           ;Clock.c: 99:             if(CurrentTime.minuts>=60)
  4909  0666  303C               	movlw	60
  4910  0667  0238               	subwf	_CurrentTime+1,w
  4911  0668  1C03               	skipc
  4912  0669  2E6B               	goto	u111_21
  4913  066A  2E6C               	goto	u111_20
  4914  066B                     u111_21:	
  4915  066B  2E79               	goto	i1l172
  4916  066C                     u111_20:	
  4917  066C                     i1l1752:	
  4918                           
  4919                           ;Clock.c: 100:             {;Clock.c: 103:                 CurrentTime.minuts = 0;
  4920  066C  01B8               	clrf	_CurrentTime+1
  4921  066D                     i1l1754:	
  4922                           
  4923                           ;Clock.c: 104:                 CurrentTime.hours += 1;
  4924  066D  3001               	movlw	1
  4925  066E  00F0               	movwf	??_CLOCK_Increment
  4926  066F  0870               	movf	??_CLOCK_Increment,w
  4927  0670  07B7               	addwf	_CurrentTime,f
  4928  0671                     i1l1756:	
  4929                           
  4930                           ;Clock.c: 106:                 if(CurrentTime.hours>=24){
  4931  0671  3018               	movlw	24
  4932  0672  0237               	subwf	_CurrentTime,w
  4933  0673  1C03               	skipc
  4934  0674  2E76               	goto	u112_21
  4935  0675  2E77               	goto	u112_20
  4936  0676                     u112_21:	
  4937  0676  2E79               	goto	i1l169
  4938  0677                     u112_20:	
  4939  0677                     i1l1758:	
  4940                           
  4941                           ;Clock.c: 109:                     CurrentTime.hours = 0;
  4942  0677  01B7               	clrf	_CurrentTime
  4943  0678  2E79               	goto	i1l172
  4944  0679                     i1l169:	
  4945                           ;Clock.c: 112:         }
  4946                           
  4947  0679                     i1l172:	
  4948  0679  0008               	return
  4949  067A                     __end_of_CLOCK_Increment:	
  4950  007E                     btemp	set	126	;btemp
  4951  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        11
    BSS         28
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     23      62
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    set_mode_process@var	PTR unsigned char  size(1) Largest target is 5
		 -> CurrentTime(BANK0[5]), 

    CLOCK_GetTime@t	PTR struct . size(1) Largest target is 5
		 -> DISP_Set_Minutes_Operation@tt(BANK0[5]), DISP_Set_Hours_Operation@tt(BANK0[5]), DISP_Normal_Operation@tt(BANK0[5]), 

    GPIO_Init_Pin@DirRegAddress	PTR unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR1[1]), 

    GPIO_Init_Port@DirRegAddress	PTR unsigned char  size(2) Largest target is 1
		 -> TRISD(SFR1[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _TMR0_ISR in COMMON

    _TMR0_ISR->_Disp_Update
    _SW_Update->_SW_UpdateState
    _SW_UpdateState->___bmul
    _SSD_Update->_SSD_Disable
    _SSD_Update->_SSD_Enable
    _DISP_Set_Minutes_Operation->i1_SSD_Set_Symbol
    _DISP_Set_Hours_Operation->i1_SSD_Set_Symbol
    _DISP_Normal_Operation->i1_SSD_Set_Symbol
    i1_SSD_Set_Symbol->___awdiv
    _CLOCK_Update->_set_mode_process
    _set_mode_process->_SW_GetState
    _SW_GetState->___bmul

Critical Paths under _main in BANK0

    _main->_Disp_Init
    _SW_Init->_GPIO_Init_Pin
    _Disp_Init->_SSD_Init
    _SSD_Init->_GPIO_Init_Pin

Critical Paths under _TMR0_ISR in BANK0

    _Disp_Update->_DISP_Normal_Operation
    _Disp_Update->_DISP_Set_Hours_Operation
    _Disp_Update->_DISP_Set_Minutes_Operation

Critical Paths under _main in BANK1

    None.

Critical Paths under _TMR0_ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TMR0_ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TMR0_ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    9075
                                             21 BANK0      2     2      0
                         _CLOCK_Init
                          _Disp_Init
                           _SSD_Init
                     _SSD_Set_Symbol
                            _SW_Init
                           _TMR_Init
                          _TMR_Start
 ---------------------------------------------------------------------------------
 (1) _TMR_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SW_Init                                              1     1      0    1824
                                             19 BANK0      1     1      0
                      _GPIO_Init_Pin
 ---------------------------------------------------------------------------------
 (1) _Disp_Init                                            1     1      0    3614
                                             20 BANK0      1     1      0
                           _SSD_Init
                     _SSD_Set_Symbol
 ---------------------------------------------------------------------------------
 (1) _SSD_Set_Symbol                                       3     2      1    1452
                                             11 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (1) _SSD_Init                                             1     1      0    2162
                                             19 BANK0      1     1      0
                      _GPIO_Init_Pin
                     _GPIO_Init_Port
 ---------------------------------------------------------------------------------
 (2) _GPIO_Init_Port                                       7     4      3     338
                                             11 BANK0      7     4      3
 ---------------------------------------------------------------------------------
 (2) _GPIO_Init_Pin                                        8     4      4    1824
                                             11 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _CLOCK_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _TMR0_ISR                                             3     3      0   11461
                                              8 BANK0      3     3      0
                       _CLOCK_Update
                        _Disp_Update
                         _SSD_Update
                          _SW_Update
 ---------------------------------------------------------------------------------
 (5) _SW_Update                                            2     2      0     742
                                              8 COMMON     2     2      0
                     _SW_UpdateState
 ---------------------------------------------------------------------------------
 (6) _SW_UpdateState                                       4     4      0     742
                                              4 COMMON     4     4      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (5) _SSD_Update                                           1     1      0      44
                                              3 COMMON     1     1      0
                     _SSD_Data_write
                        _SSD_Disable
                         _SSD_Enable
 ---------------------------------------------------------------------------------
 (6) _SSD_Enable                                           3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (6) _SSD_Disable                                          3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (6) _SSD_Data_write                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _Disp_Update                                          2     2      0    9561
                                             12 COMMON     2     2      0
                      _CLOCK_GetMode
              _DISP_Normal_Operation
           _DISP_Set_Hours_Operation
         _DISP_Set_Minutes_Operation
 ---------------------------------------------------------------------------------
 (6) _DISP_Set_Minutes_Operation                           8     8      0    3187
                                              0 BANK0      8     8      0
                      _CLOCK_GetTime
                            ___awdiv
                            ___awmod
                   i1_SSD_Set_Symbol
 ---------------------------------------------------------------------------------
 (6) _DISP_Set_Hours_Operation                             8     8      0    3187
                                              0 BANK0      8     8      0
                      _CLOCK_GetTime
                            ___awdiv
                            ___awmod
                   i1_SSD_Set_Symbol
 ---------------------------------------------------------------------------------
 (6) _DISP_Normal_Operation                                8     8      0    3187
                                              0 BANK0      8     8      0
                      _CLOCK_GetTime
              _SSD_Toggle_Second_Dot
                            ___awdiv
                            ___awmod
                   i1_SSD_Set_Symbol
 ---------------------------------------------------------------------------------
 (7) i1_SSD_Set_Symbol                                     3     2      1     460
                                              9 COMMON     3     2      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              9     5      4    1212
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (7) _SSD_Toggle_Second_Dot                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _CLOCK_GetTime                                        2     2      0     187
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (6) _CLOCK_GetMode                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _CLOCK_Update                                         2     2      0    1114
                                             10 COMMON     2     2      0
                    _CLOCK_Increment
                        _SW_GetState
                   _set_mode_process
 ---------------------------------------------------------------------------------
 (6) _set_mode_process                                     2     2      0     612
                                              8 COMMON     2     2      0
                        _SW_GetState
 ---------------------------------------------------------------------------------
 (7) _SW_GetState                                          4     4      0     502
                                              4 COMMON     4     4      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (7) ___bmul                                               4     3      1     456
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (6) _CLOCK_Increment                                      1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CLOCK_Init
   _Disp_Init
     _SSD_Init
       _GPIO_Init_Pin
       _GPIO_Init_Port
     _SSD_Set_Symbol
   _SSD_Init
     _GPIO_Init_Pin
     _GPIO_Init_Port
   _SSD_Set_Symbol
   _SW_Init
     _GPIO_Init_Pin
   _TMR_Init
   _TMR_Start

 _TMR0_ISR (ROOT)
   _CLOCK_Update
     _CLOCK_Increment
     _SW_GetState
       ___bmul
     _set_mode_process
       _SW_GetState
         ___bmul
   _Disp_Update
     _CLOCK_GetMode
     _DISP_Normal_Operation
       _CLOCK_GetTime
       _SSD_Toggle_Second_Dot
       ___awdiv
       ___awmod
       i1_SSD_Set_Symbol
         ___awdiv (ARG)
         ___awmod (ARG)
     _DISP_Set_Hours_Operation
       _CLOCK_GetTime
       ___awdiv
       ___awmod
       i1_SSD_Set_Symbol
         ___awdiv (ARG)
         ___awmod (ARG)
     _DISP_Set_Minutes_Operation
       _CLOCK_GetTime
       ___awdiv
       ___awmod
       i1_SSD_Set_Symbol
         ___awdiv (ARG)
         ___awmod (ARG)
   _SSD_Update
     _SSD_Data_write
     _SSD_Disable
     _SSD_Enable
   _SW_Update
     _SW_UpdateState
       ___bmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     17      3E       5       77.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      4C      12        0.0%
ABS                  0      0      4C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Jan 09 13:08:39 2020

             __end_of_SSD_Data_write 07C6                                    pc 0002  
                         _SSD_Update 0714                       ___bmul@product 0072  
                        __CFG_CP$OFF 0000                  __end_of_SW_GetState 07EF  
                                 l24 0354                                   l19 0484  
                                 l43 0583                                   l44 0583  
                                 l75 04E0                                   l78 07FA  
                       ___awdiv@sign 0076                                   fsr 0004  
             ?_SSD_Toggle_Second_Dot 0070                                  l125 060A  
                                l218 06E2                                  l159 0FCC  
                                l274 0FBB                                  l282 0FE1  
                                _GIE 005F                                  _PS0 0408  
                                _PS1 0409                                  _PS2 040A  
                       __CFG_CPD$OFF 0000                                  u700 045D  
                                u701 045C                                  u710 046C  
                                u711 046B                                  u720 0474  
                                u721 0473                                  u730 02F2  
                                u731 02F1                                  u740 0301  
                                u741 0300                                  u750 0310  
                                u670 0430                                  u751 030F  
                                u671 042F                                  u760 031F  
                                u680 043F                                  u761 031E  
                                u681 043E                                  u770 032E  
                                u690 044E                                  u771 032D  
                                u691 044D                                  u784 0337  
                                u785 0335                                  u794 0345  
                                u795 0343                                  fsr0 0004  
                                indf 0000                         ___awmod@sign 0076  
                       __CFG_FOSC$HS 0000                         __CFG_LVP$OFF 0000  
                               l1510 043F                                 l1520 0474  
                               l1512 044E                                 l1504 0421  
                               l1530 02E3                                 l1522 0477  
                               l1514 045D                                 l1506 0421  
                               l1540 032E                                 l1532 02F2  
                               l1524 047B                                 l1516 046C  
                               l1508 0430                                 l1534 0301  
                               l1542 032F                                 l1518 046D  
                               l1536 0310                                 l1528 02E3  
                               l1538 031F                                 l1650 04A6  
                               l1810 05DC                                 l1652 04B9  
                               l1660 07F2                                 l1820 05F4  
                               l1812 05DE                                 l1654 04C7  
                               l1646 0485                                 l1830 06DF  
                               l1822 0603                                 l1814 05E0  
                               l1806 05CB                                 l1832 0FC4  
                               l1656 04DA                                 l1648 04A1  
                               l1824 0606                                 l1816 05F0  
                               l1808 05D9                                 l1840 0FDC  
                               l1658 04DF                                 l1826 0608  
                               l1818 05F2                                 l1834 0FB5  
                               l1842 0FDD                                 l1828 06AF  
                               l1844 0FDE                                 l1836 0FD7  
                               l1838 0FD8                                 l1950 0549  
                               l1942 053A                                 l1960 0579  
                               l1952 0552                                 l1944 053A  
                               l1962 057E                                 l1954 055C  
                               l1946 053F                                 l1956 0568  
                               l1948 0544                                 l1958 0574  
                               _T0CS 040D                                 i1l84 0742  
                               i1l78 0FD6                                 i1l95 0713  
                               _TMR0 0001                         __CFG_WRT$OFF 0000  
                               _main 053A                                 btemp 007E  
                               start 0010                  __size_of_CLOCK_Init 0009  
                __end_of_Disp_Update 0644                      __end_of_SW_Init 060B  
               __end_of_CLOCK_Update 0421                    ___bmul@multiplier 0073  
                      _GPIO_Init_Pin 02E3                      ?_SSD_Data_write 0070  
                     _SSD_Set_Symbol 07EF                                ?_main 0070  
                    __end_of___awdiv 03BC                        __CFG_WDTE$OFF 0000  
                    __end_of___awmod 053A                      ___awdiv@divisor 0070  
                              i1l112 0FB4                                i1l105 06AE  
                              i1l109 07C5                                i1l134 05CA  
                              i1l400 07DA                                i1l128 07EE  
                              i1l224 0643                                i1l233 02E2  
                              i1l162 07FE                                i1l172 0679  
                              i1l148 0125                                i1l181 03D6  
                              i1l165 07A8                                i1l245 025C  
                              i1l239 01C4                                i1l169 0679  
                              i1l178 0420                                i1l540 0539  
                              i1l197 0766                                i1l527 03BB  
                              i1l279 077E                      ___awdiv@counter 0075  
                              _PORTB 0006                                _PORTD 0008  
                              u80_20 035A                                u80_21 0359  
                              u65_20 07CC                                u81_20 0365  
                              u65_21 07CB                                u81_21 0364  
                              _TRISA 0085                                _TRISB 0086  
                              _TRISC 0087                                _TRISD 0088  
                              _TRISE 0089                                u66_20 07D9  
                              u82_20 0376                                u90_20 04E6  
                              u66_21 07D8                                u82_21 0375  
                              u90_21 04E5                                u91_20 04F1  
                              u91_21 04F0                                u83_25 037A  
                              u84_20 0388                                u92_20 04FC  
                              u84_21 0387                                u92_21 04FB  
                              u85_25 0389                                u93_25 0500  
                              u86_20 0399                                u94_20 050E  
                              u86_21 0398                                u94_21 050D  
                              u86_25 0395                                u95_20 0518  
                              u95_21 0517                                u87_25 03A1  
                              u95_25 0514                                u88_20 03AD  
                              u88_21 03AC                                u96_25 051F  
                              u89_20 03B2                                u97_20 052B  
                              u89_21 03B1                                u97_21 052A  
                              u98_20 0530                                u98_21 052F  
                              u99_20 07B9                                u99_21 07B8  
                set_mode_process@var 0079                     __end_of_TMR0_ISR 0789  
                  _GPIO_Init_Port$31 004C                    ??_CLOCK_Increment 0070  
              __end_of_CLOCK_GetMode 07FF                __end_of_CLOCK_GetTime 07A9  
                   __end_of_SSD_Init 04E1                       __CFG_BOREN$OFF 0000  
                              pclath 000A                     __end_of_TMR_Init 0FBC  
                              status 0003                                wtemp0 007E  
                       SSD_Disable@s 0072              __size_of_SW_UpdateState 00F9  
                   _Second_Dot_State 0035    __size_of_DISP_Set_Hours_Operation 009F  
          ?_DISP_Set_Hours_Operation 0070                          _SW_GetState 07DB  
                 __size_of_TMR_Start 000B                          ?_SSD_Enable 0070  
                     ?_GPIO_Init_Pin 0047                      __initialization 0013  
                       __end_of_main 0587               __end_of_SSD_Set_Symbol 07FB  
                     _GPIO_Init_Port 0421                          ?_SSD_Update 0070  
                             ??_main 0051                   __size_of_SW_Update 0044  
        GPIO_Init_Port@DirRegAddress 0047                   __size_of_Disp_Init 0034  
         GPIO_Init_Pin@DirRegAddress 0047                     ___awdiv@dividend 0072  
          __size_ofi1_SSD_Set_Symbol 000A                               u100_25 07BC  
                             u101_20 0041                               u101_21 0040  
                             u110_20 0661                               u102_20 0053  
                             u110_21 0660                               u102_21 0052  
                             i1l2100 0705                               i1l2102 0638  
                             u111_20 066C                               i1l2104 03EA  
                             u103_20 0074                               u111_21 066B  
                             u103_21 0073                               i1l2106 0418  
                             i1l1500 07D9                               u112_20 0677  
                             i1l1600 03B2                               u120_20 0244  
                             u104_20 0086                               u112_21 0676  
                             u120_21 0243                               u104_21 0085  
                             i1l1602 03B7                               i1l1610 04E6  
                             i1l1620 04FC                               i1l1612 04EB  
                             i1l1700 002E                               i1l1550 07DC  
                             i1l1630 0518                               i1l1622 04FF  
                             i1l1614 04ED                               i1l1606 04E1  
                             i1l1710 0074                               i1l1702 002F  
                             i1l1552 07ED                               u113_20 074F  
                             i1l1560 07A0                               i1l1640 0535  
                             i1l1632 051E                               i1l1624 0506  
                             i1l1616 04F1                               i1l1608 04E2  
                             u121_20 025B                               i1l1800 0244  
                             i1l2096 0117                               i1l1720 00CC  
                             u105_20 00A8                               i1l1712 0086  
                             i1l1704 0041                               u113_21 074E  
                             u121_21 025A                               u105_21 00A7  
                             i1l1490 07C7                               i1l1546 0FAE  
                             i1l1570 0361                               i1l1562 0355  
                             i1l1634 0525                               i1l1626 050A  
                             i1l1618 04F6                               i1l1802 0253  
                             i1l2098 06A0                               i1l1722 00DE  
                             i1l1714 0096                               i1l1706 0053  
                             i1l1740 0655                               i1l1492 07C8  
                             i1l1548 07DC                               i1l1900 03E0  
                             i1l1556 078A                               i1l1580 0376  
                             i1l1572 0365                               i1l1564 0356  
                             i1l1628 050E                               i1l1636 052B  
                             i1l1644 0FCE                               i1l1804 025B  
                             i1l1724 00F0                               i1l1716 00A8  
                             i1l1708 0062                               i1l1750 0666  
                             i1l1742 0657                               i1l1494 07CC  
                             i1l1902 03F5                               i1l1734 07FB  
                             i1l1558 0799                               i1l1590 0399  
                             i1l1582 0379                               i1l1574 036A  
                             i1l1566 035A                               i1l1638 0530  
                             i1l1670 06F7                               i1l1662 06E4  
                             i1l1718 00BA                               i1l1752 066C  
                             i1l1744 065B                               i1l1496 07D0  
                             u114_20 0761                               i1l1760 0744  
                             i1l1904 03FC                               i1l1912 0410  
                             i1l1592 039F                               i1l1584 0380  
                             i1l1576 036E                               i1l1568 035F  
                             i1l1680 07B4                               i1l1664 06E5  
                             i1l1672 06FD                               u122_20 0720  
                             u106_20 00BA                               i1l1728 0102  
                             u114_21 0760                               u122_21 071F  
                             u106_21 00B9                               i1l1754 066D  
                             i1l1746 0661                               i1l1738 0644  
                             i1l1498 07D2                               i1l1762 074F  
                             i1l1906 0402                               i1l1594 03A0  
                             i1l1586 0384                               i1l1578 0370  
                             i1l1770 02CE                               i1l1930 0620  
                             i1l1922 060B                               i1l1682 07B9  
                             i1l1666 06EB                               i1l1690 068A  
                             i1l1850 0721                               i1l1756 0671  
                             i1l1748 0662                               i1l1764 0756  
                             i1l1908 0409                               i1l1596 03A7  
                             i1l1588 0388                               i1l1772 02D4  
                             i1l1780 015F                               i1l1932 0626  
                             i1l1668 06F1                               i1l1692 0691  
                             i1l1684 067B                               i1l1860 0735  
                             i1l1852 0722                               i1l1758 0677  
                             i1l1766 0761                               i1l1598 03AD  
                             i1l1774 02DA                               i1l1790 01C3  
                             i1l1782 0167                               i1l1926 0618  
                             i1l1678 07A9                               i1l1686 067C  
                             i1l1694 0698                               i1l1862 073A  
                             i1l1854 0728                               i1l1846 0714  
                             i1l1870 0597                               i1l1776 02DF  
                             u115_20 02DA                               i1l1768 025D  
                             i1l1784 019D                               i1l1792 01C5  
                             i1l1928 061A                               i1l1936 062C  
                             i1l1688 0683                               u123_20 0734  
                             i1l1856 072E                               u107_20 00DE  
                             i1l1880 05B7                               i1l1872 059D  
                             i1l1864 0587                               u115_21 02D9  
                             u123_21 0733                               u107_21 00DD  
                             i1l1890 03CA                               i1l1786 01A5  
                             i1l1778 0126                               i1l1794 0203  
                             i1l1858 0734                               i1l1882 05C4  
                             i1l1874 05A3                               i1l1866 058D  
                             i1l1970 076F                               i1l1884 03BC  
                             i1l1788 01BB                               i1l1796 020B  
                             i1l1876 05AB                               i1l1868 058E  
                             i1l1972 0774                               i1l1964 0767  
                             i1l1894 03D9                               i1l1798 023C  
                             i1l1878 05B1                               i1l1974 0779  
                             i1l1966 0768                               i1l1896 03DE  
                             i1l1888 03C9                               u116_20 0167  
                             u108_20 00F0                               i1l1968 076A  
                             u116_21 0166                               u108_21 00EF  
                             u124_25 05BA                               u109_20 0655  
                             u125_20 03C8                               u117_20 01A5  
                             u109_21 0654                               u125_21 03C7  
                             u117_21 01A4                               u126_20 03D5  
                             u118_20 01C3                               u126_21 03D4  
                             u118_21 01C2                               u127_20 03FC  
                             u119_20 020B                               u127_21 03FB  
                             u119_21 020A                               u128_20 0617  
                             u128_21 0616                          _Disp_Update 060B  
                          ??_SW_Init 004F                               _TMR0IE 005D  
                             _TMR0IF 005A                               _Buffer 0029  
                     __CFG_PWRTE$OFF 0000               __end_of_GPIO_Init_Port 0485  
                             ___bmul 07C6                      ?_SSD_Set_Symbol 0047  
                          ??___awdiv 0074                            ??___awmod 0074  
                   ___awdiv@quotient 0077                      ___awmod@divisor 0070  
           SW_Update@SW_Time_Counter 0033                      ___awmod@counter 0075  
                       ??_CLOCK_Init 0047             __end_of_set_mode_process 0767  
                             saved_w 007E                    __end_of_TMR_Start 0FE2  
                __size_of_SSD_Enable 0035                  __size_of_SSD_Update 002F  
     __size_of_DISP_Normal_Operation 0086                __size_of_CLOCK_Update 0065  
            __end_of__initialization 0029        __end_of_DISP_Normal_Operation 02E3  
                    ??_GPIO_Init_Pin 004B                     GPIO_Init_Pin@dir 004A  
                  __end_of_SW_Update 05CB                         ?_SSD_Disable 0070  
                ___bmul@multiplicand 0070                    __end_of_Disp_Init 06E3  
                 __end_of_CLOCK_Init 0FCD                      ?_GPIO_Init_Port 0047  
                     __pcstackCOMMON 0070              ??_SSD_Toggle_Second_Dot 0070  
                       __pidataBANK0 0FE2                            ?_TMR0_ISR 0070  
                          ?_SSD_Init 0070                          _CurrentMode 0032  
                        _CurrentTime 0037                            ?_TMR_Init 0070  
                      SW_GetState@sw 0076                         _CLOCK_Update 03BC  
                         __pbssBANK0 0020              DISP_Normal_Operation@tt 003F  
                     _SW_UpdateState 002D                     ??_SSD_Data_write 0070  
                         __pmaintext 053A                              ?___bmul 0070  
     CLOCK_Update@CLOCK_Time_Counter 0031                           ??_TMR0_ISR 0044  
                         __pintentry 0004         DISP_Set_Minutes_Operation@tt 003F  
                         ??_SSD_Init 004F                      _CLOCK_Increment 0644  
                         ??_TMR_Init 0047         ??_DISP_Set_Minutes_Operation 003C  
   __end_of_DISP_Set_Hours_Operation 01C5                     i1_SSD_Set_Symbol 0FCD  
             __end_of_SW_UpdateState 0126                              _SW_DATA 0020  
                SSD_Set_Symbol@index 0047                              _SW_Init 05CB  
                       ?_SW_GetState 0070                         ??_SSD_Enable 0070  
                    __size_of___bmul 0015                         ??_SSD_Update 0073  
                            ___awdiv 0355                              ___awmod 04E1  
__size_of_DISP_Set_Minutes_Operation 0098                           _currentSSD 0036  
                            __ptext1 0FD7                              __ptext2 0FB5  
                            __ptext3 05CB                              __ptext4 06AF  
                            __ptext5 07EF                              __ptext6 0485  
                            __ptext7 0421                              __ptext8 02E3  
                            __ptext9 0FC4                     ___awmod@dividend 0072  
                 __end_of_SSD_Enable 06AF                              clrloop0 0FBD  
               end_of_initialization 0029                      ?_SW_UpdateState 0070  
                       ?_Disp_Update 0070                   __end_of_SSD_Update 0743  
                   ??_SSD_Set_Symbol 0048              __end_of_CLOCK_Increment 067A  
               __size_of_SSD_Disable 0031               __size_of_CLOCK_GetMode 0004  
             __size_of_CLOCK_GetTime 0020                    ?_set_mode_process 0070  
                 ??_set_mode_process 0078                            _TMR_Start 0FD7  
           _DISP_Set_Hours_Operation 0126              GPIO_Init_Pin@pin_number 0049  
                   ??_GPIO_Init_Port 004A                    GPIO_Init_Port@dir 0049  
                          _SW_Update 0587                       __end_of___bmul 07DB  
     __size_of_SSD_Toggle_Second_Dot 0007                            _Disp_Init 06AF  
      __end_of_SSD_Toggle_Second_Dot 0FB5                    __size_of_TMR0_ISR 0022  
 __end_of_DISP_Set_Minutes_Operation 025D           _DISP_Set_Minutes_Operation 01C5  
                        SSD_Enable@s 0072                    __size_of_SSD_Init 005C  
                start_initialization 0013                    __size_of_TMR_Init 0007  
                         ?_TMR_Start 0070                        _CLOCK_GetMode 07FB  
                      _CLOCK_GetTime 0789                _DISP_Normal_Operation 025D  
              __end_of_GPIO_Init_Pin 0355                       SW_GetState@ret 0077  
                   ?_CLOCK_Increment 0070                             ??___bmul 0071  
               __size_of_SW_GetState 0014                           init_fetch0 0FED  
                         ?_SW_Update 0070             __end_ofi1_SSD_Set_Symbol 0FD7  
                         ?_Disp_Init 0070                          __pdataBANK0 0052  
                          ___latbits 0002                        __pcstackBANK0 003C  
                     ?_CLOCK_GetMode 0070                       ?_CLOCK_GetTime 0070  
                           ?_SW_Init 0070                 __size_of_Disp_Update 0039  
                           ?___awdiv 0070                             ?___awmod 0070  
             i1SSD_Set_Symbol@symbol 007B                     ??_SW_UpdateState 0074  
                        ??_TMR_Start 0047                     SW_UpdateState@sw 0077  
                  interrupt_function 0004               ?_DISP_Normal_Operation 0070  
                          clear_ram0 0FBC                             _TMR0_ISR 0767  
                        ??_SW_Update 0078                          ??_Disp_Init 0050  
            __size_of_SSD_Data_write 001D                             _SSD_Init 0485  
                           _TMR_Init 0FB5           ??_DISP_Set_Hours_Operation 003C  
               SSD_Set_Symbol@symbol 0049                      ??_CLOCK_GetMode 0070  
                    ??_CLOCK_GetTime 0070                     __size_of_SW_Init 0040  
          __size_of_set_mode_process 0024                        ??_SSD_Disable 0070  
         DISP_Set_Hours_Operation@tt 003F                     __size_of___awdiv 0067  
                   __size_of___awmod 0059           SSD_Update@SSD_Time_Counter 0034  
                         _CLOCK_Init 0FC4          ?_DISP_Set_Minutes_Operation 0070  
                      ?_CLOCK_Update 0070                             __ptext10 0767  
                           __ptext11 0587                             __ptext20 025D  
                           __ptext12 002D                             __ptext21 0FCD  
                           __ptext13 0714                             __ptext30 07C6  
                           __ptext22 04E1                             __ptext14 067A  
                           __ptext31 0644                             __ptext23 0355  
                           __ptext15 06E3                             __ptext24 0FAE  
                           __ptext16 07A9                             __ptext25 0789  
                           __ptext17 060B                             __ptext26 07FB  
                           __ptext18 01C5                             __ptext27 03BC  
                           __ptext19 0126                             __ptext28 0743  
                           __ptext29 07DB                i1SSD_Set_Symbol@index 0079  
                      __size_of_main 004D                       CLOCK_GetTime@t 0071  
                __end_of_SSD_Disable 0714                    ?i1_SSD_Set_Symbol 0079  
            __size_of_SSD_Set_Symbol 000C                   ??i1_SSD_Set_Symbol 007A  
              _SSD_Toggle_Second_Dot 0FAE                       ??_CLOCK_Update 007A  
                           init_ram0 0FF1                             intlevel1 0000  
                        _tempCounter 002D                        ??_SW_GetState 0074  
            __size_of_GPIO_Init_Port 0064                       _SSD_Data_write 07A9  
       Disp_Update@DISP_Time_Counter 002F             __size_of_CLOCK_Increment 0036  
                        ?_CLOCK_Init 0070               __size_of_GPIO_Init_Pin 0072  
                 _Disp_Blink_counter 0030              ??_DISP_Normal_Operation 003C  
                      ??_Disp_Update 007C                          _SSD_LOT_ARR 0052  
                   _set_mode_process 0743                          _SSD_Disable 06E3  
                         _SSD_Enable 067A  
