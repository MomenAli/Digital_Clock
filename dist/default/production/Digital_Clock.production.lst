

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Jan 08 07:36:03 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	dabs	1,0x7E,2
    41  0000                     
    42                           ; Version 2.10
    43                           ; Generated 31/07/2019 GMT
    44                           ; 
    45                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC16F877A Definitions
    74                           ; 
    75                           ; SFR Addresses
    76  0000                     	;# 
    77  0001                     	;# 
    78  0002                     	;# 
    79  0003                     	;# 
    80  0004                     	;# 
    81  0005                     	;# 
    82  0006                     	;# 
    83  0007                     	;# 
    84  0008                     	;# 
    85  0009                     	;# 
    86  000A                     	;# 
    87  000B                     	;# 
    88  000C                     	;# 
    89  000D                     	;# 
    90  000E                     	;# 
    91  000E                     	;# 
    92  000F                     	;# 
    93  0010                     	;# 
    94  0011                     	;# 
    95  0012                     	;# 
    96  0013                     	;# 
    97  0014                     	;# 
    98  0015                     	;# 
    99  0015                     	;# 
   100  0016                     	;# 
   101  0017                     	;# 
   102  0018                     	;# 
   103  0019                     	;# 
   104  001A                     	;# 
   105  001B                     	;# 
   106  001B                     	;# 
   107  001C                     	;# 
   108  001D                     	;# 
   109  001E                     	;# 
   110  001F                     	;# 
   111  0081                     	;# 
   112  0085                     	;# 
   113  0086                     	;# 
   114  0087                     	;# 
   115  0088                     	;# 
   116  0089                     	;# 
   117  008C                     	;# 
   118  008D                     	;# 
   119  008E                     	;# 
   120  0091                     	;# 
   121  0092                     	;# 
   122  0093                     	;# 
   123  0094                     	;# 
   124  0098                     	;# 
   125  0099                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009E                     	;# 
   129  009F                     	;# 
   130  010C                     	;# 
   131  010D                     	;# 
   132  010E                     	;# 
   133  010F                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  0008                     	;# 
   145  0009                     	;# 
   146  000A                     	;# 
   147  000B                     	;# 
   148  000C                     	;# 
   149  000D                     	;# 
   150  000E                     	;# 
   151  000E                     	;# 
   152  000F                     	;# 
   153  0010                     	;# 
   154  0011                     	;# 
   155  0012                     	;# 
   156  0013                     	;# 
   157  0014                     	;# 
   158  0015                     	;# 
   159  0015                     	;# 
   160  0016                     	;# 
   161  0017                     	;# 
   162  0018                     	;# 
   163  0019                     	;# 
   164  001A                     	;# 
   165  001B                     	;# 
   166  001B                     	;# 
   167  001C                     	;# 
   168  001D                     	;# 
   169  001E                     	;# 
   170  001F                     	;# 
   171  0081                     	;# 
   172  0085                     	;# 
   173  0086                     	;# 
   174  0087                     	;# 
   175  0088                     	;# 
   176  0089                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  010C                     	;# 
   191  010D                     	;# 
   192  010E                     	;# 
   193  010F                     	;# 
   194  018C                     	;# 
   195  018D                     	;# 
   196  0000                     	;# 
   197  0001                     	;# 
   198  0002                     	;# 
   199  0003                     	;# 
   200  0004                     	;# 
   201  0005                     	;# 
   202  0006                     	;# 
   203  0007                     	;# 
   204  0008                     	;# 
   205  0009                     	;# 
   206  000A                     	;# 
   207  000B                     	;# 
   208  000C                     	;# 
   209  000D                     	;# 
   210  000E                     	;# 
   211  000E                     	;# 
   212  000F                     	;# 
   213  0010                     	;# 
   214  0011                     	;# 
   215  0012                     	;# 
   216  0013                     	;# 
   217  0014                     	;# 
   218  0015                     	;# 
   219  0015                     	;# 
   220  0016                     	;# 
   221  0017                     	;# 
   222  0018                     	;# 
   223  0019                     	;# 
   224  001A                     	;# 
   225  001B                     	;# 
   226  001B                     	;# 
   227  001C                     	;# 
   228  001D                     	;# 
   229  001E                     	;# 
   230  001F                     	;# 
   231  0081                     	;# 
   232  0085                     	;# 
   233  0086                     	;# 
   234  0087                     	;# 
   235  0088                     	;# 
   236  0089                     	;# 
   237  008C                     	;# 
   238  008D                     	;# 
   239  008E                     	;# 
   240  0091                     	;# 
   241  0092                     	;# 
   242  0093                     	;# 
   243  0094                     	;# 
   244  0098                     	;# 
   245  0099                     	;# 
   246  009C                     	;# 
   247  009D                     	;# 
   248  009E                     	;# 
   249  009F                     	;# 
   250  010C                     	;# 
   251  010D                     	;# 
   252  010E                     	;# 
   253  010F                     	;# 
   254  018C                     	;# 
   255  018D                     	;# 
   256  0000                     	;# 
   257  0001                     	;# 
   258  0002                     	;# 
   259  0003                     	;# 
   260  0004                     	;# 
   261  0005                     	;# 
   262  0006                     	;# 
   263  0007                     	;# 
   264  0008                     	;# 
   265  0009                     	;# 
   266  000A                     	;# 
   267  000B                     	;# 
   268  000C                     	;# 
   269  000D                     	;# 
   270  000E                     	;# 
   271  000E                     	;# 
   272  000F                     	;# 
   273  0010                     	;# 
   274  0011                     	;# 
   275  0012                     	;# 
   276  0013                     	;# 
   277  0014                     	;# 
   278  0015                     	;# 
   279  0015                     	;# 
   280  0016                     	;# 
   281  0017                     	;# 
   282  0018                     	;# 
   283  0019                     	;# 
   284  001A                     	;# 
   285  001B                     	;# 
   286  001B                     	;# 
   287  001C                     	;# 
   288  001D                     	;# 
   289  001E                     	;# 
   290  001F                     	;# 
   291  0081                     	;# 
   292  0085                     	;# 
   293  0086                     	;# 
   294  0087                     	;# 
   295  0088                     	;# 
   296  0089                     	;# 
   297  008C                     	;# 
   298  008D                     	;# 
   299  008E                     	;# 
   300  0091                     	;# 
   301  0092                     	;# 
   302  0093                     	;# 
   303  0094                     	;# 
   304  0098                     	;# 
   305  0099                     	;# 
   306  009C                     	;# 
   307  009D                     	;# 
   308  009E                     	;# 
   309  009F                     	;# 
   310  010C                     	;# 
   311  010D                     	;# 
   312  010E                     	;# 
   313  010F                     	;# 
   314  018C                     	;# 
   315  018D                     	;# 
   316  0000                     	;# 
   317  0001                     	;# 
   318  0002                     	;# 
   319  0003                     	;# 
   320  0004                     	;# 
   321  0005                     	;# 
   322  0006                     	;# 
   323  0007                     	;# 
   324  0008                     	;# 
   325  0009                     	;# 
   326  000A                     	;# 
   327  000B                     	;# 
   328  000C                     	;# 
   329  000D                     	;# 
   330  000E                     	;# 
   331  000E                     	;# 
   332  000F                     	;# 
   333  0010                     	;# 
   334  0011                     	;# 
   335  0012                     	;# 
   336  0013                     	;# 
   337  0014                     	;# 
   338  0015                     	;# 
   339  0015                     	;# 
   340  0016                     	;# 
   341  0017                     	;# 
   342  0018                     	;# 
   343  0019                     	;# 
   344  001A                     	;# 
   345  001B                     	;# 
   346  001B                     	;# 
   347  001C                     	;# 
   348  001D                     	;# 
   349  001E                     	;# 
   350  001F                     	;# 
   351  0081                     	;# 
   352  0085                     	;# 
   353  0086                     	;# 
   354  0087                     	;# 
   355  0088                     	;# 
   356  0089                     	;# 
   357  008C                     	;# 
   358  008D                     	;# 
   359  008E                     	;# 
   360  0091                     	;# 
   361  0092                     	;# 
   362  0093                     	;# 
   363  0094                     	;# 
   364  0098                     	;# 
   365  0099                     	;# 
   366  009C                     	;# 
   367  009D                     	;# 
   368  009E                     	;# 
   369  009F                     	;# 
   370  010C                     	;# 
   371  010D                     	;# 
   372  010E                     	;# 
   373  010F                     	;# 
   374  018C                     	;# 
   375  018D                     	;# 
   376  0000                     	;# 
   377  0001                     	;# 
   378  0002                     	;# 
   379  0003                     	;# 
   380  0004                     	;# 
   381  0005                     	;# 
   382  0006                     	;# 
   383  0007                     	;# 
   384  0008                     	;# 
   385  0009                     	;# 
   386  000A                     	;# 
   387  000B                     	;# 
   388  000C                     	;# 
   389  000D                     	;# 
   390  000E                     	;# 
   391  000E                     	;# 
   392  000F                     	;# 
   393  0010                     	;# 
   394  0011                     	;# 
   395  0012                     	;# 
   396  0013                     	;# 
   397  0014                     	;# 
   398  0015                     	;# 
   399  0015                     	;# 
   400  0016                     	;# 
   401  0017                     	;# 
   402  0018                     	;# 
   403  0019                     	;# 
   404  001A                     	;# 
   405  001B                     	;# 
   406  001B                     	;# 
   407  001C                     	;# 
   408  001D                     	;# 
   409  001E                     	;# 
   410  001F                     	;# 
   411  0081                     	;# 
   412  0085                     	;# 
   413  0086                     	;# 
   414  0087                     	;# 
   415  0088                     	;# 
   416  0089                     	;# 
   417  008C                     	;# 
   418  008D                     	;# 
   419  008E                     	;# 
   420  0091                     	;# 
   421  0092                     	;# 
   422  0093                     	;# 
   423  0094                     	;# 
   424  0098                     	;# 
   425  0099                     	;# 
   426  009C                     	;# 
   427  009D                     	;# 
   428  009E                     	;# 
   429  009F                     	;# 
   430  010C                     	;# 
   431  010D                     	;# 
   432  010E                     	;# 
   433  010F                     	;# 
   434  018C                     	;# 
   435  018D                     	;# 
   436  0000                     	;# 
   437  0001                     	;# 
   438  0002                     	;# 
   439  0003                     	;# 
   440  0004                     	;# 
   441  0005                     	;# 
   442  0006                     	;# 
   443  0007                     	;# 
   444  0008                     	;# 
   445  0009                     	;# 
   446  000A                     	;# 
   447  000B                     	;# 
   448  000C                     	;# 
   449  000D                     	;# 
   450  000E                     	;# 
   451  000E                     	;# 
   452  000F                     	;# 
   453  0010                     	;# 
   454  0011                     	;# 
   455  0012                     	;# 
   456  0013                     	;# 
   457  0014                     	;# 
   458  0015                     	;# 
   459  0015                     	;# 
   460  0016                     	;# 
   461  0017                     	;# 
   462  0018                     	;# 
   463  0019                     	;# 
   464  001A                     	;# 
   465  001B                     	;# 
   466  001B                     	;# 
   467  001C                     	;# 
   468  001D                     	;# 
   469  001E                     	;# 
   470  001F                     	;# 
   471  0081                     	;# 
   472  0085                     	;# 
   473  0086                     	;# 
   474  0087                     	;# 
   475  0088                     	;# 
   476  0089                     	;# 
   477  008C                     	;# 
   478  008D                     	;# 
   479  008E                     	;# 
   480  0091                     	;# 
   481  0092                     	;# 
   482  0093                     	;# 
   483  0094                     	;# 
   484  0098                     	;# 
   485  0099                     	;# 
   486  009C                     	;# 
   487  009D                     	;# 
   488  009E                     	;# 
   489  009F                     	;# 
   490  010C                     	;# 
   491  010D                     	;# 
   492  010E                     	;# 
   493  010F                     	;# 
   494  018C                     	;# 
   495  018D                     	;# 
   496                           
   497                           	psect	idataBANK0
   498  006C                     __pidataBANK0:	
   499                           
   500                           ;initializer for _SSD_LOT_ARR
   501  006C  343F               	retlw	63
   502  006D  3406               	retlw	6
   503  006E  345B               	retlw	91
   504  006F  344F               	retlw	79
   505  0070  3466               	retlw	102
   506  0071  346D               	retlw	109
   507  0072  347D               	retlw	125
   508  0073  3407               	retlw	7
   509  0074  347F               	retlw	127
   510  0075  346F               	retlw	111
   511  0076  3400               	retlw	0
   512  0008                     _PORTD	set	8
   513  0006                     _PORTB	set	6
   514  0089                     _TRISE	set	137
   515  0087                     _TRISC	set	135
   516  0085                     _TRISA	set	133
   517  0088                     _TRISD	set	136
   518  0086                     _TRISB	set	134
   519                           
   520                           ; #config settings
   521  0000                     
   522                           	psect	cinit
   523  07E6                     start_initialization:	
   524  07E6                     __initialization:	
   525                           
   526                           ; Initialize objects allocated to BANK0
   527  07E6  1383               	bcf	3,7	;select IRP bank0
   528  07E7  3041               	movlw	low (__pdataBANK0+11)
   529  07E8  00FD               	movwf	btemp+-1
   530  07E9  3000               	movlw	high __pidataBANK0
   531  07EA  00FE               	movwf	btemp
   532  07EB  306C               	movlw	low __pidataBANK0
   533  07EC  00FF               	movwf	btemp+1
   534  07ED  3036               	movlw	low __pdataBANK0
   535  07EE  0084               	movwf	4
   536  07EF  120A  118A  207B  120A  118A  	fcall	init_ram0
   537                           
   538                           ; Clear objects allocated to BANK0
   539  07F4  3020               	movlw	low __pbssBANK0
   540  07F5  0084               	movwf	4
   541  07F6  3036               	movlw	low (__pbssBANK0+22)
   542  07F7  120A  118A  2051  120A  118A  	fcall	clear_ram0
   543  07FC                     end_of_initialization:	
   544                           ;End of C runtime variable initialization code
   545                           
   546  07FC                     __end_of__initialization:	
   547  07FC  0183               	clrf	3
   548  07FD  120A  118A  2C0E   	ljmp	_main	;jump to C main() function
   549                           
   550                           	psect	bssBANK0
   551  0020                     __pbssBANK0:	
   552  0020                     _SW_DATA:	
   553  0020                     	ds	9
   554  0029                     _Buffer:	
   555  0029                     	ds	4
   556  002D                     _Disp_Blink_counter:	
   557  002D                     	ds	1
   558  002E                     _CurrentMode:	
   559  002E                     	ds	1
   560  002F                     _Second_Dot_State:	
   561  002F                     	ds	1
   562  0030                     _currentSSD:	
   563  0030                     	ds	1
   564  0031                     _CurrentTime:	
   565  0031                     	ds	5
   566                           
   567                           	psect	dataBANK0
   568  0036                     __pdataBANK0:	
   569  0036                     _SSD_LOT_ARR:	
   570  0036                     	ds	11
   571                           
   572                           	psect	inittext
   573  0077                     init_fetch0:	
   574                           ;	Called with low address in FSR and high address in W
   575                           
   576  0077  087E               	movf	btemp,w
   577  0078  008A               	movwf	10
   578  0079  087F               	movf	btemp+1,w
   579  007A  0082               	movwf	2
   580  007B                     init_ram0:	
   581                           ;Called with:
   582                           ;	high address of idata address in btemp 
   583                           ;	low address of idata address in btemp+1 
   584                           ;	low address of data in FSR
   585                           ;	high address + 1 of data in btemp-1
   586                           
   587  007B  120A  118A  2077  120A  118A  	fcall	init_fetch0
   588  0080  0080               	movwf	0
   589  0081  0A84               	incf	4,f
   590  0082  0804               	movf	4,w
   591  0083  067D               	xorwf	btemp+-1,w
   592  0084  1903               	btfsc	3,2
   593  0085  3400               	retlw	0
   594  0086  0AFF               	incf	btemp+1,f
   595  0087  1903               	btfsc	3,2
   596  0088  0AFE               	incf	btemp,f
   597  0089  287B               	goto	init_ram0
   598                           
   599                           	psect	clrtext
   600  0051                     clear_ram0:	
   601                           ;	Called with FSR containing the base address, and
   602                           ;	W with the last address+1
   603                           
   604  0051  0064               	clrwdt	;clear the watchdog before getting into this loop
   605  0052                     clrloop0:	
   606  0052  0180               	clrf	0	;clear RAM location pointed to by FSR
   607  0053  0A84               	incf	4,f	;increment pointer
   608  0054  0604               	xorwf	4,w	;XOR with final address
   609  0055  1903               	btfsc	3,2	;have we reached the end yet?
   610  0056  3400               	retlw	0	;all done for this memory range, return
   611  0057  0604               	xorwf	4,w	;XOR again to restore value
   612  0058  2852               	goto	clrloop0	;do the next byte
   613                           
   614                           	psect	cstackCOMMON
   615  0070                     __pcstackCOMMON:	
   616  0070                     ?_SSD_Init:	
   617  0070                     ?_SW_Init:	
   618                           ; 1 bytes @ 0x0
   619                           
   620  0070                     ?_Disp_Init:	
   621                           ; 1 bytes @ 0x0
   622                           
   623  0070                     ?_CLOCK_Init:	
   624                           ; 1 bytes @ 0x0
   625                           
   626  0070                     ??_CLOCK_Init:	
   627                           ; 1 bytes @ 0x0
   628                           
   629  0070                     ?_SW_Update:	
   630                           ; 1 bytes @ 0x0
   631                           
   632  0070                     ?_CLOCK_Update:	
   633                           ; 1 bytes @ 0x0
   634                           
   635  0070                     ?_Disp_Update:	
   636                           ; 1 bytes @ 0x0
   637                           
   638  0070                     ?_SSD_Update:	
   639                           ; 1 bytes @ 0x0
   640                           
   641  0070                     ?_SSD_Disable:	
   642                           ; 1 bytes @ 0x0
   643                           
   644  0070                     ??_SSD_Disable:	
   645                           ; 1 bytes @ 0x0
   646                           
   647  0070                     ?_SSD_Data_write:	
   648                           ; 1 bytes @ 0x0
   649                           
   650  0070                     ??_SSD_Data_write:	
   651                           ; 1 bytes @ 0x0
   652                           
   653  0070                     ?_SSD_Enable:	
   654                           ; 1 bytes @ 0x0
   655                           
   656  0070                     ??_SSD_Enable:	
   657                           ; 1 bytes @ 0x0
   658                           
   659  0070                     ?_SW_UpdateState:	
   660                           ; 1 bytes @ 0x0
   661                           
   662  0070                     ?_set_mode_process:	
   663                           ; 1 bytes @ 0x0
   664                           
   665  0070                     ?_DISP_Normal_Operation:	
   666                           ; 1 bytes @ 0x0
   667                           
   668  0070                     ?_DISP_Set_Hours_Operation:	
   669                           ; 1 bytes @ 0x0
   670                           
   671  0070                     ?_DISP_Set_Minutes_Operation:	
   672                           ; 1 bytes @ 0x0
   673                           
   674  0070                     ?_GPIO_Init_Port:	
   675                           ; 1 bytes @ 0x0
   676                           
   677  0070                     ?_GPIO_Init_Pin:	
   678                           ; 1 bytes @ 0x0
   679                           
   680  0070                     ?_main:	
   681                           ; 1 bytes @ 0x0
   682                           
   683  0070                     ?_SSD_Toggle_Second_Dot:	
   684                           ; 1 bytes @ 0x0
   685                           
   686  0070                     ??_SSD_Toggle_Second_Dot:	
   687                           ; 1 bytes @ 0x0
   688                           
   689  0070                     ?_SW_GetState:	
   690                           ; 1 bytes @ 0x0
   691                           
   692  0070                     ?_CLOCK_GetMode:	
   693                           ; 1 bytes @ 0x0
   694                           
   695  0070                     ??_CLOCK_GetMode:	
   696                           ; 1 bytes @ 0x0
   697                           
   698  0070                     ?_CLOCK_GetTime:	
   699                           ; 1 bytes @ 0x0
   700                           
   701  0070                     ??_CLOCK_GetTime:	
   702                           ; 1 bytes @ 0x0
   703                           
   704  0070                     ?_CLOCK_Increment:	
   705                           ; 1 bytes @ 0x0
   706                           
   707  0070                     ??_CLOCK_Increment:	
   708                           ; 1 bytes @ 0x0
   709                           
   710  0070                     ?___bmul:	
   711                           ; 1 bytes @ 0x0
   712                           
   713  0070                     ?___awdiv:	
   714                           ; 1 bytes @ 0x0
   715                           
   716  0070                     ?___awmod:	
   717                           ; 2 bytes @ 0x0
   718                           
   719  0070                     ___bmul@multiplicand:	
   720                           ; 2 bytes @ 0x0
   721                           
   722  0070                     GPIO_Init_Port@DirRegAddress:	
   723                           ; 1 bytes @ 0x0
   724                           
   725  0070                     GPIO_Init_Pin@DirRegAddress:	
   726                           ; 2 bytes @ 0x0
   727                           
   728  0070                     ___awdiv@divisor:	
   729                           ; 2 bytes @ 0x0
   730                           
   731  0070                     ___awmod@divisor:	
   732                           ; 2 bytes @ 0x0
   733                           
   734                           
   735                           ; 2 bytes @ 0x0
   736  0070                     	ds	1
   737  0071                     ??___bmul:	
   738  0071                     CLOCK_GetTime@t:	
   739                           ; 1 bytes @ 0x1
   740                           
   741                           
   742                           ; 1 bytes @ 0x1
   743  0071                     	ds	1
   744  0072                     GPIO_Init_Port@dir:	
   745  0072                     GPIO_Init_Pin@pin_number:	
   746                           ; 1 bytes @ 0x2
   747                           
   748  0072                     SSD_Disable@s:	
   749                           ; 1 bytes @ 0x2
   750                           
   751  0072                     SSD_Enable@s:	
   752                           ; 1 bytes @ 0x2
   753                           
   754  0072                     ___bmul@product:	
   755                           ; 1 bytes @ 0x2
   756                           
   757  0072                     ___awdiv@dividend:	
   758                           ; 1 bytes @ 0x2
   759                           
   760  0072                     ___awmod@dividend:	
   761                           ; 2 bytes @ 0x2
   762                           
   763                           
   764                           ; 2 bytes @ 0x2
   765  0072                     	ds	1
   766  0073                     ??_SSD_Update:	
   767  0073                     ??_GPIO_Init_Port:	
   768                           ; 1 bytes @ 0x3
   769                           
   770  0073                     GPIO_Init_Pin@dir:	
   771                           ; 1 bytes @ 0x3
   772                           
   773  0073                     ___bmul@multiplier:	
   774                           ; 1 bytes @ 0x3
   775                           
   776                           
   777                           ; 1 bytes @ 0x3
   778  0073                     	ds	1
   779  0074                     ??_SW_UpdateState:	
   780  0074                     ??_GPIO_Init_Pin:	
   781                           ; 1 bytes @ 0x4
   782                           
   783  0074                     ??_SW_GetState:	
   784                           ; 1 bytes @ 0x4
   785                           
   786  0074                     ??___awdiv:	
   787                           ; 1 bytes @ 0x4
   788                           
   789  0074                     ??___awmod:	
   790                           ; 1 bytes @ 0x4
   791                           
   792                           
   793                           ; 1 bytes @ 0x4
   794  0074                     	ds	1
   795  0075                     ___awdiv@counter:	
   796  0075                     ___awmod@counter:	
   797                           ; 1 bytes @ 0x5
   798                           
   799  0075                     _GPIO_Init_Port$31:	
   800                           ; 1 bytes @ 0x5
   801                           
   802                           
   803                           ; 2 bytes @ 0x5
   804  0075                     	ds	1
   805  0076                     SW_GetState@sw:	
   806  0076                     ___awdiv@sign:	
   807                           ; 1 bytes @ 0x6
   808                           
   809  0076                     ___awmod@sign:	
   810                           ; 1 bytes @ 0x6
   811                           
   812                           
   813                           ; 1 bytes @ 0x6
   814  0076                     	ds	1
   815  0077                     SW_GetState@ret:	
   816  0077                     SW_UpdateState@sw:	
   817                           ; 1 bytes @ 0x7
   818                           
   819  0077                     ___awdiv@quotient:	
   820                           ; 1 bytes @ 0x7
   821                           
   822                           
   823                           ; 2 bytes @ 0x7
   824  0077                     	ds	1
   825  0078                     ??_SSD_Init:	
   826  0078                     ??_SW_Init:	
   827                           ; 1 bytes @ 0x8
   828                           
   829  0078                     ??_SW_Update:	
   830                           ; 1 bytes @ 0x8
   831                           
   832  0078                     ??_set_mode_process:	
   833                           ; 1 bytes @ 0x8
   834                           
   835                           
   836                           ; 1 bytes @ 0x8
   837  0078                     	ds	1
   838  0079                     ?_SSD_Set_Symbol:	
   839  0079                     SSD_Set_Symbol@index:	
   840                           ; 1 bytes @ 0x9
   841                           
   842  0079                     set_mode_process@var:	
   843                           ; 1 bytes @ 0x9
   844                           
   845                           
   846                           ; 1 bytes @ 0x9
   847  0079                     	ds	1
   848  007A                     ??_SSD_Set_Symbol:	
   849  007A                     ??_CLOCK_Update:	
   850                           ; 1 bytes @ 0xA
   851                           
   852                           
   853                           ; 1 bytes @ 0xA
   854  007A                     	ds	1
   855  007B                     SSD_Set_Symbol@symbol:	
   856                           
   857                           ; 1 bytes @ 0xB
   858  007B                     	ds	1
   859  007C                     ??_Disp_Init:	
   860  007C                     ??_Disp_Update:	
   861                           ; 1 bytes @ 0xC
   862                           
   863                           
   864                           ; 1 bytes @ 0xC
   865  007C                     	ds	2
   866                           
   867                           	psect	cstackBANK0
   868  0041                     __pcstackBANK0:	
   869  0041                     ??_DISP_Normal_Operation:	
   870  0041                     ??_DISP_Set_Hours_Operation:	
   871                           ; 1 bytes @ 0x0
   872                           
   873  0041                     ??_DISP_Set_Minutes_Operation:	
   874                           ; 1 bytes @ 0x0
   875                           
   876                           
   877                           ; 1 bytes @ 0x0
   878  0041                     	ds	3
   879  0044                     DISP_Normal_Operation@tt:	
   880  0044                     DISP_Set_Hours_Operation@tt:	
   881                           ; 5 bytes @ 0x3
   882                           
   883  0044                     DISP_Set_Minutes_Operation@tt:	
   884                           ; 5 bytes @ 0x3
   885                           
   886                           
   887                           ; 5 bytes @ 0x3
   888  0044                     	ds	5
   889  0049                     ??_main:	
   890                           
   891                           ; 1 bytes @ 0x8
   892  0049                     	ds	2
   893                           
   894                           	psect	maintext
   895  040E                     __pmaintext:	
   896 ;;
   897 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   898 ;;
   899 ;; *************** function _main *****************
   900 ;; Defined at:
   901 ;;		line 17 in file "Digital_Clock.c"
   902 ;; Parameters:    Size  Location     Type
   903 ;;		None
   904 ;; Auto vars:     Size  Location     Type
   905 ;;  i               1    0        unsigned char 
   906 ;; Return value:  Size  Location     Type
   907 ;;                  1    wreg      void 
   908 ;; Registers used:
   909 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   910 ;; Tracked objects:
   911 ;;		On entry : B00/0
   912 ;;		On exit  : 0/0
   913 ;;		Unchanged: 0/0
   914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   915 ;;      Params:         0       0       0       0       0
   916 ;;      Locals:         0       1       0       0       0
   917 ;;      Temps:          0       2       0       0       0
   918 ;;      Totals:         0       3       0       0       0
   919 ;;Total ram usage:        3 bytes
   920 ;; Hardware stack levels required when called:    4
   921 ;; This function calls:
   922 ;;		_CLOCK_Init
   923 ;;		_CLOCK_Update
   924 ;;		_Disp_Init
   925 ;;		_Disp_Update
   926 ;;		_SSD_Init
   927 ;;		_SSD_Set_Symbol
   928 ;;		_SSD_Update
   929 ;;		_SW_Init
   930 ;;		_SW_Update
   931 ;; This function is called by:
   932 ;;		Startup code after reset
   933 ;; This function uses a non-reentrant model
   934 ;;
   935                           
   936                           
   937                           ;psect for function _main
   938  040E                     _main:	
   939  040E                     l1819:	
   940                           ;incstack = 0
   941                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   942                           
   943  040E                     l1821:	
   944                           
   945                           ;Digital_Clock.c: 20:     SSD_Init();
   946  040E  120A  118A  235D  120A  118A  	fcall	_SSD_Init
   947  0413                     l1823:	
   948                           
   949                           ;Digital_Clock.c: 21:     SW_Init();
   950  0413  120A  118A  2269  120A  118A  	fcall	_SW_Init
   951  0418                     l1825:	
   952                           
   953                           ;Digital_Clock.c: 22:     Disp_Init();
   954  0418  120A  118A  2162  120A  118A  	fcall	_Disp_Init
   955  041D                     l1827:	
   956                           
   957                           ;Digital_Clock.c: 25:     SSD_Set_Symbol(i,SSD_MINUTES_UNITS);
   958  041D  01F9               	clrf	SSD_Set_Symbol@index
   959  041E  3000               	movlw	0
   960  041F  120A  118A  2062  120A  118A  	fcall	_SSD_Set_Symbol
   961  0424                     l1829:	
   962                           
   963                           ;Digital_Clock.c: 26:     SSD_Set_Symbol(2,SSD_MINUTES_TENS);
   964  0424  01F9               	clrf	SSD_Set_Symbol@index
   965  0425  0AF9               	incf	SSD_Set_Symbol@index,f
   966  0426  3002               	movlw	2
   967  0427  120A  118A  2062  120A  118A  	fcall	_SSD_Set_Symbol
   968  042C                     l1831:	
   969                           
   970                           ;Digital_Clock.c: 27:     SSD_Set_Symbol(3,SSD_HOURS_UNITS);
   971  042C  3002               	movlw	2
   972  042D  1283               	bcf	3,5	;RP0=0, select bank0
   973  042E  1303               	bcf	3,6	;RP1=0, select bank0
   974  042F  00C9               	movwf	??_main
   975  0430  0849               	movf	??_main,w
   976  0431  00F9               	movwf	SSD_Set_Symbol@index
   977  0432  3003               	movlw	3
   978  0433  120A  118A  2062  120A  118A  	fcall	_SSD_Set_Symbol
   979  0438                     l1833:	
   980                           
   981                           ;Digital_Clock.c: 28:     SSD_Set_Symbol(4,SSD_HOURS_TENS);
   982  0438  3003               	movlw	3
   983  0439  1283               	bcf	3,5	;RP0=0, select bank0
   984  043A  1303               	bcf	3,6	;RP1=0, select bank0
   985  043B  00C9               	movwf	??_main
   986  043C  0849               	movf	??_main,w
   987  043D  00F9               	movwf	SSD_Set_Symbol@index
   988  043E  3004               	movlw	4
   989  043F  120A  118A  2062  120A  118A  	fcall	_SSD_Set_Symbol
   990  0444                     l1835:	
   991                           
   992                           ;Digital_Clock.c: 31:     CLOCK_Init();
   993  0444  120A  118A  2059  120A  118A  	fcall	_CLOCK_Init
   994  0449                     l1837:	
   995                           
   996                           ;Digital_Clock.c: 35:     {;Digital_Clock.c: 36:         _delay((unsigned long)((5)*(800
      +                          0000/4000.0)));
   997  0449  300D               	movlw	13
   998  044A  1283               	bcf	3,5	;RP0=0, select bank0
   999  044B  1303               	bcf	3,6	;RP1=0, select bank0
  1000  044C  00CA               	movwf	??_main+1
  1001  044D  30FB               	movlw	251
  1002  044E  00C9               	movwf	??_main
  1003  044F                     u1237:	
  1004  044F  0BC9               	decfsz	??_main,f
  1005  0450  2C4F               	goto	u1237
  1006  0451  0BCA               	decfsz	??_main+1,f
  1007  0452  2C4F               	goto	u1237
  1008  0453                     l1839:	
  1009                           
  1010                           ;Digital_Clock.c: 37:         SW_Update();
  1011  0453  120A  118A  222A  120A  118A  	fcall	_SW_Update
  1012  0458                     l1841:	
  1013                           
  1014                           ;Digital_Clock.c: 38:         CLOCK_Update();
  1015  0458  120A  118A  2306  120A  118A  	fcall	_CLOCK_Update
  1016  045D                     l1843:	
  1017                           
  1018                           ;Digital_Clock.c: 39:         Disp_Update();
  1019  045D  120A  118A  2137  120A  118A  	fcall	_Disp_Update
  1020  0462                     l1845:	
  1021                           
  1022                           ;Digital_Clock.c: 40:         SSD_Update();
  1023  0462  120A  118A  20F0  120A  118A  	fcall	_SSD_Update
  1024  0467  2C49               	goto	l1837
  1025  0468  120A  118A  2800   	ljmp	start
  1026  046B                     __end_of_main:	
  1027                           
  1028                           	psect	text1
  1029  022A                     __ptext1:	
  1030 ;; *************** function _SW_Update *****************
  1031 ;; Defined at:
  1032 ;;		line 76 in file "SW.c"
  1033 ;; Parameters:    Size  Location     Type
  1034 ;;		None
  1035 ;; Auto vars:     Size  Location     Type
  1036 ;;		None
  1037 ;; Return value:  Size  Location     Type
  1038 ;;                  1    wreg      void 
  1039 ;; Registers used:
  1040 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1041 ;; Tracked objects:
  1042 ;;		On entry : 0/0
  1043 ;;		On exit  : 0/0
  1044 ;;		Unchanged: 0/0
  1045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1046 ;;      Params:         0       0       0       0       0
  1047 ;;      Locals:         0       0       0       0       0
  1048 ;;      Temps:          2       0       0       0       0
  1049 ;;      Totals:         2       0       0       0       0
  1050 ;;Total ram usage:        2 bytes
  1051 ;; Hardware stack levels used:    1
  1052 ;; Hardware stack levels required when called:    2
  1053 ;; This function calls:
  1054 ;;		_SW_UpdateState
  1055 ;; This function is called by:
  1056 ;;		_main
  1057 ;; This function uses a non-reentrant model
  1058 ;;
  1059                           
  1060                           
  1061                           ;psect for function _SW_Update
  1062  022A                     _SW_Update:	
  1063  022A                     l1741:	
  1064                           ;incstack = 0
  1065                           ; Regs used in _SW_Update: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1066                           
  1067                           
  1068                           ;SW.c: 82:     SW_DATA[SW_PLUS].samples[0] = SW_DATA[SW_PLUS].samples[1];
  1069  022A  1283               	bcf	3,5	;RP0=0, select bank0
  1070  022B  1303               	bcf	3,6	;RP1=0, select bank0
  1071  022C  0821               	movf	_SW_DATA+1,w
  1072  022D  00F8               	movwf	??_SW_Update
  1073  022E  0878               	movf	??_SW_Update,w
  1074  022F  00A0               	movwf	_SW_DATA
  1075  0230                     l1743:	
  1076                           
  1077                           ;SW.c: 83:     SW_DATA[SW_PLUS].samples[1] = (((PORTB) >> (0))& 1);
  1078  0230  0806               	movf	6,w	;volatile
  1079  0231  3901               	andlw	1
  1080  0232  00F8               	movwf	??_SW_Update
  1081  0233  0878               	movf	??_SW_Update,w
  1082  0234  00A1               	movwf	_SW_DATA+1
  1083  0235                     l1745:	
  1084                           
  1085                           ;SW.c: 85:     SW_UpdateState(SW_PLUS);
  1086  0235  3000               	movlw	0
  1087  0236  120A  118A  26ED  120A  118A  	fcall	_SW_UpdateState
  1088  023B                     l1747:	
  1089                           
  1090                           ;SW.c: 87:     SW_DATA[SW_MINUS].samples[0] = SW_DATA[SW_PLUS].samples[1];
  1091  023B  1283               	bcf	3,5	;RP0=0, select bank0
  1092  023C  1303               	bcf	3,6	;RP1=0, select bank0
  1093  023D  0821               	movf	_SW_DATA+1,w
  1094  023E  00F8               	movwf	??_SW_Update
  1095  023F  0878               	movf	??_SW_Update,w
  1096  0240  00A3               	movwf	_SW_DATA+3
  1097  0241                     l1749:	
  1098                           
  1099                           ;SW.c: 88:     SW_DATA[SW_MINUS].samples[1] = (((PORTB) >> (1))& 1);
  1100  0241  0806               	movf	6,w	;volatile
  1101  0242  00F8               	movwf	??_SW_Update
  1102  0243  1003               	clrc
  1103  0244  0C78               	rrf	??_SW_Update,w
  1104  0245  3901               	andlw	1
  1105  0246  00F9               	movwf	??_SW_Update+1
  1106  0247  0879               	movf	??_SW_Update+1,w
  1107  0248  00A4               	movwf	_SW_DATA+4
  1108  0249                     l1751:	
  1109                           
  1110                           ;SW.c: 90:     SW_UpdateState(SW_MINUS);
  1111  0249  3001               	movlw	1
  1112  024A  120A  118A  26ED  120A  118A  	fcall	_SW_UpdateState
  1113  024F                     l1753:	
  1114                           
  1115                           ;SW.c: 93:     SW_DATA[SW_SET].samples[0] = SW_DATA[SW_PLUS].samples[1];
  1116  024F  1283               	bcf	3,5	;RP0=0, select bank0
  1117  0250  1303               	bcf	3,6	;RP1=0, select bank0
  1118  0251  0821               	movf	_SW_DATA+1,w
  1119  0252  00F8               	movwf	??_SW_Update
  1120  0253  0878               	movf	??_SW_Update,w
  1121  0254  00A6               	movwf	_SW_DATA+6
  1122  0255                     l1755:	
  1123                           
  1124                           ;SW.c: 94:     SW_DATA[SW_SET].samples[1] = (((PORTB) >> (2))& 1);
  1125  0255  0806               	movf	6,w	;volatile
  1126  0256  00F8               	movwf	??_SW_Update
  1127  0257  3002               	movlw	2
  1128  0258                     u1195:	
  1129  0258  1003               	clrc
  1130  0259  0CF8               	rrf	??_SW_Update,f
  1131  025A  3EFF               	addlw	-1
  1132  025B  1D03               	skipz
  1133  025C  2A58               	goto	u1195
  1134  025D  0878               	movf	??_SW_Update,w
  1135  025E  3901               	andlw	1
  1136  025F  00F9               	movwf	??_SW_Update+1
  1137  0260  0879               	movf	??_SW_Update+1,w
  1138  0261  00A7               	movwf	_SW_DATA+7
  1139  0262                     l1757:	
  1140                           
  1141                           ;SW.c: 96:     SW_UpdateState(SW_SET);
  1142  0262  3002               	movlw	2
  1143  0263  120A  118A  26ED  120A  118A  	fcall	_SW_UpdateState
  1144  0268                     l134:	
  1145  0268  0008               	return
  1146  0269                     __end_of_SW_Update:	
  1147                           
  1148                           	psect	text2
  1149  06ED                     __ptext2:	
  1150 ;; *************** function _SW_UpdateState *****************
  1151 ;; Defined at:
  1152 ;;		line 99 in file "SW.c"
  1153 ;; Parameters:    Size  Location     Type
  1154 ;;  sw              1    wreg     enum E859
  1155 ;; Auto vars:     Size  Location     Type
  1156 ;;  sw              1    7[COMMON] enum E859
  1157 ;; Return value:  Size  Location     Type
  1158 ;;                  1    wreg      void 
  1159 ;; Registers used:
  1160 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1161 ;; Tracked objects:
  1162 ;;		On entry : 0/0
  1163 ;;		On exit  : 0/0
  1164 ;;		Unchanged: 0/0
  1165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1166 ;;      Params:         0       0       0       0       0
  1167 ;;      Locals:         1       0       0       0       0
  1168 ;;      Temps:          3       0       0       0       0
  1169 ;;      Totals:         4       0       0       0       0
  1170 ;;Total ram usage:        4 bytes
  1171 ;; Hardware stack levels used:    1
  1172 ;; Hardware stack levels required when called:    1
  1173 ;; This function calls:
  1174 ;;		___bmul
  1175 ;; This function is called by:
  1176 ;;		_SW_Update
  1177 ;; This function uses a non-reentrant model
  1178 ;;
  1179                           
  1180                           
  1181                           ;psect for function _SW_UpdateState
  1182  06ED                     _SW_UpdateState:	
  1183                           
  1184                           ;incstack = 0
  1185                           ; Regs used in _SW_UpdateState: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1186                           ;SW_UpdateState@sw stored from wreg
  1187  06ED  00F7               	movwf	SW_UpdateState@sw
  1188  06EE                     l1607:	
  1189                           
  1190                           ;SW.c: 99: void SW_UpdateState(SW_t sw);SW.c: 100: {;SW.c: 116:     switch(SW_DATA[sw].s
      +                          tate)
  1191  06EE  2FC2               	goto	l1635
  1192  06EF                     l1609:	
  1193                           
  1194                           ;SW.c: 120:             if(SW_DATA[sw].samples[0] == 1 && SW_DATA[sw].samples[1] == 1)
  1195  06EF  3003               	movlw	3
  1196  06F0  00F4               	movwf	??_SW_UpdateState
  1197  06F1  0874               	movf	??_SW_UpdateState,w
  1198  06F2  00F0               	movwf	___bmul@multiplicand
  1199  06F3  0877               	movf	SW_UpdateState@sw,w
  1200  06F4  120A  118A  209E  120A  118A  	fcall	___bmul
  1201  06F9  3E20               	addlw	(low (_SW_DATA| 0))& (0+255)
  1202  06FA  0084               	movwf	4
  1203  06FB  1383               	bcf	3,7	;select IRP bank0
  1204  06FC  0300               	decf	0,w
  1205  06FD  1D03               	btfss	3,2
  1206  06FE  2F00               	goto	u981
  1207  06FF  2F01               	goto	u980
  1208  0700                     u981:	
  1209  0700  2FE5               	goto	l148
  1210  0701                     u980:	
  1211  0701                     l1611:	
  1212  0701  3003               	movlw	3
  1213  0702  00F4               	movwf	??_SW_UpdateState
  1214  0703  0874               	movf	??_SW_UpdateState,w
  1215  0704  00F0               	movwf	___bmul@multiplicand
  1216  0705  0877               	movf	SW_UpdateState@sw,w
  1217  0706  120A  118A  209E  120A  118A  	fcall	___bmul
  1218  070B  3E21               	addlw	(low ((_SW_DATA| 0+1)))& (0+255)
  1219  070C  0084               	movwf	4
  1220  070D  1383               	bcf	3,7	;select IRP bank0
  1221  070E  0300               	decf	0,w
  1222  070F  1D03               	btfss	3,2
  1223  0710  2F12               	goto	u991
  1224  0711  2F13               	goto	u990
  1225  0712                     u991:	
  1226  0712  2FE5               	goto	l148
  1227  0713                     u990:	
  1228  0713                     l1613:	
  1229                           
  1230                           ;SW.c: 121:                 SW_DATA[sw].state = SW_RELEASED;
  1231  0713  3003               	movlw	3
  1232  0714  00F4               	movwf	??_SW_UpdateState
  1233  0715  0874               	movf	??_SW_UpdateState,w
  1234  0716  00F0               	movwf	___bmul@multiplicand
  1235  0717  0877               	movf	SW_UpdateState@sw,w
  1236  0718  120A  118A  209E  120A  118A  	fcall	___bmul
  1237  071D  3E22               	addlw	(low ((_SW_DATA| 0+2)))& (0+255)
  1238  071E  0084               	movwf	4
  1239  071F  1383               	bcf	3,7	;select IRP bank0
  1240  0720  0180               	clrf	0
  1241  0721  2FE5               	goto	l148
  1242  0722                     l1615:	
  1243                           
  1244                           ;SW.c: 124:             if(SW_DATA[sw].samples[0] == 0 && SW_DATA[sw].samples[1] == 0)
  1245  0722  3003               	movlw	3
  1246  0723  00F4               	movwf	??_SW_UpdateState
  1247  0724  0874               	movf	??_SW_UpdateState,w
  1248  0725  00F0               	movwf	___bmul@multiplicand
  1249  0726  0877               	movf	SW_UpdateState@sw,w
  1250  0727  120A  118A  209E  120A  118A  	fcall	___bmul
  1251  072C  3E20               	addlw	(low (_SW_DATA| 0))& (0+255)
  1252  072D  0084               	movwf	4
  1253  072E  1383               	bcf	3,7	;select IRP bank0
  1254  072F  0800               	movf	0,w
  1255  0730  1D03               	btfss	3,2
  1256  0731  2F33               	goto	u1001
  1257  0732  2F34               	goto	u1000
  1258  0733                     u1001:	
  1259  0733  2FE5               	goto	l148
  1260  0734                     u1000:	
  1261  0734                     l1617:	
  1262  0734  3003               	movlw	3
  1263  0735  00F4               	movwf	??_SW_UpdateState
  1264  0736  0874               	movf	??_SW_UpdateState,w
  1265  0737  00F0               	movwf	___bmul@multiplicand
  1266  0738  0877               	movf	SW_UpdateState@sw,w
  1267  0739  120A  118A  209E  120A  118A  	fcall	___bmul
  1268  073E  3E21               	addlw	(low ((_SW_DATA| 0+1)))& (0+255)
  1269  073F  0084               	movwf	4
  1270  0740  1383               	bcf	3,7	;select IRP bank0
  1271  0741  0800               	movf	0,w
  1272  0742  1D03               	btfss	3,2
  1273  0743  2F45               	goto	u1011
  1274  0744  2F46               	goto	u1010
  1275  0745                     u1011:	
  1276  0745  2FE5               	goto	l148
  1277  0746                     u1010:	
  1278  0746                     l1619:	
  1279                           
  1280                           ;SW.c: 125:                 SW_DATA[sw].state = SW_PRE_PRESSED;
  1281  0746  3003               	movlw	3
  1282  0747  00F4               	movwf	??_SW_UpdateState
  1283  0748  0874               	movf	??_SW_UpdateState,w
  1284  0749  00F0               	movwf	___bmul@multiplicand
  1285  074A  0877               	movf	SW_UpdateState@sw,w
  1286  074B  120A  118A  209E  120A  118A  	fcall	___bmul
  1287  0750  3E22               	addlw	(low ((_SW_DATA| 0+2)))& (0+255)
  1288  0751  0084               	movwf	4
  1289  0752  1383               	bcf	3,7	;select IRP bank0
  1290  0753  0180               	clrf	0
  1291  0754  0A80               	incf	0,f
  1292  0755  2FE5               	goto	l148
  1293  0756                     l1621:	
  1294                           
  1295                           ;SW.c: 128:             if(SW_DATA[sw].samples[0] == 0 && SW_DATA[sw].samples[1] == 0)
  1296  0756  3003               	movlw	3
  1297  0757  00F4               	movwf	??_SW_UpdateState
  1298  0758  0874               	movf	??_SW_UpdateState,w
  1299  0759  00F0               	movwf	___bmul@multiplicand
  1300  075A  0877               	movf	SW_UpdateState@sw,w
  1301  075B  120A  118A  209E  120A  118A  	fcall	___bmul
  1302  0760  3E20               	addlw	(low (_SW_DATA| 0))& (0+255)
  1303  0761  0084               	movwf	4
  1304  0762  1383               	bcf	3,7	;select IRP bank0
  1305  0763  0800               	movf	0,w
  1306  0764  1D03               	btfss	3,2
  1307  0765  2F67               	goto	u1021
  1308  0766  2F68               	goto	u1020
  1309  0767                     u1021:	
  1310  0767  2FE5               	goto	l148
  1311  0768                     u1020:	
  1312  0768                     l1623:	
  1313  0768  3003               	movlw	3
  1314  0769  00F4               	movwf	??_SW_UpdateState
  1315  076A  0874               	movf	??_SW_UpdateState,w
  1316  076B  00F0               	movwf	___bmul@multiplicand
  1317  076C  0877               	movf	SW_UpdateState@sw,w
  1318  076D  120A  118A  209E  120A  118A  	fcall	___bmul
  1319  0772  3E21               	addlw	(low ((_SW_DATA| 0+1)))& (0+255)
  1320  0773  0084               	movwf	4
  1321  0774  1383               	bcf	3,7	;select IRP bank0
  1322  0775  0800               	movf	0,w
  1323  0776  1D03               	btfss	3,2
  1324  0777  2F79               	goto	u1031
  1325  0778  2F7A               	goto	u1030
  1326  0779                     u1031:	
  1327  0779  2FE5               	goto	l148
  1328  077A                     u1030:	
  1329  077A                     l1625:	
  1330                           
  1331                           ;SW.c: 129:                 SW_DATA[sw].state = SW_PRESSED;
  1332  077A  3002               	movlw	2
  1333  077B  00F4               	movwf	??_SW_UpdateState
  1334  077C  3003               	movlw	3
  1335  077D  00F5               	movwf	??_SW_UpdateState+1
  1336  077E  0875               	movf	??_SW_UpdateState+1,w
  1337  077F  00F0               	movwf	___bmul@multiplicand
  1338  0780  0877               	movf	SW_UpdateState@sw,w
  1339  0781  120A  118A  209E  120A  118A  	fcall	___bmul
  1340  0786  3E22               	addlw	(low ((_SW_DATA| 0+2)))& (0+255)
  1341  0787  0084               	movwf	4
  1342  0788  0874               	movf	??_SW_UpdateState,w
  1343  0789  1383               	bcf	3,7	;select IRP bank0
  1344  078A  0080               	movwf	0
  1345  078B  2FE5               	goto	l148
  1346  078C                     l1627:	
  1347                           
  1348                           ;SW.c: 132:             if(SW_DATA[sw].samples[0] == 1 && SW_DATA[sw].samples[1] == 1)
  1349  078C  3003               	movlw	3
  1350  078D  00F4               	movwf	??_SW_UpdateState
  1351  078E  0874               	movf	??_SW_UpdateState,w
  1352  078F  00F0               	movwf	___bmul@multiplicand
  1353  0790  0877               	movf	SW_UpdateState@sw,w
  1354  0791  120A  118A  209E  120A  118A  	fcall	___bmul
  1355  0796  3E20               	addlw	(low (_SW_DATA| 0))& (0+255)
  1356  0797  0084               	movwf	4
  1357  0798  1383               	bcf	3,7	;select IRP bank0
  1358  0799  0300               	decf	0,w
  1359  079A  1D03               	btfss	3,2
  1360  079B  2F9D               	goto	u1041
  1361  079C  2F9E               	goto	u1040
  1362  079D                     u1041:	
  1363  079D  2FE5               	goto	l148
  1364  079E                     u1040:	
  1365  079E                     l1629:	
  1366  079E  3003               	movlw	3
  1367  079F  00F4               	movwf	??_SW_UpdateState
  1368  07A0  0874               	movf	??_SW_UpdateState,w
  1369  07A1  00F0               	movwf	___bmul@multiplicand
  1370  07A2  0877               	movf	SW_UpdateState@sw,w
  1371  07A3  120A  118A  209E  120A  118A  	fcall	___bmul
  1372  07A8  3E21               	addlw	(low ((_SW_DATA| 0+1)))& (0+255)
  1373  07A9  0084               	movwf	4
  1374  07AA  1383               	bcf	3,7	;select IRP bank0
  1375  07AB  0300               	decf	0,w
  1376  07AC  1D03               	btfss	3,2
  1377  07AD  2FAF               	goto	u1051
  1378  07AE  2FB0               	goto	u1050
  1379  07AF                     u1051:	
  1380  07AF  2FE5               	goto	l148
  1381  07B0                     u1050:	
  1382  07B0                     l1631:	
  1383                           
  1384                           ;SW.c: 133:                 SW_DATA[sw].state = SW_PRE_RELEASED;
  1385  07B0  3003               	movlw	3
  1386  07B1  00F4               	movwf	??_SW_UpdateState
  1387  07B2  3003               	movlw	3
  1388  07B3  00F5               	movwf	??_SW_UpdateState+1
  1389  07B4  0875               	movf	??_SW_UpdateState+1,w
  1390  07B5  00F0               	movwf	___bmul@multiplicand
  1391  07B6  0877               	movf	SW_UpdateState@sw,w
  1392  07B7  120A  118A  209E  120A  118A  	fcall	___bmul
  1393  07BC  3E22               	addlw	(low ((_SW_DATA| 0+2)))& (0+255)
  1394  07BD  0084               	movwf	4
  1395  07BE  0874               	movf	??_SW_UpdateState,w
  1396  07BF  1383               	bcf	3,7	;select IRP bank0
  1397  07C0  0080               	movwf	0
  1398  07C1  2FE5               	goto	l148
  1399  07C2                     l1635:	
  1400  07C2  3003               	movlw	3
  1401  07C3  00F4               	movwf	??_SW_UpdateState
  1402  07C4  0874               	movf	??_SW_UpdateState,w
  1403  07C5  00F0               	movwf	___bmul@multiplicand
  1404  07C6  0877               	movf	SW_UpdateState@sw,w
  1405  07C7  120A  118A  209E  120A  118A  	fcall	___bmul
  1406  07CC  3E22               	addlw	(low ((_SW_DATA| 0+2)))& (0+255)
  1407  07CD  0084               	movwf	4
  1408  07CE  1383               	bcf	3,7	;select IRP bank0
  1409  07CF  0800               	movf	0,w
  1410  07D0  00F5               	movwf	??_SW_UpdateState+1
  1411  07D1  01F6               	clrf	??_SW_UpdateState+2
  1412                           
  1413                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1414                           ; Switch size 1, requested type "simple"
  1415                           ; Number of cases is 1, Range of values is 0 to 0
  1416                           ; switch strategies available:
  1417                           ; Name         Instructions Cycles
  1418                           ; simple_byte            4     3 (average)
  1419                           ; direct_byte           11     8 (fixed)
  1420                           ; jumptable            260     6 (fixed)
  1421                           ;	Chosen strategy is simple_byte
  1422  07D2  0876               	movf	??_SW_UpdateState+2,w
  1423  07D3  3A00               	xorlw	0	; case 0
  1424  07D4  1903               	skipnz
  1425  07D5  2FD7               	goto	l1967
  1426  07D6  2FE5               	goto	l148
  1427  07D7                     l1967:	
  1428                           
  1429                           ; Switch size 1, requested type "simple"
  1430                           ; Number of cases is 4, Range of values is 0 to 3
  1431                           ; switch strategies available:
  1432                           ; Name         Instructions Cycles
  1433                           ; simple_byte           13     7 (average)
  1434                           ; direct_byte           20     8 (fixed)
  1435                           ; jumptable            260     6 (fixed)
  1436                           ;	Chosen strategy is simple_byte
  1437  07D7  0875               	movf	??_SW_UpdateState+1,w
  1438  07D8  3A00               	xorlw	0	; case 0
  1439  07D9  1903               	skipnz
  1440  07DA  2F22               	goto	l1615
  1441  07DB  3A01               	xorlw	1	; case 1
  1442  07DC  1903               	skipnz
  1443  07DD  2F56               	goto	l1621
  1444  07DE  3A03               	xorlw	3	; case 2
  1445  07DF  1903               	skipnz
  1446  07E0  2F8C               	goto	l1627
  1447  07E1  3A01               	xorlw	1	; case 3
  1448  07E2  1903               	skipnz
  1449  07E3  2EEF               	goto	l1609
  1450  07E4  2FE5               	goto	l148
  1451  07E5                     l148:	
  1452  07E5  0008               	return
  1453  07E6                     __end_of_SW_UpdateState:	
  1454                           
  1455                           	psect	text3
  1456  0269                     __ptext3:	
  1457 ;; *************** function _SW_Init *****************
  1458 ;; Defined at:
  1459 ;;		line 47 in file "SW.c"
  1460 ;; Parameters:    Size  Location     Type
  1461 ;;		None
  1462 ;; Auto vars:     Size  Location     Type
  1463 ;;		None
  1464 ;; Return value:  Size  Location     Type
  1465 ;;                  1    wreg      void 
  1466 ;; Registers used:
  1467 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1468 ;; Tracked objects:
  1469 ;;		On entry : 0/0
  1470 ;;		On exit  : 0/0
  1471 ;;		Unchanged: 0/0
  1472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1473 ;;      Params:         0       0       0       0       0
  1474 ;;      Locals:         0       0       0       0       0
  1475 ;;      Temps:          3       0       0       0       0
  1476 ;;      Totals:         3       0       0       0       0
  1477 ;;Total ram usage:        3 bytes
  1478 ;; Hardware stack levels used:    1
  1479 ;; Hardware stack levels required when called:    1
  1480 ;; This function calls:
  1481 ;;		_GPIO_Init_Pin
  1482 ;; This function is called by:
  1483 ;;		_main
  1484 ;; This function uses a non-reentrant model
  1485 ;;
  1486                           
  1487                           
  1488                           ;psect for function _SW_Init
  1489  0269                     _SW_Init:	
  1490  0269                     l1713:	
  1491                           ;incstack = 0
  1492                           ; Regs used in _SW_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1493                           
  1494                           
  1495                           ;SW.c: 51:     GPIO_Init_Pin((TRISB),(0),(1));
  1496  0269  1683               	bsf	3,5	;RP0=1, select bank1
  1497  026A  1303               	bcf	3,6	;RP1=0, select bank1
  1498  026B  0806               	movf	6,w	;volatile
  1499  026C  00F8               	movwf	??_SW_Init
  1500  026D  01F9               	clrf	??_SW_Init+1
  1501  026E  0878               	movf	??_SW_Init,w
  1502  026F  00F0               	movwf	GPIO_Init_Pin@DirRegAddress
  1503  0270  0879               	movf	??_SW_Init+1,w
  1504  0271  00F1               	movwf	GPIO_Init_Pin@DirRegAddress+1
  1505  0272  01F2               	clrf	GPIO_Init_Pin@pin_number
  1506  0273  01F3               	clrf	GPIO_Init_Pin@dir
  1507  0274  0AF3               	incf	GPIO_Init_Pin@dir,f
  1508  0275  120A  118A  246B  120A  118A  	fcall	_GPIO_Init_Pin
  1509  027A                     l1715:	
  1510                           
  1511                           ;SW.c: 52:     SW_DATA[SW_PLUS].state = SW_RELEASED;
  1512  027A  1283               	bcf	3,5	;RP0=0, select bank0
  1513  027B  1303               	bcf	3,6	;RP1=0, select bank0
  1514  027C  01A2               	clrf	_SW_DATA+2
  1515  027D                     l1717:	
  1516                           
  1517                           ;SW.c: 53:     SW_DATA[SW_PLUS].samples[0] = 1;
  1518  027D  01A0               	clrf	_SW_DATA
  1519  027E  0AA0               	incf	_SW_DATA,f
  1520  027F                     l1719:	
  1521                           
  1522                           ;SW.c: 54:     SW_DATA[SW_PLUS].samples[1] = 1;
  1523  027F  01A1               	clrf	_SW_DATA+1
  1524  0280  0AA1               	incf	_SW_DATA+1,f
  1525  0281                     l1721:	
  1526                           
  1527                           ;SW.c: 56:     GPIO_Init_Pin((TRISB),(1),(1));
  1528  0281  1683               	bsf	3,5	;RP0=1, select bank1
  1529  0282  1303               	bcf	3,6	;RP1=0, select bank1
  1530  0283  0806               	movf	6,w	;volatile
  1531  0284  00F8               	movwf	??_SW_Init
  1532  0285  01F9               	clrf	??_SW_Init+1
  1533  0286  0878               	movf	??_SW_Init,w
  1534  0287  00F0               	movwf	GPIO_Init_Pin@DirRegAddress
  1535  0288  0879               	movf	??_SW_Init+1,w
  1536  0289  00F1               	movwf	GPIO_Init_Pin@DirRegAddress+1
  1537  028A  01F2               	clrf	GPIO_Init_Pin@pin_number
  1538  028B  0AF2               	incf	GPIO_Init_Pin@pin_number,f
  1539  028C  01F3               	clrf	GPIO_Init_Pin@dir
  1540  028D  0AF3               	incf	GPIO_Init_Pin@dir,f
  1541  028E  120A  118A  246B  120A  118A  	fcall	_GPIO_Init_Pin
  1542                           
  1543                           ;SW.c: 57:     SW_DATA[SW_MINUS].state = SW_RELEASED;
  1544  0293  1283               	bcf	3,5	;RP0=0, select bank0
  1545  0294  1303               	bcf	3,6	;RP1=0, select bank0
  1546  0295  01A5               	clrf	_SW_DATA+5
  1547  0296                     l1723:	
  1548                           
  1549                           ;SW.c: 58:     SW_DATA[SW_MINUS].samples[0] = 1;
  1550  0296  01A3               	clrf	_SW_DATA+3
  1551  0297  0AA3               	incf	_SW_DATA+3,f
  1552  0298                     l1725:	
  1553                           
  1554                           ;SW.c: 59:     SW_DATA[SW_MINUS].samples[1] = 1;
  1555  0298  01A4               	clrf	_SW_DATA+4
  1556  0299  0AA4               	incf	_SW_DATA+4,f
  1557  029A                     l1727:	
  1558                           
  1559                           ;SW.c: 61:     GPIO_Init_Pin((TRISB),(2),(1));
  1560  029A  1683               	bsf	3,5	;RP0=1, select bank1
  1561  029B  1303               	bcf	3,6	;RP1=0, select bank1
  1562  029C  0806               	movf	6,w	;volatile
  1563  029D  00F8               	movwf	??_SW_Init
  1564  029E  01F9               	clrf	??_SW_Init+1
  1565  029F  0878               	movf	??_SW_Init,w
  1566  02A0  00F0               	movwf	GPIO_Init_Pin@DirRegAddress
  1567  02A1  0879               	movf	??_SW_Init+1,w
  1568  02A2  00F1               	movwf	GPIO_Init_Pin@DirRegAddress+1
  1569  02A3  3002               	movlw	2
  1570  02A4  00FA               	movwf	??_SW_Init+2
  1571  02A5  087A               	movf	??_SW_Init+2,w
  1572  02A6  00F2               	movwf	GPIO_Init_Pin@pin_number
  1573  02A7  01F3               	clrf	GPIO_Init_Pin@dir
  1574  02A8  0AF3               	incf	GPIO_Init_Pin@dir,f
  1575  02A9  120A  118A  246B  120A  118A  	fcall	_GPIO_Init_Pin
  1576  02AE                     l1729:	
  1577                           
  1578                           ;SW.c: 62:     SW_DATA[SW_SET].state = SW_RELEASED;
  1579  02AE  1283               	bcf	3,5	;RP0=0, select bank0
  1580  02AF  1303               	bcf	3,6	;RP1=0, select bank0
  1581  02B0  01A8               	clrf	_SW_DATA+8
  1582  02B1                     l1731:	
  1583                           
  1584                           ;SW.c: 63:     SW_DATA[SW_SET].samples[0] = 1;
  1585  02B1  01A6               	clrf	_SW_DATA+6
  1586  02B2  0AA6               	incf	_SW_DATA+6,f
  1587  02B3                     l1733:	
  1588                           
  1589                           ;SW.c: 64:     SW_DATA[SW_SET].samples[1] = 1;
  1590  02B3  01A7               	clrf	_SW_DATA+7
  1591  02B4  0AA7               	incf	_SW_DATA+7,f
  1592  02B5                     l128:	
  1593  02B5  0008               	return
  1594  02B6                     __end_of_SW_Init:	
  1595                           
  1596                           	psect	text4
  1597  00F0                     __ptext4:	
  1598 ;; *************** function _SSD_Update *****************
  1599 ;; Defined at:
  1600 ;;		line 91 in file "SSD.c"
  1601 ;; Parameters:    Size  Location     Type
  1602 ;;		None
  1603 ;; Auto vars:     Size  Location     Type
  1604 ;;		None
  1605 ;; Return value:  Size  Location     Type
  1606 ;;                  1    wreg      void 
  1607 ;; Registers used:
  1608 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1609 ;; Tracked objects:
  1610 ;;		On entry : 0/0
  1611 ;;		On exit  : 0/0
  1612 ;;		Unchanged: 0/0
  1613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1614 ;;      Params:         0       0       0       0       0
  1615 ;;      Locals:         0       0       0       0       0
  1616 ;;      Temps:          1       0       0       0       0
  1617 ;;      Totals:         1       0       0       0       0
  1618 ;;Total ram usage:        1 bytes
  1619 ;; Hardware stack levels used:    1
  1620 ;; Hardware stack levels required when called:    1
  1621 ;; This function calls:
  1622 ;;		_SSD_Data_write
  1623 ;;		_SSD_Disable
  1624 ;;		_SSD_Enable
  1625 ;; This function is called by:
  1626 ;;		_main
  1627 ;; This function uses a non-reentrant model
  1628 ;;
  1629                           
  1630                           
  1631                           ;psect for function _SSD_Update
  1632  00F0                     _SSD_Update:	
  1633  00F0                     l1807:	
  1634                           ;incstack = 0
  1635                           ; Regs used in _SSD_Update: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1636                           
  1637                           
  1638                           ;SSD.c: 97:     SSD_Disable(currentSSD);
  1639  00F0  1283               	bcf	3,5	;RP0=0, select bank0
  1640  00F1  1303               	bcf	3,6	;RP1=0, select bank0
  1641  00F2  0830               	movf	_currentSSD,w
  1642  00F3  120A  118A  218E  120A  118A  	fcall	_SSD_Disable
  1643  00F8                     l1809:	
  1644                           
  1645                           ;SSD.c: 99:     currentSSD++;
  1646  00F8  3001               	movlw	1
  1647  00F9  00F3               	movwf	??_SSD_Update
  1648  00FA  0873               	movf	??_SSD_Update,w
  1649  00FB  1283               	bcf	3,5	;RP0=0, select bank0
  1650  00FC  1303               	bcf	3,6	;RP1=0, select bank0
  1651  00FD  07B0               	addwf	_currentSSD,f
  1652  00FE                     l1811:	
  1653                           
  1654                           ;SSD.c: 100:     if(currentSSD > SSD_HOURS_TENS)currentSSD = 0;
  1655  00FE  3004               	movlw	4
  1656  00FF  0230               	subwf	_currentSSD,w
  1657  0100  1C03               	skipc
  1658  0101  2903               	goto	u1221
  1659  0102  2904               	goto	u1220
  1660  0103                     u1221:	
  1661  0103  2905               	goto	l1815
  1662  0104                     u1220:	
  1663  0104                     l1813:	
  1664  0104  01B0               	clrf	_currentSSD
  1665  0105                     l1815:	
  1666                           
  1667                           ;SSD.c: 102:     SSD_Data_write();
  1668  0105  120A  118A  20B3  120A  118A  	fcall	_SSD_Data_write
  1669  010A                     l1817:	
  1670                           
  1671                           ;SSD.c: 104:     SSD_Enable(currentSSD);
  1672  010A  1283               	bcf	3,5	;RP0=0, select bank0
  1673  010B  1303               	bcf	3,6	;RP1=0, select bank0
  1674  010C  0830               	movf	_currentSSD,w
  1675  010D  120A  118A  21BF  120A  118A  	fcall	_SSD_Enable
  1676  0112                     l88:	
  1677  0112  0008               	return
  1678  0113                     __end_of_SSD_Update:	
  1679                           
  1680                           	psect	text5
  1681  01BF                     __ptext5:	
  1682 ;; *************** function _SSD_Enable *****************
  1683 ;; Defined at:
  1684 ;;		line 128 in file "SSD.c"
  1685 ;; Parameters:    Size  Location     Type
  1686 ;;  s               1    wreg     enum E872
  1687 ;; Auto vars:     Size  Location     Type
  1688 ;;  s               1    2[COMMON] enum E872
  1689 ;; Return value:  Size  Location     Type
  1690 ;;                  1    wreg      void 
  1691 ;; Registers used:
  1692 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1693 ;; Tracked objects:
  1694 ;;		On entry : 0/0
  1695 ;;		On exit  : 0/0
  1696 ;;		Unchanged: 0/0
  1697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1698 ;;      Params:         0       0       0       0       0
  1699 ;;      Locals:         1       0       0       0       0
  1700 ;;      Temps:          2       0       0       0       0
  1701 ;;      Totals:         3       0       0       0       0
  1702 ;;Total ram usage:        3 bytes
  1703 ;; Hardware stack levels used:    1
  1704 ;; This function calls:
  1705 ;;		Nothing
  1706 ;; This function is called by:
  1707 ;;		_SSD_Update
  1708 ;; This function uses a non-reentrant model
  1709 ;;
  1710                           
  1711                           
  1712                           ;psect for function _SSD_Enable
  1713  01BF                     _SSD_Enable:	
  1714                           
  1715                           ;incstack = 0
  1716                           ; Regs used in _SSD_Enable: [wreg-fsr0h+status,2+status,0]
  1717                           ;SSD_Enable@s stored from wreg
  1718  01BF  00F2               	movwf	SSD_Enable@s
  1719  01C0                     l1591:	
  1720                           
  1721                           ;SSD.c: 128: void SSD_Enable(SSD_t s);SSD.c: 129: {;SSD.c: 130:     switch(s)
  1722  01C0  29DD               	goto	l1601
  1723  01C1                     l1593:	
  1724                           
  1725                           ;SSD.c: 133:             (((PORTB))=((PORTB) & ~(1<<(4)))|(SSD_ON<<(4)));
  1726  01C1  1283               	bcf	3,5	;RP0=0, select bank0
  1727  01C2  1303               	bcf	3,6	;RP1=0, select bank0
  1728  01C3  0806               	movf	6,w	;volatile
  1729  01C4  39EF               	andlw	239
  1730  01C5  3810               	iorlw	16
  1731  01C6  0086               	movwf	6	;volatile
  1732                           
  1733                           ;SSD.c: 134:             break;
  1734  01C7  29F3               	goto	l108
  1735  01C8                     l1595:	
  1736                           
  1737                           ;SSD.c: 136:             (((PORTB))=((PORTB) & ~(1<<(5)))|(SSD_ON<<(5)));
  1738  01C8  1283               	bcf	3,5	;RP0=0, select bank0
  1739  01C9  1303               	bcf	3,6	;RP1=0, select bank0
  1740  01CA  0806               	movf	6,w	;volatile
  1741  01CB  39DF               	andlw	223
  1742  01CC  3820               	iorlw	32
  1743  01CD  0086               	movwf	6	;volatile
  1744                           
  1745                           ;SSD.c: 137:             break;
  1746  01CE  29F3               	goto	l108
  1747  01CF                     l1597:	
  1748                           
  1749                           ;SSD.c: 139:             (((PORTB))=((PORTB) & ~(1<<(6)))|(SSD_ON<<(6)));
  1750  01CF  1283               	bcf	3,5	;RP0=0, select bank0
  1751  01D0  1303               	bcf	3,6	;RP1=0, select bank0
  1752  01D1  0806               	movf	6,w	;volatile
  1753  01D2  39BF               	andlw	191
  1754  01D3  3840               	iorlw	64
  1755  01D4  0086               	movwf	6	;volatile
  1756                           
  1757                           ;SSD.c: 140:             break;
  1758  01D5  29F3               	goto	l108
  1759  01D6                     l1599:	
  1760                           
  1761                           ;SSD.c: 142:             (((PORTB))=((PORTB) & ~(1<<(7)))|(SSD_ON<<(7)));
  1762  01D6  1283               	bcf	3,5	;RP0=0, select bank0
  1763  01D7  1303               	bcf	3,6	;RP1=0, select bank0
  1764  01D8  0806               	movf	6,w	;volatile
  1765  01D9  397F               	andlw	127
  1766  01DA  3880               	iorlw	128
  1767  01DB  0086               	movwf	6	;volatile
  1768                           
  1769                           ;SSD.c: 143:             break;
  1770  01DC  29F3               	goto	l108
  1771  01DD                     l1601:	
  1772  01DD  0872               	movf	SSD_Enable@s,w
  1773  01DE  00F0               	movwf	??_SSD_Enable
  1774  01DF  01F1               	clrf	??_SSD_Enable+1
  1775                           
  1776                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1777                           ; Switch size 1, requested type "simple"
  1778                           ; Number of cases is 1, Range of values is 0 to 0
  1779                           ; switch strategies available:
  1780                           ; Name         Instructions Cycles
  1781                           ; simple_byte            4     3 (average)
  1782                           ; direct_byte           11     8 (fixed)
  1783                           ; jumptable            260     6 (fixed)
  1784                           ;	Chosen strategy is simple_byte
  1785  01E0  0871               	movf	??_SSD_Enable+1,w
  1786  01E1  3A00               	xorlw	0	; case 0
  1787  01E2  1903               	skipnz
  1788  01E3  29E5               	goto	l1969
  1789  01E4  29F3               	goto	l108
  1790  01E5                     l1969:	
  1791                           
  1792                           ; Switch size 1, requested type "simple"
  1793                           ; Number of cases is 4, Range of values is 0 to 3
  1794                           ; switch strategies available:
  1795                           ; Name         Instructions Cycles
  1796                           ; simple_byte           13     7 (average)
  1797                           ; direct_byte           20     8 (fixed)
  1798                           ; jumptable            260     6 (fixed)
  1799                           ;	Chosen strategy is simple_byte
  1800  01E5  0870               	movf	??_SSD_Enable,w
  1801  01E6  3A00               	xorlw	0	; case 0
  1802  01E7  1903               	skipnz
  1803  01E8  29C1               	goto	l1593
  1804  01E9  3A01               	xorlw	1	; case 1
  1805  01EA  1903               	skipnz
  1806  01EB  29C8               	goto	l1595
  1807  01EC  3A03               	xorlw	3	; case 2
  1808  01ED  1903               	skipnz
  1809  01EE  29CF               	goto	l1597
  1810  01EF  3A01               	xorlw	1	; case 3
  1811  01F0  1903               	skipnz
  1812  01F1  29D6               	goto	l1599
  1813  01F2  29F3               	goto	l108
  1814  01F3                     l108:	
  1815  01F3  0008               	return
  1816  01F4                     __end_of_SSD_Enable:	
  1817                           
  1818                           	psect	text6
  1819  018E                     __ptext6:	
  1820 ;; *************** function _SSD_Disable *****************
  1821 ;; Defined at:
  1822 ;;		line 107 in file "SSD.c"
  1823 ;; Parameters:    Size  Location     Type
  1824 ;;  s               1    wreg     enum E872
  1825 ;; Auto vars:     Size  Location     Type
  1826 ;;  s               1    2[COMMON] enum E872
  1827 ;; Return value:  Size  Location     Type
  1828 ;;                  1    wreg      void 
  1829 ;; Registers used:
  1830 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1831 ;; Tracked objects:
  1832 ;;		On entry : 0/0
  1833 ;;		On exit  : 0/0
  1834 ;;		Unchanged: 0/0
  1835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1836 ;;      Params:         0       0       0       0       0
  1837 ;;      Locals:         1       0       0       0       0
  1838 ;;      Temps:          2       0       0       0       0
  1839 ;;      Totals:         3       0       0       0       0
  1840 ;;Total ram usage:        3 bytes
  1841 ;; Hardware stack levels used:    1
  1842 ;; This function calls:
  1843 ;;		Nothing
  1844 ;; This function is called by:
  1845 ;;		_SSD_Update
  1846 ;; This function uses a non-reentrant model
  1847 ;;
  1848                           
  1849                           
  1850                           ;psect for function _SSD_Disable
  1851  018E                     _SSD_Disable:	
  1852                           
  1853                           ;incstack = 0
  1854                           ; Regs used in _SSD_Disable: [wreg-fsr0h+status,2+status,0]
  1855                           ;SSD_Disable@s stored from wreg
  1856  018E  00F2               	movwf	SSD_Disable@s
  1857  018F                     l1569:	
  1858                           
  1859                           ;SSD.c: 107: void SSD_Disable(SSD_t s);SSD.c: 108: {;SSD.c: 109:     switch(s)
  1860  018F  29A8               	goto	l1579
  1861  0190                     l1571:	
  1862                           
  1863                           ;SSD.c: 112:             (((PORTB))=((PORTB) & ~(1<<(4)))|(SSD_OFF<<(4)));
  1864  0190  1283               	bcf	3,5	;RP0=0, select bank0
  1865  0191  1303               	bcf	3,6	;RP1=0, select bank0
  1866  0192  0806               	movf	6,w	;volatile
  1867  0193  39EF               	andlw	239
  1868  0194  0086               	movwf	6	;volatile
  1869                           
  1870                           ;SSD.c: 113:             break;
  1871  0195  29BE               	goto	l98
  1872  0196                     l1573:	
  1873                           
  1874                           ;SSD.c: 115:             (((PORTB))=((PORTB) & ~(1<<(5)))|(SSD_OFF<<(5)));
  1875  0196  1283               	bcf	3,5	;RP0=0, select bank0
  1876  0197  1303               	bcf	3,6	;RP1=0, select bank0
  1877  0198  0806               	movf	6,w	;volatile
  1878  0199  39DF               	andlw	223
  1879  019A  0086               	movwf	6	;volatile
  1880                           
  1881                           ;SSD.c: 116:             break;
  1882  019B  29BE               	goto	l98
  1883  019C                     l1575:	
  1884                           
  1885                           ;SSD.c: 118:             (((PORTB))=((PORTB) & ~(1<<(6)))|(SSD_OFF<<(6)));
  1886  019C  1283               	bcf	3,5	;RP0=0, select bank0
  1887  019D  1303               	bcf	3,6	;RP1=0, select bank0
  1888  019E  0806               	movf	6,w	;volatile
  1889  019F  39BF               	andlw	191
  1890  01A0  0086               	movwf	6	;volatile
  1891                           
  1892                           ;SSD.c: 119:             break;
  1893  01A1  29BE               	goto	l98
  1894  01A2                     l1577:	
  1895                           
  1896                           ;SSD.c: 121:             (((PORTB))=((PORTB) & ~(1<<(7)))|(SSD_OFF<<(7)));
  1897  01A2  1283               	bcf	3,5	;RP0=0, select bank0
  1898  01A3  1303               	bcf	3,6	;RP1=0, select bank0
  1899  01A4  0806               	movf	6,w	;volatile
  1900  01A5  397F               	andlw	127
  1901  01A6  0086               	movwf	6	;volatile
  1902                           
  1903                           ;SSD.c: 122:             break;
  1904  01A7  29BE               	goto	l98
  1905  01A8                     l1579:	
  1906  01A8  0872               	movf	SSD_Disable@s,w
  1907  01A9  00F0               	movwf	??_SSD_Disable
  1908  01AA  01F1               	clrf	??_SSD_Disable+1
  1909                           
  1910                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1911                           ; Switch size 1, requested type "simple"
  1912                           ; Number of cases is 1, Range of values is 0 to 0
  1913                           ; switch strategies available:
  1914                           ; Name         Instructions Cycles
  1915                           ; simple_byte            4     3 (average)
  1916                           ; direct_byte           11     8 (fixed)
  1917                           ; jumptable            260     6 (fixed)
  1918                           ;	Chosen strategy is simple_byte
  1919  01AB  0871               	movf	??_SSD_Disable+1,w
  1920  01AC  3A00               	xorlw	0	; case 0
  1921  01AD  1903               	skipnz
  1922  01AE  29B0               	goto	l1971
  1923  01AF  29BE               	goto	l98
  1924  01B0                     l1971:	
  1925                           
  1926                           ; Switch size 1, requested type "simple"
  1927                           ; Number of cases is 4, Range of values is 0 to 3
  1928                           ; switch strategies available:
  1929                           ; Name         Instructions Cycles
  1930                           ; simple_byte           13     7 (average)
  1931                           ; direct_byte           20     8 (fixed)
  1932                           ; jumptable            260     6 (fixed)
  1933                           ;	Chosen strategy is simple_byte
  1934  01B0  0870               	movf	??_SSD_Disable,w
  1935  01B1  3A00               	xorlw	0	; case 0
  1936  01B2  1903               	skipnz
  1937  01B3  2990               	goto	l1571
  1938  01B4  3A01               	xorlw	1	; case 1
  1939  01B5  1903               	skipnz
  1940  01B6  2996               	goto	l1573
  1941  01B7  3A03               	xorlw	3	; case 2
  1942  01B8  1903               	skipnz
  1943  01B9  299C               	goto	l1575
  1944  01BA  3A01               	xorlw	1	; case 3
  1945  01BB  1903               	skipnz
  1946  01BC  29A2               	goto	l1577
  1947  01BD  29BE               	goto	l98
  1948  01BE                     l98:	
  1949  01BE  0008               	return
  1950  01BF                     __end_of_SSD_Disable:	
  1951                           
  1952                           	psect	text7
  1953  00B3                     __ptext7:	
  1954 ;; *************** function _SSD_Data_write *****************
  1955 ;; Defined at:
  1956 ;;		line 151 in file "SSD.c"
  1957 ;; Parameters:    Size  Location     Type
  1958 ;;		None
  1959 ;; Auto vars:     Size  Location     Type
  1960 ;;		None
  1961 ;; Return value:  Size  Location     Type
  1962 ;;                  1    wreg      void 
  1963 ;; Registers used:
  1964 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1965 ;; Tracked objects:
  1966 ;;		On entry : 0/0
  1967 ;;		On exit  : 0/0
  1968 ;;		Unchanged: 0/0
  1969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1970 ;;      Params:         0       0       0       0       0
  1971 ;;      Locals:         0       0       0       0       0
  1972 ;;      Temps:          1       0       0       0       0
  1973 ;;      Totals:         1       0       0       0       0
  1974 ;;Total ram usage:        1 bytes
  1975 ;; Hardware stack levels used:    1
  1976 ;; This function calls:
  1977 ;;		Nothing
  1978 ;; This function is called by:
  1979 ;;		_SSD_Update
  1980 ;; This function uses a non-reentrant model
  1981 ;;
  1982                           
  1983                           
  1984                           ;psect for function _SSD_Data_write
  1985  00B3                     _SSD_Data_write:	
  1986  00B3                     l1585:	
  1987                           ;incstack = 0
  1988                           ; Regs used in _SSD_Data_write: [wreg-fsr0h+status,2+status,0]
  1989                           
  1990                           
  1991                           ;SSD.c: 154:     (((PORTD))=(SSD_LOT_ARR[Buffer[currentSSD]]));
  1992  00B3  1283               	bcf	3,5	;RP0=0, select bank0
  1993  00B4  1303               	bcf	3,6	;RP1=0, select bank0
  1994  00B5  0830               	movf	_currentSSD,w
  1995  00B6  3E29               	addlw	(low (_Buffer| 0))& (0+255)
  1996  00B7  0084               	movwf	4
  1997  00B8  1383               	bcf	3,7	;select IRP bank0
  1998  00B9  0800               	movf	0,w
  1999  00BA  3E36               	addlw	(low (_SSD_LOT_ARR| 0))& (0+255)
  2000  00BB  0084               	movwf	4
  2001  00BC  0800               	movf	0,w
  2002  00BD  0088               	movwf	8	;volatile
  2003  00BE                     l1587:	
  2004                           
  2005                           ;SSD.c: 156:     if(currentSSD == SSD_MINUTES_UNITS)
  2006  00BE  0830               	movf	_currentSSD,w
  2007  00BF  1D03               	btfss	3,2
  2008  00C0  28C2               	goto	u961
  2009  00C1  28C3               	goto	u960
  2010  00C2                     u961:	
  2011  00C2  28CF               	goto	l112
  2012  00C3                     u960:	
  2013  00C3                     l1589:	
  2014                           
  2015                           ;SSD.c: 157:     {;SSD.c: 158:         (((PORTD))=((PORTD) & ~(1<<(7)))|(Second_Dot_Stat
      +                          e<<(7)));
  2016  00C3  082F               	movf	_Second_Dot_State,w
  2017  00C4  00F0               	movwf	??_SSD_Data_write
  2018  00C5  3007               	movlw	7
  2019  00C6                     u975:	
  2020  00C6  1003               	clrc
  2021  00C7  0DF0               	rlf	??_SSD_Data_write,f
  2022  00C8  3EFF               	addlw	-1
  2023  00C9  1D03               	skipz
  2024  00CA  28C6               	goto	u975
  2025  00CB  0808               	movf	8,w	;volatile
  2026  00CC  397F               	andlw	127
  2027  00CD  0470               	iorwf	??_SSD_Data_write,w
  2028  00CE  0088               	movwf	8	;volatile
  2029  00CF                     l112:	
  2030  00CF  0008               	return
  2031  00D0                     __end_of_SSD_Data_write:	
  2032                           
  2033                           	psect	text8
  2034  0137                     __ptext8:	
  2035 ;; *************** function _Disp_Update *****************
  2036 ;; Defined at:
  2037 ;;		line 60 in file "Disp.c"
  2038 ;; Parameters:    Size  Location     Type
  2039 ;;		None
  2040 ;; Auto vars:     Size  Location     Type
  2041 ;;		None
  2042 ;; Return value:  Size  Location     Type
  2043 ;;                  1    wreg      void 
  2044 ;; Registers used:
  2045 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2046 ;; Tracked objects:
  2047 ;;		On entry : 0/0
  2048 ;;		On exit  : 0/0
  2049 ;;		Unchanged: 0/0
  2050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2051 ;;      Params:         0       0       0       0       0
  2052 ;;      Locals:         0       0       0       0       0
  2053 ;;      Temps:          2       0       0       0       0
  2054 ;;      Totals:         2       0       0       0       0
  2055 ;;Total ram usage:        2 bytes
  2056 ;; Hardware stack levels used:    1
  2057 ;; Hardware stack levels required when called:    2
  2058 ;; This function calls:
  2059 ;;		_CLOCK_GetMode
  2060 ;;		_DISP_Normal_Operation
  2061 ;;		_DISP_Set_Hours_Operation
  2062 ;;		_DISP_Set_Minutes_Operation
  2063 ;; This function is called by:
  2064 ;;		_main
  2065 ;; This function uses a non-reentrant model
  2066 ;;
  2067                           
  2068                           
  2069                           ;psect for function _Disp_Update
  2070  0137                     _Disp_Update:	
  2071  0137                     l1791:	
  2072                           ;incstack = 0
  2073                           ; Regs used in _Disp_Update: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2074                           
  2075                           
  2076                           ;Disp.c: 64:     switch(CLOCK_GetMode())
  2077  0137  294A               	goto	l1801
  2078  0138                     l1793:	
  2079                           
  2080                           ;Disp.c: 68:             DISP_Normal_Operation();
  2081  0138  120A  118A  2530  120A  118A  	fcall	_DISP_Normal_Operation
  2082                           
  2083                           ;Disp.c: 69:             break;
  2084  013D  2961               	goto	l223
  2085  013E                     l1795:	
  2086                           
  2087                           ;Disp.c: 72:             DISP_Set_Hours_Operation();
  2088  013E  120A  118A  264E  120A  118A  	fcall	_DISP_Set_Hours_Operation
  2089                           
  2090                           ;Disp.c: 73:             break;
  2091  0143  2961               	goto	l223
  2092  0144                     l1797:	
  2093                           
  2094                           ;Disp.c: 76:             DISP_Set_Minutes_Operation();
  2095  0144  120A  118A  25B6  120A  118A  	fcall	_DISP_Set_Minutes_Operation
  2096                           
  2097                           ;Disp.c: 77:             break;
  2098  0149  2961               	goto	l223
  2099  014A                     l1801:	
  2100  014A  120A  118A  2046  120A  118A  	fcall	_CLOCK_GetMode
  2101  014F  00FC               	movwf	??_Disp_Update
  2102  0150  01FD               	clrf	??_Disp_Update+1
  2103                           
  2104                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2105                           ; Switch size 1, requested type "simple"
  2106                           ; Number of cases is 1, Range of values is 0 to 0
  2107                           ; switch strategies available:
  2108                           ; Name         Instructions Cycles
  2109                           ; simple_byte            4     3 (average)
  2110                           ; direct_byte           11     8 (fixed)
  2111                           ; jumptable            260     6 (fixed)
  2112                           ;	Chosen strategy is simple_byte
  2113  0151  087D               	movf	??_Disp_Update+1,w
  2114  0152  3A00               	xorlw	0	; case 0
  2115  0153  1903               	skipnz
  2116  0154  2956               	goto	l1973
  2117  0155  2961               	goto	l223
  2118  0156                     l1973:	
  2119                           
  2120                           ; Switch size 1, requested type "simple"
  2121                           ; Number of cases is 3, Range of values is 0 to 2
  2122                           ; switch strategies available:
  2123                           ; Name         Instructions Cycles
  2124                           ; simple_byte           10     6 (average)
  2125                           ; direct_byte           17     8 (fixed)
  2126                           ; jumptable            260     6 (fixed)
  2127                           ;	Chosen strategy is simple_byte
  2128  0156  087C               	movf	??_Disp_Update,w
  2129  0157  3A00               	xorlw	0	; case 0
  2130  0158  1903               	skipnz
  2131  0159  2938               	goto	l1793
  2132  015A  3A01               	xorlw	1	; case 1
  2133  015B  1903               	skipnz
  2134  015C  293E               	goto	l1795
  2135  015D  3A03               	xorlw	3	; case 2
  2136  015E  1903               	skipnz
  2137  015F  2944               	goto	l1797
  2138  0160  2961               	goto	l223
  2139  0161                     l223:	
  2140  0161  0008               	return
  2141  0162                     __end_of_Disp_Update:	
  2142                           
  2143                           	psect	text9
  2144  05B6                     __ptext9:	
  2145 ;; *************** function _DISP_Set_Minutes_Operation *****************
  2146 ;; Defined at:
  2147 ;;		line 146 in file "Disp.c"
  2148 ;; Parameters:    Size  Location     Type
  2149 ;;		None
  2150 ;; Auto vars:     Size  Location     Type
  2151 ;;  tt              5    3[BANK0 ] struct .
  2152 ;; Return value:  Size  Location     Type
  2153 ;;                  1    wreg      void 
  2154 ;; Registers used:
  2155 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2156 ;; Tracked objects:
  2157 ;;		On entry : 0/0
  2158 ;;		On exit  : 0/0
  2159 ;;		Unchanged: 0/0
  2160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2161 ;;      Params:         0       0       0       0       0
  2162 ;;      Locals:         0       5       0       0       0
  2163 ;;      Temps:          0       3       0       0       0
  2164 ;;      Totals:         0       8       0       0       0
  2165 ;;Total ram usage:        8 bytes
  2166 ;; Hardware stack levels used:    1
  2167 ;; Hardware stack levels required when called:    1
  2168 ;; This function calls:
  2169 ;;		_CLOCK_GetTime
  2170 ;;		_SSD_Set_Symbol
  2171 ;;		___awdiv
  2172 ;;		___awmod
  2173 ;; This function is called by:
  2174 ;;		_Disp_Update
  2175 ;; This function uses a non-reentrant model
  2176 ;;
  2177                           
  2178                           
  2179                           ;psect for function _DISP_Set_Minutes_Operation
  2180  05B6                     _DISP_Set_Minutes_Operation:	
  2181  05B6                     l1699:	
  2182                           ;incstack = 0
  2183                           ; Regs used in _DISP_Set_Minutes_Operation: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2184                           
  2185                           
  2186                           ;Disp.c: 150:     Time_t tt;;Disp.c: 151:     CLOCK_GetTime(&tt);
  2187  05B6  3044               	movlw	(low (DISP_Set_Minutes_Operation@tt| 0))& (0+255)
  2188  05B7  120A  118A  20D0  120A  118A  	fcall	_CLOCK_GetTime
  2189                           
  2190                           ;Disp.c: 154:     SSD_Set_Symbol(tt.hours/10,SSD_HOURS_TENS);
  2191  05BC  3003               	movlw	3
  2192  05BD  1283               	bcf	3,5	;RP0=0, select bank0
  2193  05BE  1303               	bcf	3,6	;RP1=0, select bank0
  2194  05BF  00C1               	movwf	??_DISP_Set_Minutes_Operation
  2195  05C0  0841               	movf	??_DISP_Set_Minutes_Operation,w
  2196  05C1  00F9               	movwf	SSD_Set_Symbol@index
  2197  05C2  300A               	movlw	10
  2198  05C3  00F0               	movwf	___awdiv@divisor
  2199  05C4  3000               	movlw	0
  2200  05C5  00F1               	movwf	___awdiv@divisor+1
  2201  05C6  0844               	movf	DISP_Set_Minutes_Operation@tt,w
  2202  05C7  00C2               	movwf	??_DISP_Set_Minutes_Operation+1
  2203  05C8  01C3               	clrf	??_DISP_Set_Minutes_Operation+2
  2204  05C9  0842               	movf	??_DISP_Set_Minutes_Operation+1,w
  2205  05CA  00F2               	movwf	___awdiv@dividend
  2206  05CB  0843               	movf	??_DISP_Set_Minutes_Operation+2,w
  2207  05CC  00F3               	movwf	___awdiv@dividend+1
  2208  05CD  120A  118A  24C9  120A  118A  	fcall	___awdiv
  2209  05D2  0870               	movf	?___awdiv,w
  2210  05D3  120A  118A  2062  120A  118A  	fcall	_SSD_Set_Symbol
  2211                           
  2212                           ;Disp.c: 155:     SSD_Set_Symbol(tt.hours%10,SSD_HOURS_UNITS);
  2213  05D8  3002               	movlw	2
  2214  05D9  1283               	bcf	3,5	;RP0=0, select bank0
  2215  05DA  1303               	bcf	3,6	;RP1=0, select bank0
  2216  05DB  00C1               	movwf	??_DISP_Set_Minutes_Operation
  2217  05DC  0841               	movf	??_DISP_Set_Minutes_Operation,w
  2218  05DD  00F9               	movwf	SSD_Set_Symbol@index
  2219  05DE  300A               	movlw	10
  2220  05DF  00F0               	movwf	___awmod@divisor
  2221  05E0  3000               	movlw	0
  2222  05E1  00F1               	movwf	___awmod@divisor+1
  2223  05E2  0844               	movf	DISP_Set_Minutes_Operation@tt,w
  2224  05E3  00C2               	movwf	??_DISP_Set_Minutes_Operation+1
  2225  05E4  01C3               	clrf	??_DISP_Set_Minutes_Operation+2
  2226  05E5  0842               	movf	??_DISP_Set_Minutes_Operation+1,w
  2227  05E6  00F2               	movwf	___awmod@dividend
  2228  05E7  0843               	movf	??_DISP_Set_Minutes_Operation+2,w
  2229  05E8  00F3               	movwf	___awmod@dividend+1
  2230  05E9  120A  118A  23B5  120A  118A  	fcall	___awmod
  2231  05EE  0870               	movf	?___awmod,w
  2232  05EF  120A  118A  2062  120A  118A  	fcall	_SSD_Set_Symbol
  2233  05F4                     l1701:	
  2234                           
  2235                           ;Disp.c: 163:     if(Disp_Blink_counter < 25)
  2236  05F4  3019               	movlw	25
  2237  05F5  1283               	bcf	3,5	;RP0=0, select bank0
  2238  05F6  1303               	bcf	3,6	;RP1=0, select bank0
  2239  05F7  022D               	subwf	_Disp_Blink_counter,w
  2240  05F8  1803               	skipnc
  2241  05F9  2DFB               	goto	u1161
  2242  05FA  2DFC               	goto	u1160
  2243  05FB                     u1161:	
  2244  05FB  2E2D               	goto	l1705
  2245  05FC                     u1160:	
  2246  05FC                     l1703:	
  2247                           
  2248                           ;Disp.c: 164:     {;Disp.c: 166:         SSD_Set_Symbol(tt.minuts/10,SSD_MINUTES_TENS);
  2249  05FC  01F9               	clrf	SSD_Set_Symbol@index
  2250  05FD  0AF9               	incf	SSD_Set_Symbol@index,f
  2251  05FE  300A               	movlw	10
  2252  05FF  00F0               	movwf	___awdiv@divisor
  2253  0600  3000               	movlw	0
  2254  0601  00F1               	movwf	___awdiv@divisor+1
  2255  0602  0845               	movf	DISP_Set_Minutes_Operation@tt+1,w
  2256  0603  00C1               	movwf	??_DISP_Set_Minutes_Operation
  2257  0604  01C2               	clrf	??_DISP_Set_Minutes_Operation+1
  2258  0605  0841               	movf	??_DISP_Set_Minutes_Operation,w
  2259  0606  00F2               	movwf	___awdiv@dividend
  2260  0607  0842               	movf	??_DISP_Set_Minutes_Operation+1,w
  2261  0608  00F3               	movwf	___awdiv@dividend+1
  2262  0609  120A  118A  24C9  120A  118A  	fcall	___awdiv
  2263  060E  0870               	movf	?___awdiv,w
  2264  060F  120A  118A  2062  120A  118A  	fcall	_SSD_Set_Symbol
  2265                           
  2266                           ;Disp.c: 167:         SSD_Set_Symbol(tt.minuts%10,SSD_MINUTES_UNITS);
  2267  0614  01F9               	clrf	SSD_Set_Symbol@index
  2268  0615  300A               	movlw	10
  2269  0616  00F0               	movwf	___awmod@divisor
  2270  0617  3000               	movlw	0
  2271  0618  00F1               	movwf	___awmod@divisor+1
  2272  0619  1283               	bcf	3,5	;RP0=0, select bank0
  2273  061A  1303               	bcf	3,6	;RP1=0, select bank0
  2274  061B  0845               	movf	DISP_Set_Minutes_Operation@tt+1,w
  2275  061C  00C1               	movwf	??_DISP_Set_Minutes_Operation
  2276  061D  01C2               	clrf	??_DISP_Set_Minutes_Operation+1
  2277  061E  0841               	movf	??_DISP_Set_Minutes_Operation,w
  2278  061F  00F2               	movwf	___awmod@dividend
  2279  0620  0842               	movf	??_DISP_Set_Minutes_Operation+1,w
  2280  0621  00F3               	movwf	___awmod@dividend+1
  2281  0622  120A  118A  23B5  120A  118A  	fcall	___awmod
  2282  0627  0870               	movf	?___awmod,w
  2283  0628  120A  118A  2062  120A  118A  	fcall	_SSD_Set_Symbol
  2284  062D                     l1705:	
  2285                           
  2286                           ;Disp.c: 169:     if(Disp_Blink_counter>25)
  2287  062D  301A               	movlw	26
  2288  062E  1283               	bcf	3,5	;RP0=0, select bank0
  2289  062F  1303               	bcf	3,6	;RP1=0, select bank0
  2290  0630  022D               	subwf	_Disp_Blink_counter,w
  2291  0631  1C03               	skipc
  2292  0632  2E34               	goto	u1171
  2293  0633  2E35               	goto	u1170
  2294  0634                     u1171:	
  2295  0634  2E44               	goto	l1709
  2296  0635                     u1170:	
  2297  0635                     l1707:	
  2298                           
  2299                           ;Disp.c: 170:     {;Disp.c: 172:         SSD_Set_Symbol(SSD_NULL,SSD_MINUTES_TENS);
  2300  0635  01F9               	clrf	SSD_Set_Symbol@index
  2301  0636  0AF9               	incf	SSD_Set_Symbol@index,f
  2302  0637  300A               	movlw	10
  2303  0638  120A  118A  2062  120A  118A  	fcall	_SSD_Set_Symbol
  2304                           
  2305                           ;Disp.c: 173:         SSD_Set_Symbol(SSD_NULL,SSD_MINUTES_UNITS);
  2306  063D  01F9               	clrf	SSD_Set_Symbol@index
  2307  063E  300A               	movlw	10
  2308  063F  120A  118A  2062  120A  118A  	fcall	_SSD_Set_Symbol
  2309  0644                     l1709:	
  2310                           
  2311                           ;Disp.c: 175:     if(Disp_Blink_counter>=50)
  2312  0644  3032               	movlw	50
  2313  0645  1283               	bcf	3,5	;RP0=0, select bank0
  2314  0646  1303               	bcf	3,6	;RP1=0, select bank0
  2315  0647  022D               	subwf	_Disp_Blink_counter,w
  2316  0648  1C03               	skipc
  2317  0649  2E4B               	goto	u1181
  2318  064A  2E4C               	goto	u1180
  2319  064B                     u1181:	
  2320  064B  2E4D               	goto	l239
  2321  064C                     u1180:	
  2322  064C                     l1711:	
  2323                           
  2324                           ;Disp.c: 176:     {;Disp.c: 178:         Disp_Blink_counter = 0;
  2325  064C  01AD               	clrf	_Disp_Blink_counter
  2326  064D                     l239:	
  2327  064D  0008               	return
  2328  064E                     __end_of_DISP_Set_Minutes_Operation:	
  2329                           
  2330                           	psect	text10
  2331  064E                     __ptext10:	
  2332 ;; *************** function _DISP_Set_Hours_Operation *****************
  2333 ;; Defined at:
  2334 ;;		line 116 in file "Disp.c"
  2335 ;; Parameters:    Size  Location     Type
  2336 ;;		None
  2337 ;; Auto vars:     Size  Location     Type
  2338 ;;  tt              5    3[BANK0 ] struct .
  2339 ;; Return value:  Size  Location     Type
  2340 ;;                  1    wreg      void 
  2341 ;; Registers used:
  2342 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2343 ;; Tracked objects:
  2344 ;;		On entry : 0/0
  2345 ;;		On exit  : 0/0
  2346 ;;		Unchanged: 0/0
  2347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2348 ;;      Params:         0       0       0       0       0
  2349 ;;      Locals:         0       5       0       0       0
  2350 ;;      Temps:          0       3       0       0       0
  2351 ;;      Totals:         0       8       0       0       0
  2352 ;;Total ram usage:        8 bytes
  2353 ;; Hardware stack levels used:    1
  2354 ;; Hardware stack levels required when called:    1
  2355 ;; This function calls:
  2356 ;;		_CLOCK_GetTime
  2357 ;;		_SSD_Set_Symbol
  2358 ;;		___awdiv
  2359 ;;		___awmod
  2360 ;; This function is called by:
  2361 ;;		_Disp_Update
  2362 ;; This function uses a non-reentrant model
  2363 ;;
  2364                           
  2365                           
  2366                           ;psect for function _DISP_Set_Hours_Operation
  2367  064E                     _DISP_Set_Hours_Operation:	
  2368  064E                     l1685:	
  2369                           ;incstack = 0
  2370                           ; Regs used in _DISP_Set_Hours_Operation: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2371                           
  2372                           
  2373                           ;Disp.c: 120:     Time_t tt;;Disp.c: 121:     CLOCK_GetTime(&tt);
  2374  064E  3044               	movlw	(low (DISP_Set_Hours_Operation@tt| 0))& (0+255)
  2375  064F  120A  118A  20D0  120A  118A  	fcall	_CLOCK_GetTime
  2376                           
  2377                           ;Disp.c: 123:     SSD_Set_Symbol(tt.minuts/10,SSD_MINUTES_TENS);
  2378  0654  01F9               	clrf	SSD_Set_Symbol@index
  2379  0655  0AF9               	incf	SSD_Set_Symbol@index,f
  2380  0656  300A               	movlw	10
  2381  0657  00F0               	movwf	___awdiv@divisor
  2382  0658  3000               	movlw	0
  2383  0659  00F1               	movwf	___awdiv@divisor+1
  2384  065A  1283               	bcf	3,5	;RP0=0, select bank0
  2385  065B  1303               	bcf	3,6	;RP1=0, select bank0
  2386  065C  0845               	movf	DISP_Set_Hours_Operation@tt+1,w
  2387  065D  00C1               	movwf	??_DISP_Set_Hours_Operation
  2388  065E  01C2               	clrf	??_DISP_Set_Hours_Operation+1
  2389  065F  0841               	movf	??_DISP_Set_Hours_Operation,w
  2390  0660  00F2               	movwf	___awdiv@dividend
  2391  0661  0842               	movf	??_DISP_Set_Hours_Operation+1,w
  2392  0662  00F3               	movwf	___awdiv@dividend+1
  2393  0663  120A  118A  24C9  120A  118A  	fcall	___awdiv
  2394  0668  0870               	movf	?___awdiv,w
  2395  0669  120A  118A  2062  120A  118A  	fcall	_SSD_Set_Symbol
  2396                           
  2397                           ;Disp.c: 124:     SSD_Set_Symbol(tt.minuts%10,SSD_MINUTES_UNITS);
  2398  066E  01F9               	clrf	SSD_Set_Symbol@index
  2399  066F  300A               	movlw	10
  2400  0670  00F0               	movwf	___awmod@divisor
  2401  0671  3000               	movlw	0
  2402  0672  00F1               	movwf	___awmod@divisor+1
  2403  0673  1283               	bcf	3,5	;RP0=0, select bank0
  2404  0674  1303               	bcf	3,6	;RP1=0, select bank0
  2405  0675  0845               	movf	DISP_Set_Hours_Operation@tt+1,w
  2406  0676  00C1               	movwf	??_DISP_Set_Hours_Operation
  2407  0677  01C2               	clrf	??_DISP_Set_Hours_Operation+1
  2408  0678  0841               	movf	??_DISP_Set_Hours_Operation,w
  2409  0679  00F2               	movwf	___awmod@dividend
  2410  067A  0842               	movf	??_DISP_Set_Hours_Operation+1,w
  2411  067B  00F3               	movwf	___awmod@dividend+1
  2412  067C  120A  118A  23B5  120A  118A  	fcall	___awmod
  2413  0681  0870               	movf	?___awmod,w
  2414  0682  120A  118A  2062  120A  118A  	fcall	_SSD_Set_Symbol
  2415  0687                     l1687:	
  2416                           
  2417                           ;Disp.c: 125:     if(Disp_Blink_counter < 25)
  2418  0687  3019               	movlw	25
  2419  0688  1283               	bcf	3,5	;RP0=0, select bank0
  2420  0689  1303               	bcf	3,6	;RP1=0, select bank0
  2421  068A  022D               	subwf	_Disp_Blink_counter,w
  2422  068B  1803               	skipnc
  2423  068C  2E8E               	goto	u1131
  2424  068D  2E8F               	goto	u1130
  2425  068E                     u1131:	
  2426  068E  2EC5               	goto	l1691
  2427  068F                     u1130:	
  2428  068F                     l1689:	
  2429                           
  2430                           ;Disp.c: 126:     {;Disp.c: 128:         SSD_Set_Symbol(tt.hours/10,SSD_HOURS_TENS);
  2431  068F  3003               	movlw	3
  2432  0690  00C1               	movwf	??_DISP_Set_Hours_Operation
  2433  0691  0841               	movf	??_DISP_Set_Hours_Operation,w
  2434  0692  00F9               	movwf	SSD_Set_Symbol@index
  2435  0693  300A               	movlw	10
  2436  0694  00F0               	movwf	___awdiv@divisor
  2437  0695  3000               	movlw	0
  2438  0696  00F1               	movwf	___awdiv@divisor+1
  2439  0697  0844               	movf	DISP_Set_Hours_Operation@tt,w
  2440  0698  00C2               	movwf	??_DISP_Set_Hours_Operation+1
  2441  0699  01C3               	clrf	??_DISP_Set_Hours_Operation+2
  2442  069A  0842               	movf	??_DISP_Set_Hours_Operation+1,w
  2443  069B  00F2               	movwf	___awdiv@dividend
  2444  069C  0843               	movf	??_DISP_Set_Hours_Operation+2,w
  2445  069D  00F3               	movwf	___awdiv@dividend+1
  2446  069E  120A  118A  24C9  120A  118A  	fcall	___awdiv
  2447  06A3  0870               	movf	?___awdiv,w
  2448  06A4  120A  118A  2062  120A  118A  	fcall	_SSD_Set_Symbol
  2449                           
  2450                           ;Disp.c: 129:         SSD_Set_Symbol(tt.hours%10,SSD_HOURS_UNITS);
  2451  06A9  3002               	movlw	2
  2452  06AA  1283               	bcf	3,5	;RP0=0, select bank0
  2453  06AB  1303               	bcf	3,6	;RP1=0, select bank0
  2454  06AC  00C1               	movwf	??_DISP_Set_Hours_Operation
  2455  06AD  0841               	movf	??_DISP_Set_Hours_Operation,w
  2456  06AE  00F9               	movwf	SSD_Set_Symbol@index
  2457  06AF  300A               	movlw	10
  2458  06B0  00F0               	movwf	___awmod@divisor
  2459  06B1  3000               	movlw	0
  2460  06B2  00F1               	movwf	___awmod@divisor+1
  2461  06B3  0844               	movf	DISP_Set_Hours_Operation@tt,w
  2462  06B4  00C2               	movwf	??_DISP_Set_Hours_Operation+1
  2463  06B5  01C3               	clrf	??_DISP_Set_Hours_Operation+2
  2464  06B6  0842               	movf	??_DISP_Set_Hours_Operation+1,w
  2465  06B7  00F2               	movwf	___awmod@dividend
  2466  06B8  0843               	movf	??_DISP_Set_Hours_Operation+2,w
  2467  06B9  00F3               	movwf	___awmod@dividend+1
  2468  06BA  120A  118A  23B5  120A  118A  	fcall	___awmod
  2469  06BF  0870               	movf	?___awmod,w
  2470  06C0  120A  118A  2062  120A  118A  	fcall	_SSD_Set_Symbol
  2471  06C5                     l1691:	
  2472                           
  2473                           ;Disp.c: 131:     if(Disp_Blink_counter>25)
  2474  06C5  301A               	movlw	26
  2475  06C6  1283               	bcf	3,5	;RP0=0, select bank0
  2476  06C7  1303               	bcf	3,6	;RP1=0, select bank0
  2477  06C8  022D               	subwf	_Disp_Blink_counter,w
  2478  06C9  1C03               	skipc
  2479  06CA  2ECC               	goto	u1141
  2480  06CB  2ECD               	goto	u1140
  2481  06CC                     u1141:	
  2482  06CC  2EE3               	goto	l1695
  2483  06CD                     u1140:	
  2484  06CD                     l1693:	
  2485                           
  2486                           ;Disp.c: 132:     {;Disp.c: 134:         SSD_Set_Symbol(SSD_NULL,SSD_HOURS_TENS);
  2487  06CD  3003               	movlw	3
  2488  06CE  00C1               	movwf	??_DISP_Set_Hours_Operation
  2489  06CF  0841               	movf	??_DISP_Set_Hours_Operation,w
  2490  06D0  00F9               	movwf	SSD_Set_Symbol@index
  2491  06D1  300A               	movlw	10
  2492  06D2  120A  118A  2062  120A  118A  	fcall	_SSD_Set_Symbol
  2493                           
  2494                           ;Disp.c: 135:         SSD_Set_Symbol(SSD_NULL,SSD_HOURS_UNITS);
  2495  06D7  3002               	movlw	2
  2496  06D8  1283               	bcf	3,5	;RP0=0, select bank0
  2497  06D9  1303               	bcf	3,6	;RP1=0, select bank0
  2498  06DA  00C1               	movwf	??_DISP_Set_Hours_Operation
  2499  06DB  0841               	movf	??_DISP_Set_Hours_Operation,w
  2500  06DC  00F9               	movwf	SSD_Set_Symbol@index
  2501  06DD  300A               	movlw	10
  2502  06DE  120A  118A  2062  120A  118A  	fcall	_SSD_Set_Symbol
  2503  06E3                     l1695:	
  2504                           
  2505                           ;Disp.c: 137:     if(Disp_Blink_counter>=50)
  2506  06E3  3032               	movlw	50
  2507  06E4  1283               	bcf	3,5	;RP0=0, select bank0
  2508  06E5  1303               	bcf	3,6	;RP1=0, select bank0
  2509  06E6  022D               	subwf	_Disp_Blink_counter,w
  2510  06E7  1C03               	skipc
  2511  06E8  2EEA               	goto	u1151
  2512  06E9  2EEB               	goto	u1150
  2513  06EA                     u1151:	
  2514  06EA  2EEC               	goto	l233
  2515  06EB                     u1150:	
  2516  06EB                     l1697:	
  2517                           
  2518                           ;Disp.c: 138:     {;Disp.c: 140:         Disp_Blink_counter = 0;
  2519  06EB  01AD               	clrf	_Disp_Blink_counter
  2520  06EC                     l233:	
  2521  06EC  0008               	return
  2522  06ED                     __end_of_DISP_Set_Hours_Operation:	
  2523                           
  2524                           	psect	text11
  2525  0530                     __ptext11:	
  2526 ;; *************** function _DISP_Normal_Operation *****************
  2527 ;; Defined at:
  2528 ;;		line 87 in file "Disp.c"
  2529 ;; Parameters:    Size  Location     Type
  2530 ;;		None
  2531 ;; Auto vars:     Size  Location     Type
  2532 ;;  tt              5    3[BANK0 ] struct .
  2533 ;; Return value:  Size  Location     Type
  2534 ;;                  1    wreg      void 
  2535 ;; Registers used:
  2536 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2537 ;; Tracked objects:
  2538 ;;		On entry : 0/0
  2539 ;;		On exit  : 0/0
  2540 ;;		Unchanged: 0/0
  2541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2542 ;;      Params:         0       0       0       0       0
  2543 ;;      Locals:         0       5       0       0       0
  2544 ;;      Temps:          0       3       0       0       0
  2545 ;;      Totals:         0       8       0       0       0
  2546 ;;Total ram usage:        8 bytes
  2547 ;; Hardware stack levels used:    1
  2548 ;; Hardware stack levels required when called:    1
  2549 ;; This function calls:
  2550 ;;		_CLOCK_GetTime
  2551 ;;		_SSD_Set_Symbol
  2552 ;;		_SSD_Toggle_Second_Dot
  2553 ;;		___awdiv
  2554 ;;		___awmod
  2555 ;; This function is called by:
  2556 ;;		_Disp_Update
  2557 ;; This function uses a non-reentrant model
  2558 ;;
  2559                           
  2560                           
  2561                           ;psect for function _DISP_Normal_Operation
  2562  0530                     _DISP_Normal_Operation:	
  2563  0530                     l1675:	
  2564                           ;incstack = 0
  2565                           ; Regs used in _DISP_Normal_Operation: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2566                           
  2567                           
  2568                           ;Disp.c: 90:     Time_t tt;;Disp.c: 91:     CLOCK_GetTime(&tt);
  2569  0530  3044               	movlw	(low (DISP_Normal_Operation@tt| 0))& (0+255)
  2570  0531  120A  118A  20D0  120A  118A  	fcall	_CLOCK_GetTime
  2571                           
  2572                           ;Disp.c: 94:     SSD_Set_Symbol(tt.hours/10,SSD_HOURS_TENS);
  2573  0536  3003               	movlw	3
  2574  0537  1283               	bcf	3,5	;RP0=0, select bank0
  2575  0538  1303               	bcf	3,6	;RP1=0, select bank0
  2576  0539  00C1               	movwf	??_DISP_Normal_Operation
  2577  053A  0841               	movf	??_DISP_Normal_Operation,w
  2578  053B  00F9               	movwf	SSD_Set_Symbol@index
  2579  053C  300A               	movlw	10
  2580  053D  00F0               	movwf	___awdiv@divisor
  2581  053E  3000               	movlw	0
  2582  053F  00F1               	movwf	___awdiv@divisor+1
  2583  0540  0844               	movf	DISP_Normal_Operation@tt,w
  2584  0541  00C2               	movwf	??_DISP_Normal_Operation+1
  2585  0542  01C3               	clrf	??_DISP_Normal_Operation+2
  2586  0543  0842               	movf	??_DISP_Normal_Operation+1,w
  2587  0544  00F2               	movwf	___awdiv@dividend
  2588  0545  0843               	movf	??_DISP_Normal_Operation+2,w
  2589  0546  00F3               	movwf	___awdiv@dividend+1
  2590  0547  120A  118A  24C9  120A  118A  	fcall	___awdiv
  2591  054C  0870               	movf	?___awdiv,w
  2592  054D  120A  118A  2062  120A  118A  	fcall	_SSD_Set_Symbol
  2593                           
  2594                           ;Disp.c: 95:     SSD_Set_Symbol(tt.hours%10,SSD_HOURS_UNITS);
  2595  0552  3002               	movlw	2
  2596  0553  1283               	bcf	3,5	;RP0=0, select bank0
  2597  0554  1303               	bcf	3,6	;RP1=0, select bank0
  2598  0555  00C1               	movwf	??_DISP_Normal_Operation
  2599  0556  0841               	movf	??_DISP_Normal_Operation,w
  2600  0557  00F9               	movwf	SSD_Set_Symbol@index
  2601  0558  300A               	movlw	10
  2602  0559  00F0               	movwf	___awmod@divisor
  2603  055A  3000               	movlw	0
  2604  055B  00F1               	movwf	___awmod@divisor+1
  2605  055C  0844               	movf	DISP_Normal_Operation@tt,w
  2606  055D  00C2               	movwf	??_DISP_Normal_Operation+1
  2607  055E  01C3               	clrf	??_DISP_Normal_Operation+2
  2608  055F  0842               	movf	??_DISP_Normal_Operation+1,w
  2609  0560  00F2               	movwf	___awmod@dividend
  2610  0561  0843               	movf	??_DISP_Normal_Operation+2,w
  2611  0562  00F3               	movwf	___awmod@dividend+1
  2612  0563  120A  118A  23B5  120A  118A  	fcall	___awmod
  2613  0568  0870               	movf	?___awmod,w
  2614  0569  120A  118A  2062  120A  118A  	fcall	_SSD_Set_Symbol
  2615                           
  2616                           ;Disp.c: 97:     SSD_Set_Symbol(tt.minuts/10,SSD_MINUTES_TENS);
  2617  056E  01F9               	clrf	SSD_Set_Symbol@index
  2618  056F  0AF9               	incf	SSD_Set_Symbol@index,f
  2619  0570  300A               	movlw	10
  2620  0571  00F0               	movwf	___awdiv@divisor
  2621  0572  3000               	movlw	0
  2622  0573  00F1               	movwf	___awdiv@divisor+1
  2623  0574  1283               	bcf	3,5	;RP0=0, select bank0
  2624  0575  1303               	bcf	3,6	;RP1=0, select bank0
  2625  0576  0845               	movf	DISP_Normal_Operation@tt+1,w
  2626  0577  00C1               	movwf	??_DISP_Normal_Operation
  2627  0578  01C2               	clrf	??_DISP_Normal_Operation+1
  2628  0579  0841               	movf	??_DISP_Normal_Operation,w
  2629  057A  00F2               	movwf	___awdiv@dividend
  2630  057B  0842               	movf	??_DISP_Normal_Operation+1,w
  2631  057C  00F3               	movwf	___awdiv@dividend+1
  2632  057D  120A  118A  24C9  120A  118A  	fcall	___awdiv
  2633  0582  0870               	movf	?___awdiv,w
  2634  0583  120A  118A  2062  120A  118A  	fcall	_SSD_Set_Symbol
  2635                           
  2636                           ;Disp.c: 98:     SSD_Set_Symbol(tt.minuts%10,SSD_MINUTES_UNITS);
  2637  0588  01F9               	clrf	SSD_Set_Symbol@index
  2638  0589  300A               	movlw	10
  2639  058A  00F0               	movwf	___awmod@divisor
  2640  058B  3000               	movlw	0
  2641  058C  00F1               	movwf	___awmod@divisor+1
  2642  058D  1283               	bcf	3,5	;RP0=0, select bank0
  2643  058E  1303               	bcf	3,6	;RP1=0, select bank0
  2644  058F  0845               	movf	DISP_Normal_Operation@tt+1,w
  2645  0590  00C1               	movwf	??_DISP_Normal_Operation
  2646  0591  01C2               	clrf	??_DISP_Normal_Operation+1
  2647  0592  0841               	movf	??_DISP_Normal_Operation,w
  2648  0593  00F2               	movwf	___awmod@dividend
  2649  0594  0842               	movf	??_DISP_Normal_Operation+1,w
  2650  0595  00F3               	movwf	___awmod@dividend+1
  2651  0596  120A  118A  23B5  120A  118A  	fcall	___awmod
  2652  059B  0870               	movf	?___awmod,w
  2653  059C  120A  118A  2062  120A  118A  	fcall	_SSD_Set_Symbol
  2654  05A1                     l1677:	
  2655                           
  2656                           ;Disp.c: 99:     Disp_Blink_counter++;
  2657  05A1  3001               	movlw	1
  2658  05A2  1283               	bcf	3,5	;RP0=0, select bank0
  2659  05A3  1303               	bcf	3,6	;RP1=0, select bank0
  2660  05A4  00C1               	movwf	??_DISP_Normal_Operation
  2661  05A5  0841               	movf	??_DISP_Normal_Operation,w
  2662  05A6  07AD               	addwf	_Disp_Blink_counter,f
  2663  05A7                     l1679:	
  2664                           
  2665                           ;Disp.c: 100:     if(Disp_Blink_counter>= 25)
  2666  05A7  3019               	movlw	25
  2667  05A8  022D               	subwf	_Disp_Blink_counter,w
  2668  05A9  1C03               	skipc
  2669  05AA  2DAC               	goto	u1121
  2670  05AB  2DAD               	goto	u1120
  2671  05AC                     u1121:	
  2672  05AC  2DB5               	goto	l227
  2673  05AD                     u1120:	
  2674  05AD                     l1681:	
  2675                           
  2676                           ;Disp.c: 101:     {;Disp.c: 102:         SSD_Toggle_Second_Dot();
  2677  05AD  120A  118A  204A  120A  118A  	fcall	_SSD_Toggle_Second_Dot
  2678  05B2                     l1683:	
  2679                           
  2680                           ;Disp.c: 103:         Disp_Blink_counter = 0;
  2681  05B2  1283               	bcf	3,5	;RP0=0, select bank0
  2682  05B3  1303               	bcf	3,6	;RP1=0, select bank0
  2683  05B4  01AD               	clrf	_Disp_Blink_counter
  2684  05B5                     l227:	
  2685  05B5  0008               	return
  2686  05B6                     __end_of_DISP_Normal_Operation:	
  2687                           
  2688                           	psect	text12
  2689  03B5                     __ptext12:	
  2690 ;; *************** function ___awmod *****************
  2691 ;; Defined at:
  2692 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  2693 ;; Parameters:    Size  Location     Type
  2694 ;;  divisor         2    0[COMMON] int 
  2695 ;;  dividend        2    2[COMMON] int 
  2696 ;; Auto vars:     Size  Location     Type
  2697 ;;  sign            1    6[COMMON] unsigned char 
  2698 ;;  counter         1    5[COMMON] unsigned char 
  2699 ;; Return value:  Size  Location     Type
  2700 ;;                  2    0[COMMON] int 
  2701 ;; Registers used:
  2702 ;;		wreg, status,2, status,0
  2703 ;; Tracked objects:
  2704 ;;		On entry : 0/0
  2705 ;;		On exit  : 0/0
  2706 ;;		Unchanged: 0/0
  2707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2708 ;;      Params:         4       0       0       0       0
  2709 ;;      Locals:         2       0       0       0       0
  2710 ;;      Temps:          1       0       0       0       0
  2711 ;;      Totals:         7       0       0       0       0
  2712 ;;Total ram usage:        7 bytes
  2713 ;; Hardware stack levels used:    1
  2714 ;; This function calls:
  2715 ;;		Nothing
  2716 ;; This function is called by:
  2717 ;;		_DISP_Normal_Operation
  2718 ;;		_DISP_Set_Hours_Operation
  2719 ;;		_DISP_Set_Minutes_Operation
  2720 ;; This function uses a non-reentrant model
  2721 ;;
  2722                           
  2723                           
  2724                           ;psect for function ___awmod
  2725  03B5                     ___awmod:	
  2726  03B5                     l1517:	
  2727                           ;incstack = 0
  2728                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2729                           
  2730  03B5  01F6               	clrf	___awmod@sign
  2731  03B6                     l1519:	
  2732  03B6  1FF3               	btfss	___awmod@dividend+1,7
  2733  03B7  2BB9               	goto	u871
  2734  03B8  2BBA               	goto	u870
  2735  03B9                     u871:	
  2736  03B9  2BC1               	goto	l1525
  2737  03BA                     u870:	
  2738  03BA                     l1521:	
  2739  03BA  09F2               	comf	___awmod@dividend,f
  2740  03BB  09F3               	comf	___awmod@dividend+1,f
  2741  03BC  0AF2               	incf	___awmod@dividend,f
  2742  03BD  1903               	skipnz
  2743  03BE  0AF3               	incf	___awmod@dividend+1,f
  2744  03BF                     l1523:	
  2745  03BF  01F6               	clrf	___awmod@sign
  2746  03C0  0AF6               	incf	___awmod@sign,f
  2747  03C1                     l1525:	
  2748  03C1  1FF1               	btfss	___awmod@divisor+1,7
  2749  03C2  2BC4               	goto	u881
  2750  03C3  2BC5               	goto	u880
  2751  03C4                     u881:	
  2752  03C4  2BCA               	goto	l1529
  2753  03C5                     u880:	
  2754  03C5                     l1527:	
  2755  03C5  09F0               	comf	___awmod@divisor,f
  2756  03C6  09F1               	comf	___awmod@divisor+1,f
  2757  03C7  0AF0               	incf	___awmod@divisor,f
  2758  03C8  1903               	skipnz
  2759  03C9  0AF1               	incf	___awmod@divisor+1,f
  2760  03CA                     l1529:	
  2761  03CA  0870               	movf	___awmod@divisor,w
  2762  03CB  0471               	iorwf	___awmod@divisor+1,w
  2763  03CC  1903               	btfsc	3,2
  2764  03CD  2BCF               	goto	u891
  2765  03CE  2BD0               	goto	u890
  2766  03CF                     u891:	
  2767  03CF  2BFF               	goto	l1547
  2768  03D0                     u890:	
  2769  03D0                     l1531:	
  2770  03D0  01F5               	clrf	___awmod@counter
  2771  03D1  0AF5               	incf	___awmod@counter,f
  2772  03D2  2BDE               	goto	l1537
  2773  03D3                     l1533:	
  2774  03D3  3001               	movlw	1
  2775  03D4                     u905:	
  2776  03D4  1003               	clrc
  2777  03D5  0DF0               	rlf	___awmod@divisor,f
  2778  03D6  0DF1               	rlf	___awmod@divisor+1,f
  2779  03D7  3EFF               	addlw	-1
  2780  03D8  1D03               	skipz
  2781  03D9  2BD4               	goto	u905
  2782  03DA                     l1535:	
  2783  03DA  3001               	movlw	1
  2784  03DB  00F4               	movwf	??___awmod
  2785  03DC  0874               	movf	??___awmod,w
  2786  03DD  07F5               	addwf	___awmod@counter,f
  2787  03DE                     l1537:	
  2788  03DE  1FF1               	btfss	___awmod@divisor+1,7
  2789  03DF  2BE1               	goto	u911
  2790  03E0  2BE2               	goto	u910
  2791  03E1                     u911:	
  2792  03E1  2BD3               	goto	l1533
  2793  03E2                     u910:	
  2794  03E2                     l1539:	
  2795  03E2  0871               	movf	___awmod@divisor+1,w
  2796  03E3  0273               	subwf	___awmod@dividend+1,w
  2797  03E4  1D03               	skipz
  2798  03E5  2BE8               	goto	u925
  2799  03E6  0870               	movf	___awmod@divisor,w
  2800  03E7  0272               	subwf	___awmod@dividend,w
  2801  03E8                     u925:	
  2802  03E8  1C03               	skipc
  2803  03E9  2BEB               	goto	u921
  2804  03EA  2BEC               	goto	u920
  2805  03EB                     u921:	
  2806  03EB  2BF2               	goto	l1543
  2807  03EC                     u920:	
  2808  03EC                     l1541:	
  2809  03EC  0870               	movf	___awmod@divisor,w
  2810  03ED  02F2               	subwf	___awmod@dividend,f
  2811  03EE  0871               	movf	___awmod@divisor+1,w
  2812  03EF  1C03               	skipc
  2813  03F0  03F3               	decf	___awmod@dividend+1,f
  2814  03F1  02F3               	subwf	___awmod@dividend+1,f
  2815  03F2                     l1543:	
  2816  03F2  3001               	movlw	1
  2817  03F3                     u935:	
  2818  03F3  1003               	clrc
  2819  03F4  0CF1               	rrf	___awmod@divisor+1,f
  2820  03F5  0CF0               	rrf	___awmod@divisor,f
  2821  03F6  3EFF               	addlw	-1
  2822  03F7  1D03               	skipz
  2823  03F8  2BF3               	goto	u935
  2824  03F9                     l1545:	
  2825  03F9  3001               	movlw	1
  2826  03FA  02F5               	subwf	___awmod@counter,f
  2827  03FB  1D03               	btfss	3,2
  2828  03FC  2BFE               	goto	u941
  2829  03FD  2BFF               	goto	u940
  2830  03FE                     u941:	
  2831  03FE  2BE2               	goto	l1539
  2832  03FF                     u940:	
  2833  03FF                     l1547:	
  2834  03FF  0876               	movf	___awmod@sign,w
  2835  0400  1903               	btfsc	3,2
  2836  0401  2C03               	goto	u951
  2837  0402  2C04               	goto	u950
  2838  0403                     u951:	
  2839  0403  2C09               	goto	l1551
  2840  0404                     u950:	
  2841  0404                     l1549:	
  2842  0404  09F2               	comf	___awmod@dividend,f
  2843  0405  09F3               	comf	___awmod@dividend+1,f
  2844  0406  0AF2               	incf	___awmod@dividend,f
  2845  0407  1903               	skipnz
  2846  0408  0AF3               	incf	___awmod@dividend+1,f
  2847  0409                     l1551:	
  2848  0409  0873               	movf	___awmod@dividend+1,w
  2849  040A  00F1               	movwf	?___awmod+1
  2850  040B  0872               	movf	___awmod@dividend,w
  2851  040C  00F0               	movwf	?___awmod
  2852  040D                     l491:	
  2853  040D  0008               	return
  2854  040E                     __end_of___awmod:	
  2855                           
  2856                           	psect	text13
  2857  04C9                     __ptext13:	
  2858 ;; *************** function ___awdiv *****************
  2859 ;; Defined at:
  2860 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  2861 ;; Parameters:    Size  Location     Type
  2862 ;;  divisor         2    0[COMMON] int 
  2863 ;;  dividend        2    2[COMMON] int 
  2864 ;; Auto vars:     Size  Location     Type
  2865 ;;  quotient        2    7[COMMON] int 
  2866 ;;  sign            1    6[COMMON] unsigned char 
  2867 ;;  counter         1    5[COMMON] unsigned char 
  2868 ;; Return value:  Size  Location     Type
  2869 ;;                  2    0[COMMON] int 
  2870 ;; Registers used:
  2871 ;;		wreg, status,2, status,0
  2872 ;; Tracked objects:
  2873 ;;		On entry : 0/0
  2874 ;;		On exit  : 0/0
  2875 ;;		Unchanged: 0/0
  2876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2877 ;;      Params:         4       0       0       0       0
  2878 ;;      Locals:         4       0       0       0       0
  2879 ;;      Temps:          1       0       0       0       0
  2880 ;;      Totals:         9       0       0       0       0
  2881 ;;Total ram usage:        9 bytes
  2882 ;; Hardware stack levels used:    1
  2883 ;; This function calls:
  2884 ;;		Nothing
  2885 ;; This function is called by:
  2886 ;;		_DISP_Normal_Operation
  2887 ;;		_DISP_Set_Hours_Operation
  2888 ;;		_DISP_Set_Minutes_Operation
  2889 ;; This function uses a non-reentrant model
  2890 ;;
  2891                           
  2892                           
  2893                           ;psect for function ___awdiv
  2894  04C9                     ___awdiv:	
  2895  04C9                     l1473:	
  2896                           ;incstack = 0
  2897                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2898                           
  2899  04C9  01F6               	clrf	___awdiv@sign
  2900  04CA                     l1475:	
  2901  04CA  1FF1               	btfss	___awdiv@divisor+1,7
  2902  04CB  2CCD               	goto	u771
  2903  04CC  2CCE               	goto	u770
  2904  04CD                     u771:	
  2905  04CD  2CD5               	goto	l1481
  2906  04CE                     u770:	
  2907  04CE                     l1477:	
  2908  04CE  09F0               	comf	___awdiv@divisor,f
  2909  04CF  09F1               	comf	___awdiv@divisor+1,f
  2910  04D0  0AF0               	incf	___awdiv@divisor,f
  2911  04D1  1903               	skipnz
  2912  04D2  0AF1               	incf	___awdiv@divisor+1,f
  2913  04D3                     l1479:	
  2914  04D3  01F6               	clrf	___awdiv@sign
  2915  04D4  0AF6               	incf	___awdiv@sign,f
  2916  04D5                     l1481:	
  2917  04D5  1FF3               	btfss	___awdiv@dividend+1,7
  2918  04D6  2CD8               	goto	u781
  2919  04D7  2CD9               	goto	u780
  2920  04D8                     u781:	
  2921  04D8  2CE2               	goto	l1487
  2922  04D9                     u780:	
  2923  04D9                     l1483:	
  2924  04D9  09F2               	comf	___awdiv@dividend,f
  2925  04DA  09F3               	comf	___awdiv@dividend+1,f
  2926  04DB  0AF2               	incf	___awdiv@dividend,f
  2927  04DC  1903               	skipnz
  2928  04DD  0AF3               	incf	___awdiv@dividend+1,f
  2929  04DE                     l1485:	
  2930  04DE  3001               	movlw	1
  2931  04DF  00F4               	movwf	??___awdiv
  2932  04E0  0874               	movf	??___awdiv,w
  2933  04E1  06F6               	xorwf	___awdiv@sign,f
  2934  04E2                     l1487:	
  2935  04E2  01F7               	clrf	___awdiv@quotient
  2936  04E3  01F8               	clrf	___awdiv@quotient+1
  2937  04E4                     l1489:	
  2938  04E4  0870               	movf	___awdiv@divisor,w
  2939  04E5  0471               	iorwf	___awdiv@divisor+1,w
  2940  04E6  1903               	btfsc	3,2
  2941  04E7  2CE9               	goto	u791
  2942  04E8  2CEA               	goto	u790
  2943  04E9                     u791:	
  2944  04E9  2D21               	goto	l1509
  2945  04EA                     u790:	
  2946  04EA                     l1491:	
  2947  04EA  01F5               	clrf	___awdiv@counter
  2948  04EB  0AF5               	incf	___awdiv@counter,f
  2949  04EC  2CF8               	goto	l1497
  2950  04ED                     l1493:	
  2951  04ED  3001               	movlw	1
  2952  04EE                     u805:	
  2953  04EE  1003               	clrc
  2954  04EF  0DF0               	rlf	___awdiv@divisor,f
  2955  04F0  0DF1               	rlf	___awdiv@divisor+1,f
  2956  04F1  3EFF               	addlw	-1
  2957  04F2  1D03               	skipz
  2958  04F3  2CEE               	goto	u805
  2959  04F4                     l1495:	
  2960  04F4  3001               	movlw	1
  2961  04F5  00F4               	movwf	??___awdiv
  2962  04F6  0874               	movf	??___awdiv,w
  2963  04F7  07F5               	addwf	___awdiv@counter,f
  2964  04F8                     l1497:	
  2965  04F8  1FF1               	btfss	___awdiv@divisor+1,7
  2966  04F9  2CFB               	goto	u811
  2967  04FA  2CFC               	goto	u810
  2968  04FB                     u811:	
  2969  04FB  2CED               	goto	l1493
  2970  04FC                     u810:	
  2971  04FC                     l1499:	
  2972  04FC  3001               	movlw	1
  2973  04FD                     u825:	
  2974  04FD  1003               	clrc
  2975  04FE  0DF7               	rlf	___awdiv@quotient,f
  2976  04FF  0DF8               	rlf	___awdiv@quotient+1,f
  2977  0500  3EFF               	addlw	-1
  2978  0501  1D03               	skipz
  2979  0502  2CFD               	goto	u825
  2980  0503  0871               	movf	___awdiv@divisor+1,w
  2981  0504  0273               	subwf	___awdiv@dividend+1,w
  2982  0505  1D03               	skipz
  2983  0506  2D09               	goto	u835
  2984  0507  0870               	movf	___awdiv@divisor,w
  2985  0508  0272               	subwf	___awdiv@dividend,w
  2986  0509                     u835:	
  2987  0509  1C03               	skipc
  2988  050A  2D0C               	goto	u831
  2989  050B  2D0D               	goto	u830
  2990  050C                     u831:	
  2991  050C  2D14               	goto	l1505
  2992  050D                     u830:	
  2993  050D                     l1501:	
  2994  050D  0870               	movf	___awdiv@divisor,w
  2995  050E  02F2               	subwf	___awdiv@dividend,f
  2996  050F  0871               	movf	___awdiv@divisor+1,w
  2997  0510  1C03               	skipc
  2998  0511  03F3               	decf	___awdiv@dividend+1,f
  2999  0512  02F3               	subwf	___awdiv@dividend+1,f
  3000  0513                     l1503:	
  3001  0513  1477               	bsf	___awdiv@quotient,0
  3002  0514                     l1505:	
  3003  0514  3001               	movlw	1
  3004  0515                     u845:	
  3005  0515  1003               	clrc
  3006  0516  0CF1               	rrf	___awdiv@divisor+1,f
  3007  0517  0CF0               	rrf	___awdiv@divisor,f
  3008  0518  3EFF               	addlw	-1
  3009  0519  1D03               	skipz
  3010  051A  2D15               	goto	u845
  3011  051B                     l1507:	
  3012  051B  3001               	movlw	1
  3013  051C  02F5               	subwf	___awdiv@counter,f
  3014  051D  1D03               	btfss	3,2
  3015  051E  2D20               	goto	u851
  3016  051F  2D21               	goto	u850
  3017  0520                     u851:	
  3018  0520  2CFC               	goto	l1499
  3019  0521                     u850:	
  3020  0521                     l1509:	
  3021  0521  0876               	movf	___awdiv@sign,w
  3022  0522  1903               	btfsc	3,2
  3023  0523  2D25               	goto	u861
  3024  0524  2D26               	goto	u860
  3025  0525                     u861:	
  3026  0525  2D2B               	goto	l1513
  3027  0526                     u860:	
  3028  0526                     l1511:	
  3029  0526  09F7               	comf	___awdiv@quotient,f
  3030  0527  09F8               	comf	___awdiv@quotient+1,f
  3031  0528  0AF7               	incf	___awdiv@quotient,f
  3032  0529  1903               	skipnz
  3033  052A  0AF8               	incf	___awdiv@quotient+1,f
  3034  052B                     l1513:	
  3035  052B  0878               	movf	___awdiv@quotient+1,w
  3036  052C  00F1               	movwf	?___awdiv+1
  3037  052D  0877               	movf	___awdiv@quotient,w
  3038  052E  00F0               	movwf	?___awdiv
  3039  052F                     l478:	
  3040  052F  0008               	return
  3041  0530                     __end_of___awdiv:	
  3042                           
  3043                           	psect	text14
  3044  004A                     __ptext14:	
  3045 ;; *************** function _SSD_Toggle_Second_Dot *****************
  3046 ;; Defined at:
  3047 ;;		line 171 in file "SSD.c"
  3048 ;; Parameters:    Size  Location     Type
  3049 ;;		None
  3050 ;; Auto vars:     Size  Location     Type
  3051 ;;		None
  3052 ;; Return value:  Size  Location     Type
  3053 ;;                  1    wreg      void 
  3054 ;; Registers used:
  3055 ;;		wreg, status,2, status,0
  3056 ;; Tracked objects:
  3057 ;;		On entry : 0/0
  3058 ;;		On exit  : 0/0
  3059 ;;		Unchanged: 0/0
  3060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3061 ;;      Params:         0       0       0       0       0
  3062 ;;      Locals:         0       0       0       0       0
  3063 ;;      Temps:          1       0       0       0       0
  3064 ;;      Totals:         1       0       0       0       0
  3065 ;;Total ram usage:        1 bytes
  3066 ;; Hardware stack levels used:    1
  3067 ;; This function calls:
  3068 ;;		Nothing
  3069 ;; This function is called by:
  3070 ;;		_DISP_Normal_Operation
  3071 ;; This function uses a non-reentrant model
  3072 ;;
  3073                           
  3074                           
  3075                           ;psect for function _SSD_Toggle_Second_Dot
  3076  004A                     _SSD_Toggle_Second_Dot:	
  3077  004A                     l1457:	
  3078                           ;incstack = 0
  3079                           ; Regs used in _SSD_Toggle_Second_Dot: [wreg+status,2+status,0]
  3080                           
  3081                           
  3082                           ;SSD.c: 173:     Second_Dot_State ^= 1;
  3083  004A  3001               	movlw	1
  3084  004B  00F0               	movwf	??_SSD_Toggle_Second_Dot
  3085  004C  0870               	movf	??_SSD_Toggle_Second_Dot,w
  3086  004D  1283               	bcf	3,5	;RP0=0, select bank0
  3087  004E  1303               	bcf	3,6	;RP1=0, select bank0
  3088  004F  06AF               	xorwf	_Second_Dot_State,f
  3089  0050                     l115:	
  3090  0050  0008               	return
  3091  0051                     __end_of_SSD_Toggle_Second_Dot:	
  3092                           
  3093                           	psect	text15
  3094  00D0                     __ptext15:	
  3095 ;; *************** function _CLOCK_GetTime *****************
  3096 ;; Defined at:
  3097 ;;		line 68 in file "Clock.c"
  3098 ;; Parameters:    Size  Location     Type
  3099 ;;  t               1    wreg     PTR struct .
  3100 ;;		 -> DISP_Set_Minutes_Operation@tt(5), DISP_Set_Hours_Operation@tt(5), DISP_Normal_Operation@tt(5), 
  3101 ;; Auto vars:     Size  Location     Type
  3102 ;;  t               1    1[COMMON] PTR struct .
  3103 ;;		 -> DISP_Set_Minutes_Operation@tt(5), DISP_Set_Hours_Operation@tt(5), DISP_Normal_Operation@tt(5), 
  3104 ;; Return value:  Size  Location     Type
  3105 ;;                  1    wreg      void 
  3106 ;; Registers used:
  3107 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3108 ;; Tracked objects:
  3109 ;;		On entry : 0/0
  3110 ;;		On exit  : 0/0
  3111 ;;		Unchanged: 0/0
  3112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3113 ;;      Params:         0       0       0       0       0
  3114 ;;      Locals:         1       0       0       0       0
  3115 ;;      Temps:          1       0       0       0       0
  3116 ;;      Totals:         2       0       0       0       0
  3117 ;;Total ram usage:        2 bytes
  3118 ;; Hardware stack levels used:    1
  3119 ;; This function calls:
  3120 ;;		Nothing
  3121 ;; This function is called by:
  3122 ;;		_DISP_Normal_Operation
  3123 ;;		_DISP_Set_Hours_Operation
  3124 ;;		_DISP_Set_Minutes_Operation
  3125 ;; This function uses a non-reentrant model
  3126 ;;
  3127                           
  3128                           
  3129                           ;psect for function _CLOCK_GetTime
  3130  00D0                     _CLOCK_GetTime:	
  3131                           
  3132                           ;incstack = 0
  3133                           ; Regs used in _CLOCK_GetTime: [wreg-fsr0h+status,2+status,0]
  3134                           ;CLOCK_GetTime@t stored from wreg
  3135  00D0  00F1               	movwf	CLOCK_GetTime@t
  3136  00D1                     l1467:	
  3137                           
  3138                           ;Clock.c: 68: void CLOCK_GetTime(Time_t * t);Clock.c: 69: {;Clock.c: 71:     t->hours = 
      +                          CurrentTime.hours;
  3139  00D1  1283               	bcf	3,5	;RP0=0, select bank0
  3140  00D2  1303               	bcf	3,6	;RP1=0, select bank0
  3141  00D3  0831               	movf	_CurrentTime,w
  3142  00D4  00F0               	movwf	??_CLOCK_GetTime
  3143  00D5  0871               	movf	CLOCK_GetTime@t,w
  3144  00D6  0084               	movwf	4
  3145  00D7  0870               	movf	??_CLOCK_GetTime,w
  3146  00D8  1383               	bcf	3,7	;select IRP bank0
  3147  00D9  0080               	movwf	0
  3148                           
  3149                           ;Clock.c: 72:     t->minuts = CurrentTime.minuts;
  3150  00DA  0832               	movf	_CurrentTime+1,w
  3151  00DB  00F0               	movwf	??_CLOCK_GetTime
  3152  00DC  0A71               	incf	CLOCK_GetTime@t,w
  3153  00DD  0084               	movwf	4
  3154  00DE  0870               	movf	??_CLOCK_GetTime,w
  3155  00DF  0080               	movwf	0
  3156  00E0                     l1469:	
  3157                           
  3158                           ;Clock.c: 73:     t->seconds = CurrentTime.seconds;
  3159  00E0  0833               	movf	_CurrentTime+2,w
  3160  00E1  00F0               	movwf	??_CLOCK_GetTime
  3161  00E2  0871               	movf	CLOCK_GetTime@t,w
  3162  00E3  3E02               	addlw	2
  3163  00E4  0084               	movwf	4
  3164  00E5  0870               	movf	??_CLOCK_GetTime,w
  3165  00E6  0080               	movwf	0
  3166  00E7                     l1471:	
  3167                           
  3168                           ;Clock.c: 74:     t->mSeconds = CurrentTime.mSeconds;
  3169  00E7  0871               	movf	CLOCK_GetTime@t,w
  3170  00E8  3E03               	addlw	3
  3171  00E9  0084               	movwf	4
  3172  00EA  0834               	movf	_CurrentTime+3,w
  3173  00EB  0080               	movwf	0
  3174  00EC  0A84               	incf	4,f
  3175  00ED  0835               	movf	_CurrentTime+4,w
  3176  00EE  0080               	movwf	0
  3177  00EF                     l165:	
  3178  00EF  0008               	return
  3179  00F0                     __end_of_CLOCK_GetTime:	
  3180                           
  3181                           	psect	text16
  3182  0046                     __ptext16:	
  3183 ;; *************** function _CLOCK_GetMode *****************
  3184 ;; Defined at:
  3185 ;;		line 60 in file "Clock.c"
  3186 ;; Parameters:    Size  Location     Type
  3187 ;;		None
  3188 ;; Auto vars:     Size  Location     Type
  3189 ;;		None
  3190 ;; Return value:  Size  Location     Type
  3191 ;;                  1    wreg      enum E858
  3192 ;; Registers used:
  3193 ;;		wreg
  3194 ;; Tracked objects:
  3195 ;;		On entry : 0/0
  3196 ;;		On exit  : 0/0
  3197 ;;		Unchanged: 0/0
  3198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3199 ;;      Params:         0       0       0       0       0
  3200 ;;      Locals:         0       0       0       0       0
  3201 ;;      Temps:          0       0       0       0       0
  3202 ;;      Totals:         0       0       0       0       0
  3203 ;;Total ram usage:        0 bytes
  3204 ;; Hardware stack levels used:    1
  3205 ;; This function calls:
  3206 ;;		Nothing
  3207 ;; This function is called by:
  3208 ;;		_Disp_Update
  3209 ;; This function uses a non-reentrant model
  3210 ;;
  3211                           
  3212                           
  3213                           ;psect for function _CLOCK_GetMode
  3214  0046                     _CLOCK_GetMode:	
  3215  0046                     l1641:	
  3216                           ;incstack = 0
  3217                           ; Regs used in _CLOCK_GetMode: [wreg]
  3218                           
  3219                           
  3220                           ;Clock.c: 63:     return CurrentMode;
  3221  0046  1283               	bcf	3,5	;RP0=0, select bank0
  3222  0047  1303               	bcf	3,6	;RP1=0, select bank0
  3223  0048  082E               	movf	_CurrentMode,w
  3224  0049                     l162:	
  3225  0049  0008               	return
  3226  004A                     __end_of_CLOCK_GetMode:	
  3227                           
  3228                           	psect	text17
  3229  0162                     __ptext17:	
  3230 ;; *************** function _Disp_Init *****************
  3231 ;; Defined at:
  3232 ;;		line 48 in file "Disp.c"
  3233 ;; Parameters:    Size  Location     Type
  3234 ;;		None
  3235 ;; Auto vars:     Size  Location     Type
  3236 ;;		None
  3237 ;; Return value:  Size  Location     Type
  3238 ;;                  1    wreg      void 
  3239 ;; Registers used:
  3240 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3241 ;; Tracked objects:
  3242 ;;		On entry : 0/0
  3243 ;;		On exit  : 0/0
  3244 ;;		Unchanged: 0/0
  3245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3246 ;;      Params:         0       0       0       0       0
  3247 ;;      Locals:         0       0       0       0       0
  3248 ;;      Temps:          1       0       0       0       0
  3249 ;;      Totals:         1       0       0       0       0
  3250 ;;Total ram usage:        1 bytes
  3251 ;; Hardware stack levels used:    1
  3252 ;; Hardware stack levels required when called:    2
  3253 ;; This function calls:
  3254 ;;		_SSD_Init
  3255 ;;		_SSD_Set_Symbol
  3256 ;; This function is called by:
  3257 ;;		_main
  3258 ;; This function uses a non-reentrant model
  3259 ;;
  3260                           
  3261                           
  3262                           ;psect for function _Disp_Init
  3263  0162                     _Disp_Init:	
  3264  0162                     l1735:	
  3265                           ;incstack = 0
  3266                           ; Regs used in _Disp_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3267                           
  3268                           
  3269                           ;Disp.c: 51:     SSD_Init();
  3270  0162  120A  118A  235D  120A  118A  	fcall	_SSD_Init
  3271                           
  3272                           ;Disp.c: 53:     SSD_Set_Symbol(SSD_0,SSD_MINUTES_UNITS);
  3273  0167  01F9               	clrf	SSD_Set_Symbol@index
  3274  0168  3000               	movlw	0
  3275  0169  120A  118A  2062  120A  118A  	fcall	_SSD_Set_Symbol
  3276                           
  3277                           ;Disp.c: 54:     SSD_Set_Symbol(SSD_0,SSD_MINUTES_TENS);
  3278  016E  01F9               	clrf	SSD_Set_Symbol@index
  3279  016F  0AF9               	incf	SSD_Set_Symbol@index,f
  3280  0170  3000               	movlw	0
  3281  0171  120A  118A  2062  120A  118A  	fcall	_SSD_Set_Symbol
  3282                           
  3283                           ;Disp.c: 55:     SSD_Set_Symbol(SSD_0,SSD_HOURS_UNITS);
  3284  0176  3002               	movlw	2
  3285  0177  00FC               	movwf	??_Disp_Init
  3286  0178  087C               	movf	??_Disp_Init,w
  3287  0179  00F9               	movwf	SSD_Set_Symbol@index
  3288  017A  3000               	movlw	0
  3289  017B  120A  118A  2062  120A  118A  	fcall	_SSD_Set_Symbol
  3290                           
  3291                           ;Disp.c: 56:     SSD_Set_Symbol(SSD_0,SSD_HOURS_TENS);
  3292  0180  3003               	movlw	3
  3293  0181  00FC               	movwf	??_Disp_Init
  3294  0182  087C               	movf	??_Disp_Init,w
  3295  0183  00F9               	movwf	SSD_Set_Symbol@index
  3296  0184  3000               	movlw	0
  3297  0185  120A  118A  2062  120A  118A  	fcall	_SSD_Set_Symbol
  3298  018A                     l1737:	
  3299                           
  3300                           ;Disp.c: 58:     Disp_Blink_counter = 0;
  3301  018A  1283               	bcf	3,5	;RP0=0, select bank0
  3302  018B  1303               	bcf	3,6	;RP1=0, select bank0
  3303  018C  01AD               	clrf	_Disp_Blink_counter
  3304  018D                     l215:	
  3305  018D  0008               	return
  3306  018E                     __end_of_Disp_Init:	
  3307                           
  3308                           	psect	text18
  3309  0062                     __ptext18:	
  3310 ;; *************** function _SSD_Set_Symbol *****************
  3311 ;; Defined at:
  3312 ;;		line 86 in file "SSD.c"
  3313 ;; Parameters:    Size  Location     Type
  3314 ;;  symbol          1    wreg     enum E859
  3315 ;;  index           1    9[COMMON] enum E872
  3316 ;; Auto vars:     Size  Location     Type
  3317 ;;  symbol          1   11[COMMON] enum E859
  3318 ;; Return value:  Size  Location     Type
  3319 ;;                  1    wreg      void 
  3320 ;; Registers used:
  3321 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3322 ;; Tracked objects:
  3323 ;;		On entry : 0/0
  3324 ;;		On exit  : 0/0
  3325 ;;		Unchanged: 0/0
  3326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3327 ;;      Params:         1       0       0       0       0
  3328 ;;      Locals:         1       0       0       0       0
  3329 ;;      Temps:          1       0       0       0       0
  3330 ;;      Totals:         3       0       0       0       0
  3331 ;;Total ram usage:        3 bytes
  3332 ;; Hardware stack levels used:    1
  3333 ;; This function calls:
  3334 ;;		Nothing
  3335 ;; This function is called by:
  3336 ;;		_main
  3337 ;;		_Disp_Init
  3338 ;;		_DISP_Normal_Operation
  3339 ;;		_DISP_Set_Hours_Operation
  3340 ;;		_DISP_Set_Minutes_Operation
  3341 ;; This function uses a non-reentrant model
  3342 ;;
  3343                           
  3344                           
  3345                           ;psect for function _SSD_Set_Symbol
  3346  0062                     _SSD_Set_Symbol:	
  3347                           
  3348                           ;incstack = 0
  3349                           ; Regs used in _SSD_Set_Symbol: [wreg-fsr0h+status,2+status,0]
  3350                           ;SSD_Set_Symbol@symbol stored from wreg
  3351  0062  00FB               	movwf	SSD_Set_Symbol@symbol
  3352  0063                     l1455:	
  3353                           
  3354                           ;SSD.c: 86: void SSD_Set_Symbol(SSD_Symbol_t symbol,SSD_t index);SSD.c: 87: {;SSD.c: 89:
      +                               Buffer[index] = symbol;
  3355  0063  087B               	movf	SSD_Set_Symbol@symbol,w
  3356  0064  00FA               	movwf	??_SSD_Set_Symbol
  3357  0065  0879               	movf	SSD_Set_Symbol@index,w
  3358  0066  3E29               	addlw	(low (_Buffer| 0))& (0+255)
  3359  0067  0084               	movwf	4
  3360  0068  087A               	movf	??_SSD_Set_Symbol,w
  3361  0069  1383               	bcf	3,7	;select IRP bank0
  3362  006A  0080               	movwf	0
  3363  006B                     l84:	
  3364  006B  0008               	return
  3365  006C                     __end_of_SSD_Set_Symbol:	
  3366                           
  3367                           	psect	text19
  3368  035D                     __ptext19:	
  3369 ;; *************** function _SSD_Init *****************
  3370 ;; Defined at:
  3371 ;;		line 61 in file "SSD.c"
  3372 ;; Parameters:    Size  Location     Type
  3373 ;;		None
  3374 ;; Auto vars:     Size  Location     Type
  3375 ;;		None
  3376 ;; Return value:  Size  Location     Type
  3377 ;;                  1    wreg      void 
  3378 ;; Registers used:
  3379 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3380 ;; Tracked objects:
  3381 ;;		On entry : 0/0
  3382 ;;		On exit  : 0/0
  3383 ;;		Unchanged: 0/0
  3384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3385 ;;      Params:         0       0       0       0       0
  3386 ;;      Locals:         0       0       0       0       0
  3387 ;;      Temps:          1       0       0       0       0
  3388 ;;      Totals:         1       0       0       0       0
  3389 ;;Total ram usage:        1 bytes
  3390 ;; Hardware stack levels used:    1
  3391 ;; Hardware stack levels required when called:    1
  3392 ;; This function calls:
  3393 ;;		_GPIO_Init_Pin
  3394 ;;		_GPIO_Init_Port
  3395 ;; This function is called by:
  3396 ;;		_main
  3397 ;;		_Disp_Init
  3398 ;; This function uses a non-reentrant model
  3399 ;;
  3400                           
  3401                           
  3402                           ;psect for function _SSD_Init
  3403  035D                     _SSD_Init:	
  3404  035D                     l1555:	
  3405                           ;incstack = 0
  3406                           ; Regs used in _SSD_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3407                           
  3408                           
  3409                           ;SSD.c: 64:     GPIO_Init_Port(&(TRISD),(0));
  3410  035D  3088               	movlw	136
  3411  035E  00F0               	movwf	GPIO_Init_Port@DirRegAddress
  3412  035F  3000               	movlw	0
  3413  0360  00F1               	movwf	GPIO_Init_Port@DirRegAddress+1
  3414  0361  01F2               	clrf	GPIO_Init_Port@dir
  3415  0362  120A  118A  22B6  120A  118A  	fcall	_GPIO_Init_Port
  3416                           
  3417                           ;SSD.c: 67:     GPIO_Init_Pin(&(TRISB),(4),(0));
  3418  0367  3086               	movlw	134
  3419  0368  00F0               	movwf	GPIO_Init_Pin@DirRegAddress
  3420  0369  3000               	movlw	0
  3421  036A  00F1               	movwf	GPIO_Init_Pin@DirRegAddress+1
  3422  036B  3004               	movlw	4
  3423  036C  00F8               	movwf	??_SSD_Init
  3424  036D  0878               	movf	??_SSD_Init,w
  3425  036E  00F2               	movwf	GPIO_Init_Pin@pin_number
  3426  036F  01F3               	clrf	GPIO_Init_Pin@dir
  3427  0370  120A  118A  246B  120A  118A  	fcall	_GPIO_Init_Pin
  3428  0375                     l1557:	
  3429                           
  3430                           ;SSD.c: 68:     (((PORTB))=((PORTB) & ~(1<<(4)))|(SSD_OFF<<(4)));
  3431  0375  1283               	bcf	3,5	;RP0=0, select bank0
  3432  0376  1303               	bcf	3,6	;RP1=0, select bank0
  3433  0377  0806               	movf	6,w	;volatile
  3434  0378  39EF               	andlw	239
  3435  0379  0086               	movwf	6	;volatile
  3436  037A                     l1559:	
  3437                           
  3438                           ;SSD.c: 70:     GPIO_Init_Pin(&(TRISB),(5),(0));
  3439  037A  3086               	movlw	134
  3440  037B  00F0               	movwf	GPIO_Init_Pin@DirRegAddress
  3441  037C  3000               	movlw	0
  3442  037D  00F1               	movwf	GPIO_Init_Pin@DirRegAddress+1
  3443  037E  3005               	movlw	5
  3444  037F  00F8               	movwf	??_SSD_Init
  3445  0380  0878               	movf	??_SSD_Init,w
  3446  0381  00F2               	movwf	GPIO_Init_Pin@pin_number
  3447  0382  01F3               	clrf	GPIO_Init_Pin@dir
  3448  0383  120A  118A  246B  120A  118A  	fcall	_GPIO_Init_Pin
  3449                           
  3450                           ;SSD.c: 71:     (((PORTB))=((PORTB) & ~(1<<(5)))|(SSD_OFF<<(5)));
  3451  0388  1283               	bcf	3,5	;RP0=0, select bank0
  3452  0389  1303               	bcf	3,6	;RP1=0, select bank0
  3453  038A  0806               	movf	6,w	;volatile
  3454  038B  39DF               	andlw	223
  3455  038C  0086               	movwf	6	;volatile
  3456  038D                     l1561:	
  3457                           
  3458                           ;SSD.c: 73:     GPIO_Init_Pin(&(TRISB),(6),(0));
  3459  038D  3086               	movlw	134
  3460  038E  00F0               	movwf	GPIO_Init_Pin@DirRegAddress
  3461  038F  3000               	movlw	0
  3462  0390  00F1               	movwf	GPIO_Init_Pin@DirRegAddress+1
  3463  0391  3006               	movlw	6
  3464  0392  00F8               	movwf	??_SSD_Init
  3465  0393  0878               	movf	??_SSD_Init,w
  3466  0394  00F2               	movwf	GPIO_Init_Pin@pin_number
  3467  0395  01F3               	clrf	GPIO_Init_Pin@dir
  3468  0396  120A  118A  246B  120A  118A  	fcall	_GPIO_Init_Pin
  3469  039B                     l1563:	
  3470                           
  3471                           ;SSD.c: 74:     (((PORTB))=((PORTB) & ~(1<<(6)))|(SSD_OFF<<(6)));
  3472  039B  1283               	bcf	3,5	;RP0=0, select bank0
  3473  039C  1303               	bcf	3,6	;RP1=0, select bank0
  3474  039D  0806               	movf	6,w	;volatile
  3475  039E  39BF               	andlw	191
  3476  039F  0086               	movwf	6	;volatile
  3477                           
  3478                           ;SSD.c: 76:     GPIO_Init_Pin(&(TRISB),(7),(0));
  3479  03A0  3086               	movlw	134
  3480  03A1  00F0               	movwf	GPIO_Init_Pin@DirRegAddress
  3481  03A2  3000               	movlw	0
  3482  03A3  00F1               	movwf	GPIO_Init_Pin@DirRegAddress+1
  3483  03A4  3007               	movlw	7
  3484  03A5  00F8               	movwf	??_SSD_Init
  3485  03A6  0878               	movf	??_SSD_Init,w
  3486  03A7  00F2               	movwf	GPIO_Init_Pin@pin_number
  3487  03A8  01F3               	clrf	GPIO_Init_Pin@dir
  3488  03A9  120A  118A  246B  120A  118A  	fcall	_GPIO_Init_Pin
  3489  03AE                     l1565:	
  3490                           
  3491                           ;SSD.c: 77:     (((PORTB))=((PORTB) & ~(1<<(7)))|(SSD_OFF<<(7)));
  3492  03AE  1283               	bcf	3,5	;RP0=0, select bank0
  3493  03AF  1303               	bcf	3,6	;RP1=0, select bank0
  3494  03B0  0806               	movf	6,w	;volatile
  3495  03B1  397F               	andlw	127
  3496  03B2  0086               	movwf	6	;volatile
  3497  03B3                     l1567:	
  3498                           
  3499                           ;SSD.c: 80:     Second_Dot_State = SSD_OFF;
  3500  03B3  01AF               	clrf	_Second_Dot_State
  3501  03B4                     l81:	
  3502  03B4  0008               	return
  3503  03B5                     __end_of_SSD_Init:	
  3504                           
  3505                           	psect	text20
  3506  02B6                     __ptext20:	
  3507 ;; *************** function _GPIO_Init_Port *****************
  3508 ;; Defined at:
  3509 ;;		line 14 in file "GPIO.c"
  3510 ;; Parameters:    Size  Location     Type
  3511 ;;  DirRegAddres    2    0[COMMON] PTR unsigned char 
  3512 ;;		 -> TRISD(1), 
  3513 ;;  dir             1    2[COMMON] unsigned char 
  3514 ;; Auto vars:     Size  Location     Type
  3515 ;;  ret             1    0        unsigned char 
  3516 ;; Return value:  Size  Location     Type
  3517 ;;                  1    wreg      unsigned char 
  3518 ;; Registers used:
  3519 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3520 ;; Tracked objects:
  3521 ;;		On entry : 0/0
  3522 ;;		On exit  : 0/0
  3523 ;;		Unchanged: 0/0
  3524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3525 ;;      Params:         3       0       0       0       0
  3526 ;;      Locals:         3       0       0       0       0
  3527 ;;      Temps:          1       0       0       0       0
  3528 ;;      Totals:         7       0       0       0       0
  3529 ;;Total ram usage:        7 bytes
  3530 ;; Hardware stack levels used:    1
  3531 ;; This function calls:
  3532 ;;		Nothing
  3533 ;; This function is called by:
  3534 ;;		_SSD_Init
  3535 ;; This function uses a non-reentrant model
  3536 ;;
  3537                           
  3538                           
  3539                           ;psect for function _GPIO_Init_Port
  3540  02B6                     _GPIO_Init_Port:	
  3541  02B6                     l1413:	
  3542                           ;incstack = 0
  3543                           ; Regs used in _GPIO_Init_Port: [wreg-fsr0h+status,2+status,0]
  3544                           
  3545  02B6                     l1415:	
  3546                           
  3547                           ;GPIO.c: 18:     if(*DirRegAddress != (TRISA) && *DirRegAddress != (TRISB) &&
  3548  02B6  0870               	movf	GPIO_Init_Port@DirRegAddress,w
  3549  02B7  0084               	movwf	4
  3550  02B8  1783               	bsf	3,7
  3551  02B9  1C71               	btfss	GPIO_Init_Port@DirRegAddress+1,0
  3552  02BA  1383               	bcf	3,7
  3553  02BB  0800               	movf	0,w
  3554  02BC  1683               	bsf	3,5	;RP0=1, select bank1
  3555  02BD  1303               	bcf	3,6	;RP1=0, select bank1
  3556  02BE  0605               	xorwf	5,w	;volatile
  3557  02BF  1903               	skipnz
  3558  02C0  2AC2               	goto	u641
  3559  02C1  2AC3               	goto	u640
  3560  02C2                     u641:	
  3561  02C2  2AF0               	goto	l1427
  3562  02C3                     u640:	
  3563  02C3                     l1417:	
  3564  02C3  0870               	movf	GPIO_Init_Port@DirRegAddress,w
  3565  02C4  0084               	movwf	4
  3566  02C5  1783               	bsf	3,7
  3567  02C6  1C71               	btfss	GPIO_Init_Port@DirRegAddress+1,0
  3568  02C7  1383               	bcf	3,7
  3569  02C8  0800               	movf	0,w
  3570  02C9  0606               	xorwf	6,w	;volatile
  3571  02CA  1903               	skipnz
  3572  02CB  2ACD               	goto	u651
  3573  02CC  2ACE               	goto	u650
  3574  02CD                     u651:	
  3575  02CD  2AF0               	goto	l1427
  3576  02CE                     u650:	
  3577  02CE                     l1419:	
  3578  02CE  0870               	movf	GPIO_Init_Port@DirRegAddress,w
  3579  02CF  0084               	movwf	4
  3580  02D0  1783               	bsf	3,7
  3581  02D1  1C71               	btfss	GPIO_Init_Port@DirRegAddress+1,0
  3582  02D2  1383               	bcf	3,7
  3583  02D3  0800               	movf	0,w
  3584  02D4  0607               	xorwf	7,w	;volatile
  3585  02D5  1903               	skipnz
  3586  02D6  2AD8               	goto	u661
  3587  02D7  2AD9               	goto	u660
  3588  02D8                     u661:	
  3589  02D8  2AF0               	goto	l1427
  3590  02D9                     u660:	
  3591  02D9                     l1421:	
  3592  02D9  0870               	movf	GPIO_Init_Port@DirRegAddress,w
  3593  02DA  0084               	movwf	4
  3594  02DB  1783               	bsf	3,7
  3595  02DC  1C71               	btfss	GPIO_Init_Port@DirRegAddress+1,0
  3596  02DD  1383               	bcf	3,7
  3597  02DE  0800               	movf	0,w
  3598  02DF  0608               	xorwf	8,w	;volatile
  3599  02E0  1903               	skipnz
  3600  02E1  2AE3               	goto	u671
  3601  02E2  2AE4               	goto	u670
  3602  02E3                     u671:	
  3603  02E3  2AF0               	goto	l1427
  3604  02E4                     u670:	
  3605  02E4                     l1423:	
  3606  02E4  0870               	movf	GPIO_Init_Port@DirRegAddress,w
  3607  02E5  0084               	movwf	4
  3608  02E6  1783               	bsf	3,7
  3609  02E7  1C71               	btfss	GPIO_Init_Port@DirRegAddress+1,0
  3610  02E8  1383               	bcf	3,7
  3611  02E9  0800               	movf	0,w
  3612  02EA  0609               	xorwf	9,w	;volatile
  3613  02EB  1903               	skipnz
  3614  02EC  2AEE               	goto	u681
  3615  02ED  2AEF               	goto	u680
  3616  02EE                     u681:	
  3617  02EE  2AF0               	goto	l1427
  3618  02EF                     u680:	
  3619  02EF                     l1425:	
  3620                           
  3621                           ;GPIO.c: 24:     }
  3622  02EF  2B05               	goto	l19
  3623  02F0                     l1427:	
  3624                           
  3625                           ;GPIO.c: 26:     {;GPIO.c: 27:         ((*DirRegAddress)=(dir)?(~0):(0));
  3626  02F0  0872               	movf	GPIO_Init_Port@dir,w
  3627  02F1  1D03               	btfss	3,2
  3628  02F2  2AF4               	goto	u691
  3629  02F3  2AF5               	goto	u690
  3630  02F4                     u691:	
  3631  02F4  2AF8               	goto	l1431
  3632  02F5                     u690:	
  3633  02F5                     l1429:	
  3634  02F5  01F5               	clrf	_GPIO_Init_Port$31
  3635  02F6  01F6               	clrf	_GPIO_Init_Port$31+1
  3636  02F7  2AFC               	goto	l1433
  3637  02F8                     l1431:	
  3638  02F8  30FF               	movlw	255
  3639  02F9  00F5               	movwf	_GPIO_Init_Port$31
  3640  02FA  30FF               	movlw	255
  3641  02FB  00F6               	movwf	_GPIO_Init_Port$31+1
  3642  02FC                     l1433:	
  3643  02FC  0875               	movf	_GPIO_Init_Port$31,w
  3644  02FD  00F3               	movwf	??_GPIO_Init_Port
  3645  02FE  0870               	movf	GPIO_Init_Port@DirRegAddress,w
  3646  02FF  0084               	movwf	4
  3647  0300  1783               	bsf	3,7
  3648  0301  1C71               	btfss	GPIO_Init_Port@DirRegAddress+1,0
  3649  0302  1383               	bcf	3,7
  3650  0303  0873               	movf	??_GPIO_Init_Port,w
  3651  0304  0080               	movwf	0
  3652  0305                     l19:	
  3653  0305  0008               	return
  3654  0306                     __end_of_GPIO_Init_Port:	
  3655                           
  3656                           	psect	text21
  3657  046B                     __ptext21:	
  3658 ;; *************** function _GPIO_Init_Pin *****************
  3659 ;; Defined at:
  3660 ;;		line 34 in file "GPIO.c"
  3661 ;; Parameters:    Size  Location     Type
  3662 ;;  DirRegAddres    2    0[COMMON] PTR unsigned char 
  3663 ;;		 -> RAM(512), TRISB(1), 
  3664 ;;  pin_number      1    2[COMMON] unsigned char 
  3665 ;;  dir             1    3[COMMON] unsigned char 
  3666 ;; Auto vars:     Size  Location     Type
  3667 ;;  ret             1    0        unsigned char 
  3668 ;; Return value:  Size  Location     Type
  3669 ;;                  1    wreg      unsigned char 
  3670 ;; Registers used:
  3671 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3672 ;; Tracked objects:
  3673 ;;		On entry : 0/0
  3674 ;;		On exit  : 0/0
  3675 ;;		Unchanged: 0/0
  3676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3677 ;;      Params:         4       0       0       0       0
  3678 ;;      Locals:         1       0       0       0       0
  3679 ;;      Temps:          3       0       0       0       0
  3680 ;;      Totals:         8       0       0       0       0
  3681 ;;Total ram usage:        8 bytes
  3682 ;; Hardware stack levels used:    1
  3683 ;; This function calls:
  3684 ;;		Nothing
  3685 ;; This function is called by:
  3686 ;;		_SSD_Init
  3687 ;;		_SW_Init
  3688 ;; This function uses a non-reentrant model
  3689 ;;
  3690                           
  3691                           
  3692                           ;psect for function _GPIO_Init_Pin
  3693  046B                     _GPIO_Init_Pin:	
  3694  046B                     l1437:	
  3695                           ;incstack = 0
  3696                           ; Regs used in _GPIO_Init_Pin: [wreg-fsr0h+status,2+status,0]
  3697                           
  3698  046B                     l1439:	
  3699                           
  3700                           ;GPIO.c: 38:     if(*DirRegAddress != (TRISA) && *DirRegAddress != (TRISB) &&
  3701  046B  0870               	movf	GPIO_Init_Pin@DirRegAddress,w
  3702  046C  0084               	movwf	4
  3703  046D  1783               	bsf	3,7
  3704  046E  1C71               	btfss	GPIO_Init_Pin@DirRegAddress+1,0
  3705  046F  1383               	bcf	3,7
  3706  0470  0800               	movf	0,w
  3707  0471  1683               	bsf	3,5	;RP0=1, select bank1
  3708  0472  1303               	bcf	3,6	;RP1=0, select bank1
  3709  0473  0605               	xorwf	5,w	;volatile
  3710  0474  1903               	skipnz
  3711  0475  2C77               	goto	u701
  3712  0476  2C78               	goto	u700
  3713  0477                     u701:	
  3714  0477  2CA5               	goto	l1451
  3715  0478                     u700:	
  3716  0478                     l1441:	
  3717  0478  0870               	movf	GPIO_Init_Pin@DirRegAddress,w
  3718  0479  0084               	movwf	4
  3719  047A  1783               	bsf	3,7
  3720  047B  1C71               	btfss	GPIO_Init_Pin@DirRegAddress+1,0
  3721  047C  1383               	bcf	3,7
  3722  047D  0800               	movf	0,w
  3723  047E  0606               	xorwf	6,w	;volatile
  3724  047F  1903               	skipnz
  3725  0480  2C82               	goto	u711
  3726  0481  2C83               	goto	u710
  3727  0482                     u711:	
  3728  0482  2CA5               	goto	l1451
  3729  0483                     u710:	
  3730  0483                     l1443:	
  3731  0483  0870               	movf	GPIO_Init_Pin@DirRegAddress,w
  3732  0484  0084               	movwf	4
  3733  0485  1783               	bsf	3,7
  3734  0486  1C71               	btfss	GPIO_Init_Pin@DirRegAddress+1,0
  3735  0487  1383               	bcf	3,7
  3736  0488  0800               	movf	0,w
  3737  0489  0607               	xorwf	7,w	;volatile
  3738  048A  1903               	skipnz
  3739  048B  2C8D               	goto	u721
  3740  048C  2C8E               	goto	u720
  3741  048D                     u721:	
  3742  048D  2CA5               	goto	l1451
  3743  048E                     u720:	
  3744  048E                     l1445:	
  3745  048E  0870               	movf	GPIO_Init_Pin@DirRegAddress,w
  3746  048F  0084               	movwf	4
  3747  0490  1783               	bsf	3,7
  3748  0491  1C71               	btfss	GPIO_Init_Pin@DirRegAddress+1,0
  3749  0492  1383               	bcf	3,7
  3750  0493  0800               	movf	0,w
  3751  0494  0608               	xorwf	8,w	;volatile
  3752  0495  1903               	skipnz
  3753  0496  2C98               	goto	u731
  3754  0497  2C99               	goto	u730
  3755  0498                     u731:	
  3756  0498  2CA5               	goto	l1451
  3757  0499                     u730:	
  3758  0499                     l1447:	
  3759  0499  0870               	movf	GPIO_Init_Pin@DirRegAddress,w
  3760  049A  0084               	movwf	4
  3761  049B  1783               	bsf	3,7
  3762  049C  1C71               	btfss	GPIO_Init_Pin@DirRegAddress+1,0
  3763  049D  1383               	bcf	3,7
  3764  049E  0800               	movf	0,w
  3765  049F  0609               	xorwf	9,w	;volatile
  3766  04A0  1903               	skipnz
  3767  04A1  2CA3               	goto	u741
  3768  04A2  2CA4               	goto	u740
  3769  04A3                     u741:	
  3770  04A3  2CA5               	goto	l1451
  3771  04A4                     u740:	
  3772  04A4                     l1449:	
  3773                           
  3774                           ;GPIO.c: 44:     }
  3775  04A4  2CC8               	goto	l24
  3776  04A5                     l1451:	
  3777                           
  3778                           ;GPIO.c: 46:     {;GPIO.c: 47:         ((*DirRegAddress)=(*DirRegAddress & ~(1<<pin_numb
      +                          er))|(dir<<pin_number));
  3779  04A5  0873               	movf	GPIO_Init_Pin@dir,w
  3780  04A6  00F4               	movwf	??_GPIO_Init_Pin
  3781  04A7  0A72               	incf	GPIO_Init_Pin@pin_number,w
  3782  04A8  2CAB               	goto	u754
  3783  04A9                     u755:	
  3784  04A9  1003               	clrc
  3785  04AA  0DF4               	rlf	??_GPIO_Init_Pin,f
  3786  04AB                     u754:	
  3787  04AB  3EFF               	addlw	-1
  3788  04AC  1D03               	skipz
  3789  04AD  2CA9               	goto	u755
  3790  04AE  0870               	movf	GPIO_Init_Pin@DirRegAddress,w
  3791  04AF  0084               	movwf	4
  3792  04B0  1783               	bsf	3,7
  3793  04B1  1C71               	btfss	GPIO_Init_Pin@DirRegAddress+1,0
  3794  04B2  1383               	bcf	3,7
  3795  04B3  3001               	movlw	1
  3796  04B4  00F5               	movwf	??_GPIO_Init_Pin+1
  3797  04B5  0A72               	incf	GPIO_Init_Pin@pin_number,w
  3798  04B6  2CB9               	goto	u764
  3799  04B7                     u765:	
  3800  04B7  1003               	clrc
  3801  04B8  0DF5               	rlf	??_GPIO_Init_Pin+1,f
  3802  04B9                     u764:	
  3803  04B9  3EFF               	addlw	-1
  3804  04BA  1D03               	skipz
  3805  04BB  2CB7               	goto	u765
  3806  04BC  0875               	movf	??_GPIO_Init_Pin+1,w
  3807  04BD  3AFF               	xorlw	255
  3808  04BE  0500               	andwf	0,w
  3809  04BF  0474               	iorwf	??_GPIO_Init_Pin,w
  3810  04C0  00F6               	movwf	??_GPIO_Init_Pin+2
  3811  04C1  0870               	movf	GPIO_Init_Pin@DirRegAddress,w
  3812  04C2  0084               	movwf	4
  3813  04C3  1783               	bsf	3,7
  3814  04C4  1C71               	btfss	GPIO_Init_Pin@DirRegAddress+1,0
  3815  04C5  1383               	bcf	3,7
  3816  04C6  0876               	movf	??_GPIO_Init_Pin+2,w
  3817  04C7  0080               	movwf	0
  3818  04C8                     l24:	
  3819  04C8  0008               	return
  3820  04C9                     __end_of_GPIO_Init_Pin:	
  3821                           
  3822                           	psect	text22
  3823  0306                     __ptext22:	
  3824 ;; *************** function _CLOCK_Update *****************
  3825 ;; Defined at:
  3826 ;;		line 118 in file "Clock.c"
  3827 ;; Parameters:    Size  Location     Type
  3828 ;;		None
  3829 ;; Auto vars:     Size  Location     Type
  3830 ;;		None
  3831 ;; Return value:  Size  Location     Type
  3832 ;;                  1    wreg      void 
  3833 ;; Registers used:
  3834 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3835 ;; Tracked objects:
  3836 ;;		On entry : 0/0
  3837 ;;		On exit  : 0/0
  3838 ;;		Unchanged: 0/0
  3839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3840 ;;      Params:         0       0       0       0       0
  3841 ;;      Locals:         0       0       0       0       0
  3842 ;;      Temps:          2       0       0       0       0
  3843 ;;      Totals:         2       0       0       0       0
  3844 ;;Total ram usage:        2 bytes
  3845 ;; Hardware stack levels used:    1
  3846 ;; Hardware stack levels required when called:    3
  3847 ;; This function calls:
  3848 ;;		_CLOCK_Increment
  3849 ;;		_SW_GetState
  3850 ;;		_set_mode_process
  3851 ;; This function is called by:
  3852 ;;		_main
  3853 ;; This function uses a non-reentrant model
  3854 ;;
  3855                           
  3856                           
  3857                           ;psect for function _CLOCK_Update
  3858  0306                     _CLOCK_Update:	
  3859  0306                     l1759:	
  3860                           ;incstack = 0
  3861                           ; Regs used in _CLOCK_Update: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3862                           
  3863                           
  3864                           ;Clock.c: 124:     if(SW_GetState(SW_SET)== SW_PRE_PRESSED)
  3865  0306  3002               	movlw	2
  3866  0307  120A  118A  208A  120A  118A  	fcall	_SW_GetState
  3867  030C  3A01               	xorlw	1
  3868  030D  1D03               	skipz
  3869  030E  2B10               	goto	u1201
  3870  030F  2B11               	goto	u1200
  3871  0310                     u1201:	
  3872  0310  2B31               	goto	l1771
  3873  0311                     u1200:	
  3874  0311  2B1C               	goto	l1769
  3875  0312                     l177:	
  3876                           ;Clock.c: 128:         {;Clock.c: 129:             case CL_NORMAL:
  3877                           
  3878                           
  3879                           ;Clock.c: 130:                 CurrentMode = CL_SET_HOURS;
  3880  0312  01AE               	clrf	_CurrentMode
  3881  0313  0AAE               	incf	_CurrentMode,f
  3882                           
  3883                           ;Clock.c: 131:                 break;
  3884  0314  2B31               	goto	l1771
  3885  0315                     l1763:	
  3886                           
  3887                           ;Clock.c: 133:                 CurrentMode = CL_SET_MINUTES;
  3888  0315  3002               	movlw	2
  3889  0316  00FA               	movwf	??_CLOCK_Update
  3890  0317  087A               	movf	??_CLOCK_Update,w
  3891  0318  00AE               	movwf	_CurrentMode
  3892                           
  3893                           ;Clock.c: 134:                 break;
  3894  0319  2B31               	goto	l1771
  3895  031A                     l1765:	
  3896                           
  3897                           ;Clock.c: 136:                 CurrentMode = CL_NORMAL;
  3898  031A  01AE               	clrf	_CurrentMode
  3899                           
  3900                           ;Clock.c: 137:                 break;
  3901  031B  2B31               	goto	l1771
  3902  031C                     l1769:	
  3903  031C  1283               	bcf	3,5	;RP0=0, select bank0
  3904  031D  1303               	bcf	3,6	;RP1=0, select bank0
  3905  031E  082E               	movf	_CurrentMode,w
  3906  031F  00FA               	movwf	??_CLOCK_Update
  3907  0320  01FB               	clrf	??_CLOCK_Update+1
  3908                           
  3909                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3910                           ; Switch size 1, requested type "simple"
  3911                           ; Number of cases is 1, Range of values is 0 to 0
  3912                           ; switch strategies available:
  3913                           ; Name         Instructions Cycles
  3914                           ; simple_byte            4     3 (average)
  3915                           ; direct_byte           11     8 (fixed)
  3916                           ; jumptable            260     6 (fixed)
  3917                           ;	Chosen strategy is simple_byte
  3918  0321  087B               	movf	??_CLOCK_Update+1,w
  3919  0322  3A00               	xorlw	0	; case 0
  3920  0323  1903               	skipnz
  3921  0324  2B26               	goto	l1975
  3922  0325  2B31               	goto	l1771
  3923  0326                     l1975:	
  3924                           
  3925                           ; Switch size 1, requested type "simple"
  3926                           ; Number of cases is 3, Range of values is 0 to 2
  3927                           ; switch strategies available:
  3928                           ; Name         Instructions Cycles
  3929                           ; simple_byte           10     6 (average)
  3930                           ; direct_byte           17     8 (fixed)
  3931                           ; jumptable            260     6 (fixed)
  3932                           ;	Chosen strategy is simple_byte
  3933  0326  087A               	movf	??_CLOCK_Update,w
  3934  0327  3A00               	xorlw	0	; case 0
  3935  0328  1903               	skipnz
  3936  0329  2B12               	goto	l177
  3937  032A  3A01               	xorlw	1	; case 1
  3938  032B  1903               	skipnz
  3939  032C  2B15               	goto	l1763
  3940  032D  3A03               	xorlw	3	; case 2
  3941  032E  1903               	skipnz
  3942  032F  2B1A               	goto	l1765
  3943  0330  2B31               	goto	l1771
  3944  0331                     l1771:	
  3945                           
  3946                           ;Clock.c: 144:     if(CurrentMode == CL_NORMAL)
  3947  0331  1283               	bcf	3,5	;RP0=0, select bank0
  3948  0332  1303               	bcf	3,6	;RP1=0, select bank0
  3949  0333  082E               	movf	_CurrentMode,w
  3950  0334  1D03               	btfss	3,2
  3951  0335  2B37               	goto	u1211
  3952  0336  2B38               	goto	u1210
  3953  0337                     u1211:	
  3954  0337  2B4C               	goto	l1781
  3955  0338                     u1210:	
  3956  0338                     l1773:	
  3957                           
  3958                           ;Clock.c: 145:     {;Clock.c: 146:         CLOCK_Increment();
  3959  0338  120A  118A  21F4  120A  118A  	fcall	_CLOCK_Increment
  3960                           
  3961                           ;Clock.c: 147:     }
  3962  033D  2B5C               	goto	l189
  3963  033E                     l1775:	
  3964                           
  3965                           ;Clock.c: 155:                 set_mode_process(&CurrentTime.hours);
  3966  033E  3031               	movlw	(low (_CurrentTime| 0))& (0+255)
  3967  033F  120A  118A  2113  120A  118A  	fcall	_set_mode_process
  3968                           
  3969                           ;Clock.c: 156:                 break;
  3970  0344  2B5C               	goto	l189
  3971  0345                     l1777:	
  3972                           
  3973                           ;Clock.c: 159:                 set_mode_process(&CurrentTime.minuts);
  3974  0345  3032               	movlw	(low ((_CurrentTime| 0+1)))& (0+255)
  3975  0346  120A  118A  2113  120A  118A  	fcall	_set_mode_process
  3976                           
  3977                           ;Clock.c: 160:                 break;
  3978  034B  2B5C               	goto	l189
  3979  034C                     l1781:	
  3980  034C  082E               	movf	_CurrentMode,w
  3981  034D  00FA               	movwf	??_CLOCK_Update
  3982  034E  01FB               	clrf	??_CLOCK_Update+1
  3983                           
  3984                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3985                           ; Switch size 1, requested type "simple"
  3986                           ; Number of cases is 1, Range of values is 0 to 0
  3987                           ; switch strategies available:
  3988                           ; Name         Instructions Cycles
  3989                           ; simple_byte            4     3 (average)
  3990                           ; direct_byte           11     8 (fixed)
  3991                           ; jumptable            260     6 (fixed)
  3992                           ;	Chosen strategy is simple_byte
  3993  034F  087B               	movf	??_CLOCK_Update+1,w
  3994  0350  3A00               	xorlw	0	; case 0
  3995  0351  1903               	skipnz
  3996  0352  2B54               	goto	l1977
  3997  0353  2B5C               	goto	l189
  3998  0354                     l1977:	
  3999                           
  4000                           ; Switch size 1, requested type "simple"
  4001                           ; Number of cases is 2, Range of values is 1 to 2
  4002                           ; switch strategies available:
  4003                           ; Name         Instructions Cycles
  4004                           ; simple_byte            7     4 (average)
  4005                           ; direct_byte           17    11 (fixed)
  4006                           ; jumptable            263     9 (fixed)
  4007                           ;	Chosen strategy is simple_byte
  4008  0354  087A               	movf	??_CLOCK_Update,w
  4009  0355  3A01               	xorlw	1	; case 1
  4010  0356  1903               	skipnz
  4011  0357  2B3E               	goto	l1775
  4012  0358  3A03               	xorlw	3	; case 2
  4013  0359  1903               	skipnz
  4014  035A  2B45               	goto	l1777
  4015  035B  2B5C               	goto	l189
  4016  035C                     l189:	
  4017  035C  0008               	return
  4018  035D                     __end_of_CLOCK_Update:	
  4019                           
  4020                           	psect	text23
  4021  0113                     __ptext23:	
  4022 ;; *************** function _set_mode_process *****************
  4023 ;; Defined at:
  4024 ;;		line 168 in file "Clock.c"
  4025 ;; Parameters:    Size  Location     Type
  4026 ;;  var             1    wreg     PTR unsigned char 
  4027 ;;		 -> CurrentTime(5), 
  4028 ;; Auto vars:     Size  Location     Type
  4029 ;;  var             1    9[COMMON] PTR unsigned char 
  4030 ;;		 -> CurrentTime(5), 
  4031 ;; Return value:  Size  Location     Type
  4032 ;;                  1    wreg      void 
  4033 ;; Registers used:
  4034 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4035 ;; Tracked objects:
  4036 ;;		On entry : 0/0
  4037 ;;		On exit  : 0/0
  4038 ;;		Unchanged: 0/0
  4039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4040 ;;      Params:         0       0       0       0       0
  4041 ;;      Locals:         1       0       0       0       0
  4042 ;;      Temps:          1       0       0       0       0
  4043 ;;      Totals:         2       0       0       0       0
  4044 ;;Total ram usage:        2 bytes
  4045 ;; Hardware stack levels used:    1
  4046 ;; Hardware stack levels required when called:    2
  4047 ;; This function calls:
  4048 ;;		_SW_GetState
  4049 ;; This function is called by:
  4050 ;;		_CLOCK_Update
  4051 ;; This function uses a non-reentrant model
  4052 ;;
  4053                           
  4054                           
  4055                           ;psect for function _set_mode_process
  4056  0113                     _set_mode_process:	
  4057                           
  4058                           ;incstack = 0
  4059                           ; Regs used in _set_mode_process: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4060                           ;set_mode_process@var stored from wreg
  4061  0113  00F9               	movwf	set_mode_process@var
  4062  0114                     l1667:	
  4063                           
  4064                           ;Clock.c: 168: void set_mode_process(u8_t * var);Clock.c: 169: {;Clock.c: 170:     if(SW
      +                          _GetState(SW_PLUS) == SW_PRE_PRESSED)
  4065  0114  3000               	movlw	0
  4066  0115  120A  118A  208A  120A  118A  	fcall	_SW_GetState
  4067  011A  3A01               	xorlw	1
  4068  011B  1D03               	skipz
  4069  011C  291E               	goto	u1101
  4070  011D  291F               	goto	u1100
  4071  011E                     u1101:	
  4072  011E  2926               	goto	l1671
  4073  011F                     u1100:	
  4074  011F                     l1669:	
  4075                           
  4076                           ;Clock.c: 171:     {;Clock.c: 174:         *var += 1;
  4077  011F  3001               	movlw	1
  4078  0120  00F8               	movwf	??_set_mode_process
  4079  0121  0879               	movf	set_mode_process@var,w
  4080  0122  0084               	movwf	4
  4081  0123  0878               	movf	??_set_mode_process,w
  4082  0124  1383               	bcf	3,7	;select IRP bank0
  4083  0125  0780               	addwf	0,f
  4084  0126                     l1671:	
  4085                           
  4086                           ;Clock.c: 176:     if(SW_GetState(SW_MINUS) == SW_PRE_PRESSED)
  4087  0126  3001               	movlw	1
  4088  0127  120A  118A  208A  120A  118A  	fcall	_SW_GetState
  4089  012C  3A01               	xorlw	1
  4090  012D  1D03               	skipz
  4091  012E  2930               	goto	u1111
  4092  012F  2931               	goto	u1110
  4093  0130                     u1111:	
  4094  0130  2936               	goto	l194
  4095  0131                     u1110:	
  4096  0131                     l1673:	
  4097                           
  4098                           ;Clock.c: 177:     {;Clock.c: 180:         *var -= 1;
  4099  0131  0879               	movf	set_mode_process@var,w
  4100  0132  0084               	movwf	4
  4101  0133  3001               	movlw	1
  4102  0134  1383               	bcf	3,7	;select IRP bank0
  4103  0135  0280               	subwf	0,f
  4104  0136                     l194:	
  4105  0136  0008               	return
  4106  0137                     __end_of_set_mode_process:	
  4107                           
  4108                           	psect	text24
  4109  008A                     __ptext24:	
  4110 ;; *************** function _SW_GetState *****************
  4111 ;; Defined at:
  4112 ;;		line 67 in file "SW.c"
  4113 ;; Parameters:    Size  Location     Type
  4114 ;;  sw              1    wreg     enum E859
  4115 ;; Auto vars:     Size  Location     Type
  4116 ;;  sw              1    6[COMMON] enum E859
  4117 ;;  ret             1    7[COMMON] unsigned char 
  4118 ;; Return value:  Size  Location     Type
  4119 ;;                  1    wreg      unsigned char 
  4120 ;; Registers used:
  4121 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4122 ;; Tracked objects:
  4123 ;;		On entry : 0/0
  4124 ;;		On exit  : 0/0
  4125 ;;		Unchanged: 0/0
  4126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4127 ;;      Params:         0       0       0       0       0
  4128 ;;      Locals:         2       0       0       0       0
  4129 ;;      Temps:          2       0       0       0       0
  4130 ;;      Totals:         4       0       0       0       0
  4131 ;;Total ram usage:        4 bytes
  4132 ;; Hardware stack levels used:    1
  4133 ;; Hardware stack levels required when called:    1
  4134 ;; This function calls:
  4135 ;;		___bmul
  4136 ;; This function is called by:
  4137 ;;		_CLOCK_Update
  4138 ;;		_set_mode_process
  4139 ;; This function uses a non-reentrant model
  4140 ;;
  4141                           
  4142                           
  4143                           ;psect for function _SW_GetState
  4144  008A                     _SW_GetState:	
  4145                           
  4146                           ;incstack = 0
  4147                           ; Regs used in _SW_GetState: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4148                           ;SW_GetState@sw stored from wreg
  4149  008A  00F6               	movwf	SW_GetState@sw
  4150  008B                     l1459:	
  4151  008B                     l1461:	
  4152                           
  4153                           ;SW.c: 72:     ret = SW_DATA[sw].state;
  4154  008B  3003               	movlw	3
  4155  008C  00F4               	movwf	??_SW_GetState
  4156  008D  0874               	movf	??_SW_GetState,w
  4157  008E  00F0               	movwf	___bmul@multiplicand
  4158  008F  0876               	movf	SW_GetState@sw,w
  4159  0090  120A  118A  209E  120A  118A  	fcall	___bmul
  4160  0095  3E22               	addlw	(low ((_SW_DATA| 0+2)))& (0+255)
  4161  0096  0084               	movwf	4
  4162  0097  1383               	bcf	3,7	;select IRP bank0
  4163  0098  0800               	movf	0,w
  4164  0099  00F5               	movwf	??_SW_GetState+1
  4165  009A  0875               	movf	??_SW_GetState+1,w
  4166  009B  00F7               	movwf	SW_GetState@ret
  4167  009C                     l1463:	
  4168                           
  4169                           ;SW.c: 74:     return ret;
  4170  009C  0877               	movf	SW_GetState@ret,w
  4171  009D                     l131:	
  4172  009D  0008               	return
  4173  009E                     __end_of_SW_GetState:	
  4174                           
  4175                           	psect	text25
  4176  009E                     __ptext25:	
  4177 ;; *************** function ___bmul *****************
  4178 ;; Defined at:
  4179 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8.c"
  4180 ;; Parameters:    Size  Location     Type
  4181 ;;  multiplier      1    wreg     unsigned char 
  4182 ;;  multiplicand    1    0[COMMON] unsigned char 
  4183 ;; Auto vars:     Size  Location     Type
  4184 ;;  multiplier      1    3[COMMON] unsigned char 
  4185 ;;  product         1    2[COMMON] unsigned char 
  4186 ;; Return value:  Size  Location     Type
  4187 ;;                  1    wreg      unsigned char 
  4188 ;; Registers used:
  4189 ;;		wreg, status,2, status,0
  4190 ;; Tracked objects:
  4191 ;;		On entry : 0/0
  4192 ;;		On exit  : 0/0
  4193 ;;		Unchanged: 0/0
  4194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4195 ;;      Params:         1       0       0       0       0
  4196 ;;      Locals:         2       0       0       0       0
  4197 ;;      Temps:          1       0       0       0       0
  4198 ;;      Totals:         4       0       0       0       0
  4199 ;;Total ram usage:        4 bytes
  4200 ;; Hardware stack levels used:    1
  4201 ;; This function calls:
  4202 ;;		Nothing
  4203 ;; This function is called by:
  4204 ;;		_SW_GetState
  4205 ;;		_SW_UpdateState
  4206 ;; This function uses a non-reentrant model
  4207 ;;
  4208                           
  4209                           
  4210                           ;psect for function ___bmul
  4211  009E                     ___bmul:	
  4212                           
  4213                           ;incstack = 0
  4214                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4215                           ;___bmul@multiplier stored from wreg
  4216  009E  00F3               	movwf	___bmul@multiplier
  4217  009F                     l1399:	
  4218  009F  01F2               	clrf	___bmul@product
  4219  00A0                     l1401:	
  4220  00A0  1C73               	btfss	___bmul@multiplier,0
  4221  00A1  28A3               	goto	u621
  4222  00A2  28A4               	goto	u620
  4223  00A3                     u621:	
  4224  00A3  28A8               	goto	l1405
  4225  00A4                     u620:	
  4226  00A4                     l1403:	
  4227  00A4  0870               	movf	___bmul@multiplicand,w
  4228  00A5  00F1               	movwf	??___bmul
  4229  00A6  0871               	movf	??___bmul,w
  4230  00A7  07F2               	addwf	___bmul@product,f
  4231  00A8                     l1405:	
  4232  00A8  1003               	clrc
  4233  00A9  0DF0               	rlf	___bmul@multiplicand,f
  4234  00AA                     l1407:	
  4235  00AA  1003               	clrc
  4236  00AB  0CF3               	rrf	___bmul@multiplier,f
  4237  00AC  0873               	movf	___bmul@multiplier,w
  4238  00AD  1D03               	btfss	3,2
  4239  00AE  28B0               	goto	u631
  4240  00AF  28B1               	goto	u630
  4241  00B0                     u631:	
  4242  00B0  28A0               	goto	l1401
  4243  00B1                     u630:	
  4244  00B1                     l1409:	
  4245  00B1  0872               	movf	___bmul@product,w
  4246  00B2                     l351:	
  4247  00B2  0008               	return
  4248  00B3                     __end_of___bmul:	
  4249                           
  4250                           	psect	text26
  4251  01F4                     __ptext26:	
  4252 ;; *************** function _CLOCK_Increment *****************
  4253 ;; Defined at:
  4254 ;;		line 79 in file "Clock.c"
  4255 ;; Parameters:    Size  Location     Type
  4256 ;;		None
  4257 ;; Auto vars:     Size  Location     Type
  4258 ;;		None
  4259 ;; Return value:  Size  Location     Type
  4260 ;;                  1    wreg      void 
  4261 ;; Registers used:
  4262 ;;		wreg, status,2, status,0
  4263 ;; Tracked objects:
  4264 ;;		On entry : 0/0
  4265 ;;		On exit  : 0/0
  4266 ;;		Unchanged: 0/0
  4267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4268 ;;      Params:         0       0       0       0       0
  4269 ;;      Locals:         0       0       0       0       0
  4270 ;;      Temps:          1       0       0       0       0
  4271 ;;      Totals:         1       0       0       0       0
  4272 ;;Total ram usage:        1 bytes
  4273 ;; Hardware stack levels used:    1
  4274 ;; This function calls:
  4275 ;;		Nothing
  4276 ;; This function is called by:
  4277 ;;		_CLOCK_Update
  4278 ;; This function uses a non-reentrant model
  4279 ;;
  4280                           
  4281                           
  4282                           ;psect for function _CLOCK_Increment
  4283  01F4                     _CLOCK_Increment:	
  4284  01F4                     l1645:	
  4285                           ;incstack = 0
  4286                           ; Regs used in _CLOCK_Increment: [wreg+status,2+status,0]
  4287                           
  4288                           
  4289                           ;Clock.c: 82:     CurrentTime.mSeconds+=(5);
  4290  01F4  3005               	movlw	5
  4291  01F5  1283               	bcf	3,5	;RP0=0, select bank0
  4292  01F6  1303               	bcf	3,6	;RP1=0, select bank0
  4293  01F7  07B4               	addwf	_CurrentTime+3,f
  4294  01F8  1803               	skipnc
  4295  01F9  0AB5               	incf	_CurrentTime+4,f
  4296  01FA  3000               	movlw	0
  4297  01FB  07B5               	addwf	_CurrentTime+4,f
  4298                           
  4299                           ;Clock.c: 84:     if(CurrentTime.mSeconds >= 1000)
  4300  01FC  3003               	movlw	3
  4301  01FD  0235               	subwf	_CurrentTime+4,w
  4302  01FE  30E8               	movlw	232
  4303  01FF  1903               	skipnz
  4304  0200  0234               	subwf	_CurrentTime+3,w
  4305  0201  1C03               	skipc
  4306  0202  2A04               	goto	u1061
  4307  0203  2A05               	goto	u1060
  4308  0204                     u1061:	
  4309  0204  2A29               	goto	l172
  4310  0205                     u1060:	
  4311  0205                     l1647:	
  4312                           
  4313                           ;Clock.c: 85:     {;Clock.c: 88:     CurrentTime.mSeconds = 0;
  4314  0205  01B4               	clrf	_CurrentTime+3
  4315  0206  01B5               	clrf	_CurrentTime+4
  4316  0207                     l1649:	
  4317                           
  4318                           ;Clock.c: 89:     CurrentTime.seconds += 1;
  4319  0207  3001               	movlw	1
  4320  0208  00F0               	movwf	??_CLOCK_Increment
  4321  0209  0870               	movf	??_CLOCK_Increment,w
  4322  020A  07B3               	addwf	_CurrentTime+2,f
  4323  020B                     l1651:	
  4324                           
  4325                           ;Clock.c: 91:         if(CurrentTime.seconds>=60)
  4326  020B  303C               	movlw	60
  4327  020C  0233               	subwf	_CurrentTime+2,w
  4328  020D  1C03               	skipc
  4329  020E  2A10               	goto	u1071
  4330  020F  2A11               	goto	u1070
  4331  0210                     u1071:	
  4332  0210  2A29               	goto	l172
  4333  0211                     u1070:	
  4334  0211                     l1653:	
  4335                           
  4336                           ;Clock.c: 92:         {;Clock.c: 95:         CurrentTime.seconds = 0;
  4337  0211  01B3               	clrf	_CurrentTime+2
  4338  0212                     l1655:	
  4339                           
  4340                           ;Clock.c: 96:         CurrentTime.minuts += 1;
  4341  0212  3001               	movlw	1
  4342  0213  00F0               	movwf	??_CLOCK_Increment
  4343  0214  0870               	movf	??_CLOCK_Increment,w
  4344  0215  07B2               	addwf	_CurrentTime+1,f
  4345  0216                     l1657:	
  4346                           
  4347                           ;Clock.c: 98:             if(CurrentTime.minuts>=60)
  4348  0216  303C               	movlw	60
  4349  0217  0232               	subwf	_CurrentTime+1,w
  4350  0218  1C03               	skipc
  4351  0219  2A1B               	goto	u1081
  4352  021A  2A1C               	goto	u1080
  4353  021B                     u1081:	
  4354  021B  2A29               	goto	l172
  4355  021C                     u1080:	
  4356  021C                     l1659:	
  4357                           
  4358                           ;Clock.c: 99:             {;Clock.c: 102:             CurrentTime.minuts = 0;
  4359  021C  01B2               	clrf	_CurrentTime+1
  4360  021D                     l1661:	
  4361                           
  4362                           ;Clock.c: 103:             CurrentTime.hours += 1;
  4363  021D  3001               	movlw	1
  4364  021E  00F0               	movwf	??_CLOCK_Increment
  4365  021F  0870               	movf	??_CLOCK_Increment,w
  4366  0220  07B1               	addwf	_CurrentTime,f
  4367  0221                     l1663:	
  4368                           
  4369                           ;Clock.c: 105:                 if(CurrentTime.hours>=24){
  4370  0221  3018               	movlw	24
  4371  0222  0231               	subwf	_CurrentTime,w
  4372  0223  1C03               	skipc
  4373  0224  2A26               	goto	u1091
  4374  0225  2A27               	goto	u1090
  4375  0226                     u1091:	
  4376  0226  2A29               	goto	l169
  4377  0227                     u1090:	
  4378  0227                     l1665:	
  4379                           
  4380                           ;Clock.c: 108:                 CurrentTime.hours = 0;
  4381  0227  01B1               	clrf	_CurrentTime
  4382  0228  2A29               	goto	l172
  4383  0229                     l169:	
  4384                           ;Clock.c: 111:         }
  4385                           
  4386  0229                     l172:	
  4387  0229  0008               	return
  4388  022A                     __end_of_CLOCK_Increment:	
  4389                           
  4390                           	psect	text27
  4391  0059                     __ptext27:	
  4392 ;; *************** function _CLOCK_Init *****************
  4393 ;; Defined at:
  4394 ;;		line 44 in file "Clock.c"
  4395 ;; Parameters:    Size  Location     Type
  4396 ;;		None
  4397 ;; Auto vars:     Size  Location     Type
  4398 ;;		None
  4399 ;; Return value:  Size  Location     Type
  4400 ;;                  1    wreg      void 
  4401 ;; Registers used:
  4402 ;;		status,2
  4403 ;; Tracked objects:
  4404 ;;		On entry : 0/0
  4405 ;;		On exit  : 0/0
  4406 ;;		Unchanged: 0/0
  4407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4408 ;;      Params:         0       0       0       0       0
  4409 ;;      Locals:         0       0       0       0       0
  4410 ;;      Temps:          0       0       0       0       0
  4411 ;;      Totals:         0       0       0       0       0
  4412 ;;Total ram usage:        0 bytes
  4413 ;; Hardware stack levels used:    1
  4414 ;; This function calls:
  4415 ;;		Nothing
  4416 ;; This function is called by:
  4417 ;;		_main
  4418 ;; This function uses a non-reentrant model
  4419 ;;
  4420                           
  4421                           
  4422                           ;psect for function _CLOCK_Init
  4423  0059                     _CLOCK_Init:	
  4424  0059                     l1739:	
  4425                           ;incstack = 0
  4426                           ; Regs used in _CLOCK_Init: [status,2]
  4427                           
  4428                           
  4429                           ;Clock.c: 47:     CurrentTime.hours = 0;
  4430  0059  1283               	bcf	3,5	;RP0=0, select bank0
  4431  005A  1303               	bcf	3,6	;RP1=0, select bank0
  4432  005B  01B1               	clrf	_CurrentTime
  4433                           
  4434                           ;Clock.c: 48:     CurrentTime.minuts = 0;
  4435  005C  01B2               	clrf	_CurrentTime+1
  4436                           
  4437                           ;Clock.c: 49:     CurrentTime.seconds = 0;
  4438  005D  01B3               	clrf	_CurrentTime+2
  4439                           
  4440                           ;Clock.c: 50:     CurrentTime.mSeconds = 0;
  4441  005E  01B4               	clrf	_CurrentTime+3
  4442  005F  01B5               	clrf	_CurrentTime+4
  4443                           
  4444                           ;Clock.c: 53:     CurrentMode = CL_NORMAL;
  4445  0060  01AE               	clrf	_CurrentMode
  4446  0061                     l159:	
  4447  0061  0008               	return
  4448  0062                     __end_of_CLOCK_Init:	
  4449  007E                     btemp	set	126	;btemp
  4450  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        11
    BSS         22
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     11      44
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    set_mode_process@var	PTR unsigned char  size(1) Largest target is 5
		 -> CurrentTime(BANK0[5]), 

    CLOCK_GetTime@t	PTR struct . size(1) Largest target is 5
		 -> DISP_Set_Minutes_Operation@tt(BANK0[5]), DISP_Set_Hours_Operation@tt(BANK0[5]), DISP_Normal_Operation@tt(BANK0[5]), 

    GPIO_Init_Pin@DirRegAddress	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), TRISB(SFR1[1]), 

    GPIO_Init_Port@DirRegAddress	PTR unsigned char  size(2) Largest target is 1
		 -> TRISD(SFR1[1]), 


Critical Paths under _main in COMMON

    _main->_Disp_Update
    _SW_Update->_SW_UpdateState
    _SW_UpdateState->___bmul
    _SW_Init->_GPIO_Init_Pin
    _SSD_Update->_SSD_Disable
    _SSD_Update->_SSD_Enable
    _DISP_Set_Minutes_Operation->_SSD_Set_Symbol
    _DISP_Set_Hours_Operation->_SSD_Set_Symbol
    _DISP_Normal_Operation->_SSD_Set_Symbol
    _Disp_Init->_SSD_Set_Symbol
    _SSD_Set_Symbol->___awdiv
    _SSD_Init->_GPIO_Init_Pin
    _CLOCK_Update->_set_mode_process
    _set_mode_process->_SW_GetState
    _SW_GetState->___bmul

Critical Paths under _main in BANK0

    _Disp_Update->_DISP_Normal_Operation
    _Disp_Update->_DISP_Set_Hours_Operation
    _Disp_Update->_DISP_Set_Minutes_Operation

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   25592
                                              8 BANK0      3     3      0
                         _CLOCK_Init
                       _CLOCK_Update
                          _Disp_Init
                        _Disp_Update
                           _SSD_Init
                     _SSD_Set_Symbol
                         _SSD_Update
                            _SW_Init
                          _SW_Update
 ---------------------------------------------------------------------------------
 (1) _SW_Update                                            2     2      0     742
                                              8 COMMON     2     2      0
                     _SW_UpdateState
 ---------------------------------------------------------------------------------
 (2) _SW_UpdateState                                       4     4      0     742
                                              4 COMMON     4     4      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) _SW_Init                                              3     3      0    1824
                                              8 COMMON     3     3      0
                      _GPIO_Init_Pin
 ---------------------------------------------------------------------------------
 (1) _SSD_Update                                           1     1      0      44
                                              3 COMMON     1     1      0
                     _SSD_Data_write
                        _SSD_Disable
                         _SSD_Enable
 ---------------------------------------------------------------------------------
 (2) _SSD_Enable                                           3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _SSD_Disable                                          3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _SSD_Data_write                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Disp_Update                                          2     2      0   13785
                                             12 COMMON     2     2      0
                      _CLOCK_GetMode
              _DISP_Normal_Operation
           _DISP_Set_Hours_Operation
         _DISP_Set_Minutes_Operation
 ---------------------------------------------------------------------------------
 (2) _DISP_Set_Minutes_Operation                           8     8      0    4595
                                              0 BANK0      8     8      0
                      _CLOCK_GetTime
                     _SSD_Set_Symbol
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _DISP_Set_Hours_Operation                             8     8      0    4595
                                              0 BANK0      8     8      0
                      _CLOCK_GetTime
                     _SSD_Set_Symbol
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _DISP_Normal_Operation                                8     8      0    4595
                                              0 BANK0      8     8      0
                      _CLOCK_GetTime
                     _SSD_Set_Symbol
              _SSD_Toggle_Second_Dot
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1212
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (3) _SSD_Toggle_Second_Dot                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _CLOCK_GetTime                                        2     2      0     187
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _CLOCK_GetMode                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Disp_Init                                            1     1      0    4030
                                             12 COMMON     1     1      0
                           _SSD_Init
                     _SSD_Set_Symbol
 ---------------------------------------------------------------------------------
 (1) _SSD_Set_Symbol                                       3     2      1    1868
                                              9 COMMON     3     2      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _SSD_Init                                             1     1      0    2162
                                              8 COMMON     1     1      0
                      _GPIO_Init_Pin
                     _GPIO_Init_Port
 ---------------------------------------------------------------------------------
 (2) _GPIO_Init_Port                                       7     4      3     338
                                              0 COMMON     7     4      3
 ---------------------------------------------------------------------------------
 (2) _GPIO_Init_Pin                                        8     4      4    1824
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _CLOCK_Update                                         2     2      0    1114
                                             10 COMMON     2     2      0
                    _CLOCK_Increment
                        _SW_GetState
                   _set_mode_process
 ---------------------------------------------------------------------------------
 (2) _set_mode_process                                     2     2      0     612
                                              8 COMMON     2     2      0
                        _SW_GetState
 ---------------------------------------------------------------------------------
 (3) _SW_GetState                                          4     4      0     502
                                              4 COMMON     4     4      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     456
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _CLOCK_Increment                                      1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _CLOCK_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CLOCK_Init
   _CLOCK_Update
     _CLOCK_Increment
     _SW_GetState
       ___bmul
     _set_mode_process
       _SW_GetState
         ___bmul
   _Disp_Init
     _SSD_Init
       _GPIO_Init_Pin
       _GPIO_Init_Port
     _SSD_Set_Symbol
       ___awdiv (ARG)
       ___awmod (ARG)
   _Disp_Update
     _CLOCK_GetMode
     _DISP_Normal_Operation
       _CLOCK_GetTime
       _SSD_Set_Symbol
         ___awdiv (ARG)
         ___awmod (ARG)
       _SSD_Toggle_Second_Dot
       ___awdiv
       ___awmod
     _DISP_Set_Hours_Operation
       _CLOCK_GetTime
       _SSD_Set_Symbol
         ___awdiv (ARG)
         ___awmod (ARG)
       ___awdiv
       ___awmod
     _DISP_Set_Minutes_Operation
       _CLOCK_GetTime
       _SSD_Set_Symbol
         ___awdiv (ARG)
         ___awmod (ARG)
       ___awdiv
       ___awmod
   _SSD_Init
     _GPIO_Init_Pin
     _GPIO_Init_Port
   _SSD_Set_Symbol
     ___awdiv (ARG)
     ___awmod (ARG)
   _SSD_Update
     _SSD_Data_write
     _SSD_Disable
     _SSD_Enable
   _SW_Init
     _GPIO_Init_Pin
   _SW_Update
     _SW_UpdateState
       ___bmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      B      2C       5       55.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      3A      12        0.0%
ABS                  0      0      3A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Jan 08 07:36:03 2020

             __end_of_SSD_Data_write 00D0                                    pc 0002  
                         _SSD_Update 00F0                       ___bmul@product 0072  
                        __CFG_CP$OFF 0000                  __end_of_SW_GetState 009E  
                                 l24 04C8                                   l19 0305  
                                 l81 03B4                                   l84 006B  
                                 l88 0112                                   l98 01BE  
                       ___awdiv@sign 0076                                   fsr 0004  
             ?_SSD_Toggle_Second_Dot 0070                                  l112 00CF  
                                l131 009D                                  l115 0050  
                                l108 01F3                                  l134 0268  
                                l215 018D                                  l223 0161  
                                l128 02B5                                  l233 06EC  
                                l162 0049                                  l227 05B5  
                                l172 0229                                  l148 07E5  
                                l165 00EF                                  l159 0061  
                                l351 00B2                                  l239 064D  
                                l169 0229                                  l177 0312  
                                l194 0136                                  l189 035C  
                                l491 040D                                  l478 052F  
                       __CFG_CPD$OFF 0000                                  u620 00A4  
                                u700 0478                                  u621 00A3  
                                u701 0477                                  u630 00B1  
                                u710 0483                                  u631 00B0  
                                u711 0482                                  u720 048E  
                                u640 02C3                                  u721 048D  
                                u641 02C2                                  u730 0499  
                                u650 02CE                                  u810 04FC  
                                u731 0498                                  u651 02CD  
                                u811 04FB                                  u740 04A4  
                                u660 02D9                                  u741 04A3  
                                u661 02D8                                  u805 04EE  
                                u670 02E4                                  u830 050D  
                                u910 03E2                                  u671 02E3  
                                u831 050C                                  u911 03E1  
                                u680 02EF                                  u920 03EC  
                                u681 02EE                                  u825 04FD  
                                u921 03EB                                  u905 03D4  
                                u754 04AB                                  u690 02F5  
                                u850 0521                                  u770 04CE  
                                u755 04A9                                  u691 02F4  
                                u851 0520                                  u835 0509  
                                u771 04CD                                  u764 04B9  
                                u860 0526                                  u780 04D9  
                                u940 03FF                                  u765 04B7  
                                u861 0525                                  u845 0515  
                                u781 04D8                                  u941 03FE  
                                u925 03E8                                  u790 04EA  
                                u950 0404                                  u870 03BA  
                                u791 04E9                                  u951 0403  
                                u935 03F3                                  u871 03B9  
                                u880 03C5                                  u960 00C3  
                                u881 03C4                                  u961 00C2  
                                u890 03D0                                  u891 03CF  
                                u980 0701                                  u981 0700  
                                u990 0713                                  u975 00C6  
                                u991 0712                                  fsr0 0004  
                                indf 0000                         ___awmod@sign 0076  
                       __CFG_FOSC$HS 0000                         __CFG_LVP$OFF 0000  
                               l1401 00A0                                 l1403 00A4  
                               l1405 00A8                                 l1421 02D9  
                               l1413 02B6                                 l1501 050D  
                               l1407 00AA                                 l1431 02F8  
                               l1423 02E4                                 l1415 02B6  
                               l1511 0526                                 l1503 0513  
                               l1409 00B1                                 l1441 0478  
                               l1433 02FC                                 l1425 02EF  
                               l1417 02C3                                 l1513 052B  
                               l1505 0514                                 l1521 03BA  
                               l1601 01DD                                 l1443 0483  
                               l1451 04A5                                 l1419 02CE  
                               l1427 02F0                                 l1507 051B  
                               l1531 03D0                                 l1523 03BF  
                               l1611 0701                                 l1461 008B  
                               l1445 048E                                 l1437 046B  
                               l1429 02F5                                 l1509 0521  
                               l1541 03EC                                 l1533 03D3  
                               l1525 03C1                                 l1517 03B5  
                               l1701 05F4                                 l1621 0756  
                               l1613 0713                                 l1463 009C  
                               l1447 0499                                 l1439 046B  
                               l1455 0063                                 l1471 00E7  
                               l1551 0409                                 l1543 03F2  
                               l1535 03DA                                 l1527 03C5  
                               l1519 03B6                                 l1711 064C  
                               l1703 05FC                                 l1631 07B0  
                               l1623 0768                                 l1615 0722  
                               l1607 06EE                                 l1449 04A4  
                               l1561 038D                                 l1641 0046  
                               l1457 004A                                 l1481 04D5  
                               l1473 04C9                                 l1545 03F9  
                               l1537 03DE                                 l1529 03CA  
                               l1705 062D                                 l1801 014A  
                               l1721 0281                                 l1713 0269  
                               l1625 077A                                 l1617 0734  
                               l1609 06EF                                 l1651 020B  
                               l1459 008B                                 l1563 039B  
                               l1555 035D                                 l1467 00D1  
                               l1491 04EA                                 l1483 04D9  
                               l1475 04CA                                 l1539 03E2  
                               l1547 03FF                                 l1707 0635  
                               l1571 0190                                 l1811 00FE  
                               l1731 02B1                                 l1723 0296  
                               l1715 027A                                 l1627 078C  
                               l1619 0746                                 l1635 07C2  
                               l1661 021D                                 l1653 0211  
                               l1645 01F4                                 l1565 03AE  
                               l1557 0375                                 l1469 00E0  
                               l1493 04ED                                 l1485 04DE  
                               l1477 04CE                                 l1549 0404  
                               l1709 0644                                 l1573 0196  
                               l1813 0104                                 l1733 02B3  
                               l1725 0298                                 l1717 027D  
                               l1629 079E                                 l1741 022A  
                               l1821 040E                                 l1663 0221  
                               l1655 0212                                 l1647 0205  
                               l1399 009F                                 l1671 0126  
                               l1567 03B3                                 l1559 037A  
                               l1735 0162                                 l1495 04F4  
                               l1487 04E2                                 l1479 04D3  
                               l1575 019C                                 l1591 01C0  
                               l1815 0105                                 l1807 00F0  
                               l1727 029A                                 l1719 027F  
                               l1751 0249                                 l1743 0230  
                               l1831 042C                                 l1823 0413  
                               l1665 0227                                 l1657 0216  
                               l1649 0207                                 l1673 0131  
                               l1737 018A                                 l1497 04F8  
                               l1489 04E4                                 l1681 05AD  
                               l1585 00B3                                 l1577 01A2  
                               l1569 018F                                 l1593 01C1  
                               l1817 010A                                 l1809 00F8  
                               l1729 02AE                                 l1753 024F  
                               l1745 0235                                 l1841 0458  
                               l1833 0438                                 l1825 0418  
                               l1739 0059                                 l1659 021C  
                               l1667 0114                                 l1763 0315  
                               l1771 0331                                 l1499 04FC  
                               l1683 05B2                                 l1675 0530  
                               l1691 06C5                                 l1587 00BE  
                               l1579 01A8                                 l1595 01C8  
                               l1755 0255                                 l1747 023B  
                               l1843 045D                                 l1835 0444  
                               l1827 041D                                 l1819 040E  
                               l1669 011F                                 l1773 0338  
                               l1781 034C                                 l1765 031A  
                               l1677 05A1                                 l1693 06CD  
                               l1685 064E                                 l1589 00C3  
                               l1597 01CF                                 l1757 0262  
                               l1749 0241                                 l1845 0462  
                               l1837 0449                                 l1829 0424  
                               l1775 033E                                 l1759 0306  
                               l1679 05A7                                 l1695 06E3  
                               l1687 0687                                 l1791 0137  
                               l1599 01D6                                 l1839 0453  
                               l1777 0345                                 l1769 031C  
                               l1697 06EB                                 l1689 068F  
                               l1793 0138                                 l1699 05B6  
                               l1795 013E                                 l1971 01B0  
                               l1973 0156                                 l1797 0144  
                               l1975 0326                                 l1967 07D7  
                               l1977 0354                                 l1969 01E5  
                               u1000 0734                                 u1001 0733  
                               u1010 0746                                 u1011 0745  
                               u1100 011F                                 u1020 0768  
                               u1101 011E                                 u1021 0767  
                               u1110 0131                                 u1030 077A  
                               u1111 0130                                 u1031 0779  
                               u1200 0311                                 u1120 05AD  
                               u1040 079E                                 u1201 0310  
                               u1121 05AC                                 u1041 079D  
                               u1210 0338                                 u1130 068F  
                               u1050 07B0                                 u1211 0337  
                               u1131 068E                                 u1051 07AF  
                               u1060 0205                                 u1140 06CD  
                               u1220 0104                                 u1061 0204  
                               u1141 06CC                                 u1221 0103  
                               u1070 0211                                 u1150 06EB  
                               u1071 0210                                 u1151 06EA  
                               u1080 021C                                 u1160 05FC  
                               u1081 021B                                 u1161 05FB  
                               u1090 0227                                 u1170 0635  
                               u1091 0226                                 u1171 0634  
                               u1180 064C                                 u1181 064B  
                               u1237 044F                                 u1195 0258  
                       __CFG_WRT$OFF 0000                                 _main 040E  
                               btemp 007E                                 start 0000  
                __size_of_CLOCK_Init 0009                  __end_of_Disp_Update 0162  
                    __end_of_SW_Init 02B6                 __end_of_CLOCK_Update 035D  
                  ___bmul@multiplier 0073                        _GPIO_Init_Pin 046B  
                    ?_SSD_Data_write 0070                       _SSD_Set_Symbol 0062  
                              ?_main 0070                      __end_of___awdiv 0530  
                      __CFG_WDTE$OFF 0000                      __end_of___awmod 040E  
                    ___awdiv@divisor 0070                      ___awdiv@counter 0075  
                              _PORTB 0006                                _PORTD 0008  
                              _TRISA 0085                                _TRISB 0086  
                              _TRISC 0087                                _TRISD 0088  
                              _TRISE 0089                  set_mode_process@var 0079  
                  _GPIO_Init_Port$31 0075                    ??_CLOCK_Increment 0070  
              __end_of_CLOCK_GetMode 004A                __end_of_CLOCK_GetTime 00F0  
                   __end_of_SSD_Init 03B5                       __CFG_BOREN$OFF 0000  
                              pclath 000A                                status 0003  
                              wtemp0 007E                         SSD_Disable@s 0072  
            __size_of_SW_UpdateState 00F9                     _Second_Dot_State 002F  
  __size_of_DISP_Set_Hours_Operation 009F            ?_DISP_Set_Hours_Operation 0070  
                        _SW_GetState 008A                          ?_SSD_Enable 0070  
                     ?_GPIO_Init_Pin 0070                      __initialization 07E6  
                       __end_of_main 046B               __end_of_SSD_Set_Symbol 006C  
                     _GPIO_Init_Port 02B6                          ?_SSD_Update 0070  
                             ??_main 0049                   __size_of_SW_Update 003F  
        GPIO_Init_Port@DirRegAddress 0070                   __size_of_Disp_Init 002C  
         GPIO_Init_Pin@DirRegAddress 0070                     ___awdiv@dividend 0072  
                        _Disp_Update 0137                            ??_SW_Init 0078  
                             _Buffer 0029                       __CFG_PWRTE$OFF 0000  
             __end_of_GPIO_Init_Port 0306                               ___bmul 009E  
                    ?_SSD_Set_Symbol 0079                            ??___awdiv 0074  
                          ??___awmod 0074                     ___awdiv@quotient 0077  
                    ___awmod@divisor 0070                      ___awmod@counter 0075  
                       ??_CLOCK_Init 0070             __end_of_set_mode_process 0137  
                __size_of_SSD_Enable 0035                  __size_of_SSD_Update 0023  
     __size_of_DISP_Normal_Operation 0086                __size_of_CLOCK_Update 0057  
            __end_of__initialization 07FC        __end_of_DISP_Normal_Operation 05B6  
                    ??_GPIO_Init_Pin 0074                     GPIO_Init_Pin@dir 0073  
                  __end_of_SW_Update 0269                         ?_SSD_Disable 0070  
                ___bmul@multiplicand 0070                    __end_of_Disp_Init 018E  
                 __end_of_CLOCK_Init 0062                      ?_GPIO_Init_Port 0070  
                     __pcstackCOMMON 0070              ??_SSD_Toggle_Second_Dot 0070  
                       __pidataBANK0 006C                            ?_SSD_Init 0070  
                        _CurrentMode 002E                          _CurrentTime 0031  
                      SW_GetState@sw 0076                         _CLOCK_Update 0306  
                         __pbssBANK0 0020              DISP_Normal_Operation@tt 0044  
                     _SW_UpdateState 06ED                     ??_SSD_Data_write 0070  
                         __pmaintext 040E                              ?___bmul 0070  
       DISP_Set_Minutes_Operation@tt 0044                           ??_SSD_Init 0078  
                    _CLOCK_Increment 01F4         ??_DISP_Set_Minutes_Operation 0041  
   __end_of_DISP_Set_Hours_Operation 06ED               __end_of_SW_UpdateState 07E6  
                            _SW_DATA 0020                  SSD_Set_Symbol@index 0079  
                            _SW_Init 0269                         ?_SW_GetState 0070  
                       ??_SSD_Enable 0070                      __size_of___bmul 0015  
                       ??_SSD_Update 0073                              ___awdiv 04C9  
                            ___awmod 03B5  __size_of_DISP_Set_Minutes_Operation 0098  
                         _currentSSD 0030                              __ptext1 022A  
                            __ptext2 06ED                              __ptext3 0269  
                            __ptext4 00F0                              __ptext5 01BF  
                            __ptext6 018E                              __ptext7 00B3  
                            __ptext8 0137                              __ptext9 05B6  
                   ___awmod@dividend 0072                   __end_of_SSD_Enable 01F4  
                            clrloop0 0052                 end_of_initialization 07FC  
                    ?_SW_UpdateState 0070                         ?_Disp_Update 0070  
                 __end_of_SSD_Update 0113                     ??_SSD_Set_Symbol 007A  
            __end_of_CLOCK_Increment 022A                 __size_of_SSD_Disable 0031  
             __size_of_CLOCK_GetMode 0004               __size_of_CLOCK_GetTime 0020  
                  ?_set_mode_process 0070                   ??_set_mode_process 0078  
           _DISP_Set_Hours_Operation 064E              GPIO_Init_Pin@pin_number 0072  
                   ??_GPIO_Init_Port 0073                    GPIO_Init_Port@dir 0072  
                          _SW_Update 022A                       __end_of___bmul 00B3  
     __size_of_SSD_Toggle_Second_Dot 0007                            _Disp_Init 0162  
      __end_of_SSD_Toggle_Second_Dot 0051   __end_of_DISP_Set_Minutes_Operation 064E  
         _DISP_Set_Minutes_Operation 05B6                          SSD_Enable@s 0072  
                  __size_of_SSD_Init 0058                  start_initialization 07E6  
                      _CLOCK_GetMode 0046                        _CLOCK_GetTime 00D0  
              _DISP_Normal_Operation 0530                __end_of_GPIO_Init_Pin 04C9  
                     SW_GetState@ret 0077                     ?_CLOCK_Increment 0070  
                           ??___bmul 0071                 __size_of_SW_GetState 0014  
                         init_fetch0 0077                           ?_SW_Update 0070  
                         ?_Disp_Init 0070                          __pdataBANK0 0036  
                          ___latbits 0002                        __pcstackBANK0 0041  
                     ?_CLOCK_GetMode 0070                       ?_CLOCK_GetTime 0070  
                           ?_SW_Init 0070                 __size_of_Disp_Update 002B  
                           ?___awdiv 0070                             ?___awmod 0070  
                   ??_SW_UpdateState 0074                     SW_UpdateState@sw 0077  
             ?_DISP_Normal_Operation 0070                            clear_ram0 0051  
                        ??_SW_Update 0078                          ??_Disp_Init 007C  
            __size_of_SSD_Data_write 001D                             _SSD_Init 035D  
         ??_DISP_Set_Hours_Operation 0041                 SSD_Set_Symbol@symbol 007B  
                    ??_CLOCK_GetMode 0070                      ??_CLOCK_GetTime 0070  
                   __size_of_SW_Init 004D            __size_of_set_mode_process 0024  
                      ??_SSD_Disable 0070           DISP_Set_Hours_Operation@tt 0044  
                   __size_of___awdiv 0067                     __size_of___awmod 0059  
                         _CLOCK_Init 0059          ?_DISP_Set_Minutes_Operation 0070  
                      ?_CLOCK_Update 0070                             __ptext10 064E  
                           __ptext11 0530                             __ptext20 02B6  
                           __ptext12 03B5                             __ptext21 046B  
                           __ptext13 04C9                             __ptext22 0306  
                           __ptext14 004A                             __ptext23 0113  
                           __ptext15 00D0                             __ptext24 008A  
                           __ptext16 0046                             __ptext25 009E  
                           __ptext17 0162                             __ptext26 01F4  
                           __ptext18 0062                             __ptext27 0059  
                           __ptext19 035D                        __size_of_main 005D  
                     CLOCK_GetTime@t 0071                  __end_of_SSD_Disable 01BF  
            __size_of_SSD_Set_Symbol 000A                _SSD_Toggle_Second_Dot 004A  
                     ??_CLOCK_Update 007A                             init_ram0 007B  
                      ??_SW_GetState 0074              __size_of_GPIO_Init_Port 0050  
                     _SSD_Data_write 00B3             __size_of_CLOCK_Increment 0036  
                        ?_CLOCK_Init 0070               __size_of_GPIO_Init_Pin 005E  
                 _Disp_Blink_counter 002D              ??_DISP_Normal_Operation 0041  
                      ??_Disp_Update 007C                          _SSD_LOT_ARR 0036  
                   _set_mode_process 0113                          _SSD_Disable 018E  
                         _SSD_Enable 01BF  
