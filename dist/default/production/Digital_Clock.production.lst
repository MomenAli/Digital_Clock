

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Jan 06 18:03:17 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	dabs	1,0x7E,2
    24  0000                     
    25                           ; Version 2.10
    26                           ; Generated 31/07/2019 GMT
    27                           ; 
    28                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F877A Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0008                     	;# 
    68  0009                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000D                     	;# 
    73  000E                     	;# 
    74  000E                     	;# 
    75  000F                     	;# 
    76  0010                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0014                     	;# 
    81  0015                     	;# 
    82  0015                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001B                     	;# 
    90  001C                     	;# 
    91  001D                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  0081                     	;# 
    95  0085                     	;# 
    96  0086                     	;# 
    97  0087                     	;# 
    98  0088                     	;# 
    99  0089                     	;# 
   100  008C                     	;# 
   101  008D                     	;# 
   102  008E                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  010C                     	;# 
   114  010D                     	;# 
   115  010E                     	;# 
   116  010F                     	;# 
   117  018C                     	;# 
   118  018D                     	;# 
   119  0000                     	;# 
   120  0001                     	;# 
   121  0002                     	;# 
   122  0003                     	;# 
   123  0004                     	;# 
   124  0005                     	;# 
   125  0006                     	;# 
   126  0007                     	;# 
   127  0008                     	;# 
   128  0009                     	;# 
   129  000A                     	;# 
   130  000B                     	;# 
   131  000C                     	;# 
   132  000D                     	;# 
   133  000E                     	;# 
   134  000E                     	;# 
   135  000F                     	;# 
   136  0010                     	;# 
   137  0011                     	;# 
   138  0012                     	;# 
   139  0013                     	;# 
   140  0014                     	;# 
   141  0015                     	;# 
   142  0015                     	;# 
   143  0016                     	;# 
   144  0017                     	;# 
   145  0018                     	;# 
   146  0019                     	;# 
   147  001A                     	;# 
   148  001B                     	;# 
   149  001B                     	;# 
   150  001C                     	;# 
   151  001D                     	;# 
   152  001E                     	;# 
   153  001F                     	;# 
   154  0081                     	;# 
   155  0085                     	;# 
   156  0086                     	;# 
   157  0087                     	;# 
   158  0088                     	;# 
   159  0089                     	;# 
   160  008C                     	;# 
   161  008D                     	;# 
   162  008E                     	;# 
   163  0091                     	;# 
   164  0092                     	;# 
   165  0093                     	;# 
   166  0094                     	;# 
   167  0098                     	;# 
   168  0099                     	;# 
   169  009C                     	;# 
   170  009D                     	;# 
   171  009E                     	;# 
   172  009F                     	;# 
   173  010C                     	;# 
   174  010D                     	;# 
   175  010E                     	;# 
   176  010F                     	;# 
   177  018C                     	;# 
   178  018D                     	;# 
   179  0000                     	;# 
   180  0001                     	;# 
   181  0002                     	;# 
   182  0003                     	;# 
   183  0004                     	;# 
   184  0005                     	;# 
   185  0006                     	;# 
   186  0007                     	;# 
   187  0008                     	;# 
   188  0009                     	;# 
   189  000A                     	;# 
   190  000B                     	;# 
   191  000C                     	;# 
   192  000D                     	;# 
   193  000E                     	;# 
   194  000E                     	;# 
   195  000F                     	;# 
   196  0010                     	;# 
   197  0011                     	;# 
   198  0012                     	;# 
   199  0013                     	;# 
   200  0014                     	;# 
   201  0015                     	;# 
   202  0015                     	;# 
   203  0016                     	;# 
   204  0017                     	;# 
   205  0018                     	;# 
   206  0019                     	;# 
   207  001A                     	;# 
   208  001B                     	;# 
   209  001B                     	;# 
   210  001C                     	;# 
   211  001D                     	;# 
   212  001E                     	;# 
   213  001F                     	;# 
   214  0081                     	;# 
   215  0085                     	;# 
   216  0086                     	;# 
   217  0087                     	;# 
   218  0088                     	;# 
   219  0089                     	;# 
   220  008C                     	;# 
   221  008D                     	;# 
   222  008E                     	;# 
   223  0091                     	;# 
   224  0092                     	;# 
   225  0093                     	;# 
   226  0094                     	;# 
   227  0098                     	;# 
   228  0099                     	;# 
   229  009C                     	;# 
   230  009D                     	;# 
   231  009E                     	;# 
   232  009F                     	;# 
   233  010C                     	;# 
   234  010D                     	;# 
   235  010E                     	;# 
   236  010F                     	;# 
   237  018C                     	;# 
   238  018D                     	;# 
   239  0000                     	;# 
   240  0001                     	;# 
   241  0002                     	;# 
   242  0003                     	;# 
   243  0004                     	;# 
   244  0005                     	;# 
   245  0006                     	;# 
   246  0007                     	;# 
   247  0008                     	;# 
   248  0009                     	;# 
   249  000A                     	;# 
   250  000B                     	;# 
   251  000C                     	;# 
   252  000D                     	;# 
   253  000E                     	;# 
   254  000E                     	;# 
   255  000F                     	;# 
   256  0010                     	;# 
   257  0011                     	;# 
   258  0012                     	;# 
   259  0013                     	;# 
   260  0014                     	;# 
   261  0015                     	;# 
   262  0015                     	;# 
   263  0016                     	;# 
   264  0017                     	;# 
   265  0018                     	;# 
   266  0019                     	;# 
   267  001A                     	;# 
   268  001B                     	;# 
   269  001B                     	;# 
   270  001C                     	;# 
   271  001D                     	;# 
   272  001E                     	;# 
   273  001F                     	;# 
   274  0081                     	;# 
   275  0085                     	;# 
   276  0086                     	;# 
   277  0087                     	;# 
   278  0088                     	;# 
   279  0089                     	;# 
   280  008C                     	;# 
   281  008D                     	;# 
   282  008E                     	;# 
   283  0091                     	;# 
   284  0092                     	;# 
   285  0093                     	;# 
   286  0094                     	;# 
   287  0098                     	;# 
   288  0099                     	;# 
   289  009C                     	;# 
   290  009D                     	;# 
   291  009E                     	;# 
   292  009F                     	;# 
   293  010C                     	;# 
   294  010D                     	;# 
   295  010E                     	;# 
   296  010F                     	;# 
   297  018C                     	;# 
   298  018D                     	;# 
   299  0000                     	;# 
   300  0001                     	;# 
   301  0002                     	;# 
   302  0003                     	;# 
   303  0004                     	;# 
   304  0005                     	;# 
   305  0006                     	;# 
   306  0007                     	;# 
   307  0008                     	;# 
   308  0009                     	;# 
   309  000A                     	;# 
   310  000B                     	;# 
   311  000C                     	;# 
   312  000D                     	;# 
   313  000E                     	;# 
   314  000E                     	;# 
   315  000F                     	;# 
   316  0010                     	;# 
   317  0011                     	;# 
   318  0012                     	;# 
   319  0013                     	;# 
   320  0014                     	;# 
   321  0015                     	;# 
   322  0015                     	;# 
   323  0016                     	;# 
   324  0017                     	;# 
   325  0018                     	;# 
   326  0019                     	;# 
   327  001A                     	;# 
   328  001B                     	;# 
   329  001B                     	;# 
   330  001C                     	;# 
   331  001D                     	;# 
   332  001E                     	;# 
   333  001F                     	;# 
   334  0081                     	;# 
   335  0085                     	;# 
   336  0086                     	;# 
   337  0087                     	;# 
   338  0088                     	;# 
   339  0089                     	;# 
   340  008C                     	;# 
   341  008D                     	;# 
   342  008E                     	;# 
   343  0091                     	;# 
   344  0092                     	;# 
   345  0093                     	;# 
   346  0094                     	;# 
   347  0098                     	;# 
   348  0099                     	;# 
   349  009C                     	;# 
   350  009D                     	;# 
   351  009E                     	;# 
   352  009F                     	;# 
   353  010C                     	;# 
   354  010D                     	;# 
   355  010E                     	;# 
   356  010F                     	;# 
   357  018C                     	;# 
   358  018D                     	;# 
   359                           
   360                           	psect	idataBANK0
   361  03E3                     __pidataBANK0:	
   362                           
   363                           ;initializer for _SSD_LOT_ARR
   364  03E3  343F               	retlw	63
   365  03E4  3406               	retlw	6
   366  03E5  345B               	retlw	91
   367  03E6  344F               	retlw	79
   368  03E7  3466               	retlw	102
   369  03E8  346D               	retlw	109
   370  03E9  347D               	retlw	125
   371  03EA  3407               	retlw	7
   372  03EB  347F               	retlw	127
   373  03EC  346F               	retlw	111
   374  03ED  3400               	retlw	0
   375  0008                     _PORTD	set	8
   376  0006                     _PORTB	set	6
   377  0089                     _TRISE	set	137
   378  0087                     _TRISC	set	135
   379  0085                     _TRISA	set	133
   380  0088                     _TRISD	set	136
   381  0086                     _TRISB	set	134
   382                           
   383                           ; #config settings
   384  0000                     
   385                           	psect	cinit
   386  07DF                     start_initialization:	
   387  07DF                     __initialization:	
   388                           
   389                           ; Initialize objects allocated to BANK0
   390  07DF  1383               	bcf	3,7	;select IRP bank0
   391  07E0  303A               	movlw	low (__pdataBANK0+11)
   392  07E1  00FD               	movwf	btemp+-1
   393  07E2  3003               	movlw	high __pidataBANK0
   394  07E3  00FE               	movwf	btemp
   395  07E4  30E3               	movlw	low __pidataBANK0
   396  07E5  00FF               	movwf	btemp+1
   397  07E6  302F               	movlw	low __pdataBANK0
   398  07E7  0084               	movwf	4
   399  07E8  120A  118A  23F2  120A  118A  	fcall	init_ram0
   400                           
   401                           ; Clear objects allocated to BANK0
   402  07ED  01A0               	clrf	__pbssBANK0& (0+127)
   403  07EE  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   404  07EF  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   405  07F0  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   406  07F1  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   407  07F2  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   408  07F3  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   409  07F4  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   410  07F5  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   411  07F6  01A9               	clrf	(__pbssBANK0+9)& (0+127)
   412  07F7  01AA               	clrf	(__pbssBANK0+10)& (0+127)
   413  07F8  01AB               	clrf	(__pbssBANK0+11)& (0+127)
   414  07F9  01AC               	clrf	(__pbssBANK0+12)& (0+127)
   415  07FA  01AD               	clrf	(__pbssBANK0+13)& (0+127)
   416  07FB  01AE               	clrf	(__pbssBANK0+14)& (0+127)
   417  07FC                     end_of_initialization:	
   418                           ;End of C runtime variable initialization code
   419                           
   420  07FC                     __end_of__initialization:	
   421  07FC  0183               	clrf	3
   422  07FD  120A  118A  2E24   	ljmp	_main	;jump to C main() function
   423                           
   424                           	psect	bssBANK0
   425  0020                     __pbssBANK0:	
   426  0020                     _SW_DATA:	
   427  0020                     	ds	9
   428  0029                     _Buffer:	
   429  0029                     	ds	4
   430  002D                     _currentSSD:	
   431  002D                     	ds	2
   432                           
   433                           	psect	dataBANK0
   434  002F                     __pdataBANK0:	
   435  002F                     _SSD_LOT_ARR:	
   436  002F                     	ds	11
   437                           
   438                           	psect	inittext
   439  03EE                     init_fetch0:	
   440                           ;	Called with low address in FSR and high address in W
   441                           
   442  03EE  087E               	movf	btemp,w
   443  03EF  008A               	movwf	10
   444  03F0  087F               	movf	btemp+1,w
   445  03F1  0082               	movwf	2
   446  03F2                     init_ram0:	
   447                           ;Called with:
   448                           ;	high address of idata address in btemp 
   449                           ;	low address of idata address in btemp+1 
   450                           ;	low address of data in FSR
   451                           ;	high address + 1 of data in btemp-1
   452                           
   453  03F2  120A  118A  23EE  120A  118A  	fcall	init_fetch0
   454  03F7  0080               	movwf	0
   455  03F8  0A84               	incf	4,f
   456  03F9  0804               	movf	4,w
   457  03FA  067D               	xorwf	btemp+-1,w
   458  03FB  1903               	btfsc	3,2
   459  03FC  3400               	retlw	0
   460  03FD  0AFF               	incf	btemp+1,f
   461  03FE  1903               	btfsc	3,2
   462  03FF  0AFE               	incf	btemp,f
   463  0400  2BF2               	goto	init_ram0
   464                           
   465                           	psect	cstackCOMMON
   466  0070                     __pcstackCOMMON:	
   467  0070                     ?_SSD_Init:	
   468  0070                     ?_SSD_Set_Symbol:	
   469                           ; 1 bytes @ 0x0
   470                           
   471  0070                     ?_SSD_Update:	
   472                           ; 1 bytes @ 0x0
   473                           
   474  0070                     ?_SW_Update:	
   475                           ; 1 bytes @ 0x0
   476                           
   477  0070                     ?_SW_GetState:	
   478                           ; 1 bytes @ 0x0
   479                           
   480  0070                     ?_SSD_Disable:	
   481                           ; 1 bytes @ 0x0
   482                           
   483  0070                     ??_SSD_Disable:	
   484                           ; 1 bytes @ 0x0
   485                           
   486  0070                     ?_SSD_Enable:	
   487                           ; 1 bytes @ 0x0
   488                           
   489  0070                     ??_SSD_Enable:	
   490                           ; 1 bytes @ 0x0
   491                           
   492  0070                     ?_SW_UpdateState:	
   493                           ; 1 bytes @ 0x0
   494                           
   495  0070                     ?_GPIO_Init_Port:	
   496                           ; 1 bytes @ 0x0
   497                           
   498  0070                     ?_GPIO_Init_Pin:	
   499                           ; 1 bytes @ 0x0
   500                           
   501  0070                     ?_main:	
   502                           ; 1 bytes @ 0x0
   503                           
   504  0070                     ?___bmul:	
   505                           ; 1 bytes @ 0x0
   506                           
   507  0070                     SSD_Set_Symbol@index:	
   508                           ; 1 bytes @ 0x0
   509                           
   510  0070                     ___bmul@multiplicand:	
   511                           ; 1 bytes @ 0x0
   512                           
   513  0070                     GPIO_Init_Port@DirRegAddress:	
   514                           ; 1 bytes @ 0x0
   515                           
   516  0070                     GPIO_Init_Pin@DirRegAddress:	
   517                           ; 2 bytes @ 0x0
   518                           
   519                           
   520                           ; 2 bytes @ 0x0
   521  0070                     	ds	1
   522  0071                     ??_SSD_Set_Symbol:	
   523  0071                     ??___bmul:	
   524                           ; 1 bytes @ 0x1
   525                           
   526                           
   527                           ; 1 bytes @ 0x1
   528  0071                     	ds	1
   529  0072                     GPIO_Init_Port@dir:	
   530  0072                     GPIO_Init_Pin@pin_number:	
   531                           ; 1 bytes @ 0x2
   532                           
   533  0072                     SSD_Set_Symbol@symbol:	
   534                           ; 1 bytes @ 0x2
   535                           
   536  0072                     SSD_Disable@s:	
   537                           ; 1 bytes @ 0x2
   538                           
   539  0072                     SSD_Enable@s:	
   540                           ; 1 bytes @ 0x2
   541                           
   542  0072                     ___bmul@product:	
   543                           ; 1 bytes @ 0x2
   544                           
   545                           
   546                           ; 1 bytes @ 0x2
   547  0072                     	ds	1
   548  0073                     ??_SSD_Update:	
   549  0073                     ??_GPIO_Init_Port:	
   550                           ; 1 bytes @ 0x3
   551                           
   552  0073                     GPIO_Init_Pin@dir:	
   553                           ; 1 bytes @ 0x3
   554                           
   555  0073                     ___bmul@multiplier:	
   556                           ; 1 bytes @ 0x3
   557                           
   558                           
   559                           ; 1 bytes @ 0x3
   560  0073                     	ds	1
   561  0074                     ??_SW_GetState:	
   562  0074                     ??_SW_UpdateState:	
   563                           ; 1 bytes @ 0x4
   564                           
   565  0074                     ??_GPIO_Init_Pin:	
   566                           ; 1 bytes @ 0x4
   567                           
   568                           
   569                           ; 1 bytes @ 0x4
   570  0074                     	ds	1
   571  0075                     _GPIO_Init_Port$31:	
   572                           
   573                           ; 2 bytes @ 0x5
   574  0075                     	ds	1
   575  0076                     SW_GetState@sw:	
   576                           
   577                           ; 1 bytes @ 0x6
   578  0076                     	ds	1
   579  0077                     SW_GetState@ret:	
   580  0077                     SW_UpdateState@sw:	
   581                           ; 1 bytes @ 0x7
   582                           
   583                           
   584                           ; 1 bytes @ 0x7
   585  0077                     	ds	1
   586  0078                     ??_SSD_Init:	
   587  0078                     ??_SW_Update:	
   588                           ; 1 bytes @ 0x8
   589                           
   590                           
   591                           ; 1 bytes @ 0x8
   592  0078                     	ds	1
   593  0079                     SSD_Init@i:	
   594                           
   595                           ; 2 bytes @ 0x9
   596  0079                     	ds	2
   597  007B                     ??_main:	
   598                           
   599                           ; 1 bytes @ 0xB
   600  007B                     	ds	3
   601                           
   602                           	psect	cstackBANK0
   603  003A                     __pcstackBANK0:	
   604  003A                     main@i:	
   605                           
   606                           ; 1 bytes @ 0x0
   607  003A                     	ds	1
   608                           
   609                           	psect	maintext
   610  0624                     __pmaintext:	
   611 ;;
   612 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   613 ;;
   614 ;; *************** function _main *****************
   615 ;; Defined at:
   616 ;;		line 15 in file "Digital_Clock.c"
   617 ;; Parameters:    Size  Location     Type
   618 ;;		None
   619 ;; Auto vars:     Size  Location     Type
   620 ;;  i               1    0[BANK0 ] unsigned char 
   621 ;; Return value:  Size  Location     Type
   622 ;;                  1    wreg      void 
   623 ;; Registers used:
   624 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   625 ;; Tracked objects:
   626 ;;		On entry : B00/0
   627 ;;		On exit  : 0/0
   628 ;;		Unchanged: 0/0
   629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   630 ;;      Params:         0       0       0       0       0
   631 ;;      Locals:         0       1       0       0       0
   632 ;;      Temps:          3       0       0       0       0
   633 ;;      Totals:         3       1       0       0       0
   634 ;;Total ram usage:        4 bytes
   635 ;; Hardware stack levels required when called:    3
   636 ;; This function calls:
   637 ;;		_SSD_Init
   638 ;;		_SSD_Set_Symbol
   639 ;;		_SSD_Update
   640 ;;		_SW_GetState
   641 ;;		_SW_Update
   642 ;; This function is called by:
   643 ;;		Startup code after reset
   644 ;; This function uses a non-reentrant model
   645 ;;
   646                           
   647                           
   648                           ;psect for function _main
   649  0624                     _main:	
   650  0624                     l1226:	
   651                           ;incstack = 0
   652                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   653                           
   654                           
   655                           ;Digital_Clock.c: 17:     u8_t i = 0;
   656  0624  1283               	bcf	3,5	;RP0=0, select bank0
   657  0625  1303               	bcf	3,6	;RP1=0, select bank0
   658  0626  01BA               	clrf	main@i
   659  0627                     l1228:	
   660                           
   661                           ;Digital_Clock.c: 18:     SSD_Init();
   662  0627  120A  118A  25B0  120A  118A  	fcall	_SSD_Init
   663  062C                     l1230:	
   664                           
   665                           ;Digital_Clock.c: 21:     SSD_Set_Symbol(i,SSD_MINUTES_UNITS);
   666  062C  01F0               	clrf	SSD_Set_Symbol@index
   667  062D  3000               	movlw	0
   668  062E  120A  118A  23D9  120A  118A  	fcall	_SSD_Set_Symbol
   669  0633                     l1232:	
   670                           
   671                           ;Digital_Clock.c: 22:     SSD_Set_Symbol(2,SSD_MINUTES_TENS);
   672  0633  01F0               	clrf	SSD_Set_Symbol@index
   673  0634  0AF0               	incf	SSD_Set_Symbol@index,f
   674  0635  3002               	movlw	2
   675  0636  120A  118A  23D9  120A  118A  	fcall	_SSD_Set_Symbol
   676  063B                     l1234:	
   677                           
   678                           ;Digital_Clock.c: 23:     SSD_Set_Symbol(3,SSD_HOURS_UNITS);
   679  063B  3002               	movlw	2
   680  063C  00FB               	movwf	??_main
   681  063D  087B               	movf	??_main,w
   682  063E  00F0               	movwf	SSD_Set_Symbol@index
   683  063F  3003               	movlw	3
   684  0640  120A  118A  23D9  120A  118A  	fcall	_SSD_Set_Symbol
   685  0645                     l1236:	
   686                           
   687                           ;Digital_Clock.c: 24:     SSD_Set_Symbol(4,SSD_HOURS_TENS);
   688  0645  3003               	movlw	3
   689  0646  00FB               	movwf	??_main
   690  0647  087B               	movf	??_main,w
   691  0648  00F0               	movwf	SSD_Set_Symbol@index
   692  0649  3004               	movlw	4
   693  064A  120A  118A  23D9  120A  118A  	fcall	_SSD_Set_Symbol
   694  064F                     l1238:	
   695                           
   696                           ;Digital_Clock.c: 26:     SSD_Update();
   697  064F  120A  118A  245B  120A  118A  	fcall	_SSD_Update
   698  0654                     l1240:	
   699                           
   700                           ;Digital_Clock.c: 27:     _delay((unsigned long)((1000)*(20000000/4000.0)));
   701  0654  301A               	movlw	26
   702  0655  00FD               	movwf	??_main+2
   703  0656  305E               	movlw	94
   704  0657  00FC               	movwf	??_main+1
   705  0658  306E               	movlw	110
   706  0659  00FB               	movwf	??_main
   707  065A                     u557:	
   708  065A  0BFB               	decfsz	??_main,f
   709  065B  2E5A               	goto	u557
   710  065C  0BFC               	decfsz	??_main+1,f
   711  065D  2E5A               	goto	u557
   712  065E  0BFD               	decfsz	??_main+2,f
   713  065F  2E5A               	goto	u557
   714  0660  0000               	nop
   715  0661                     l1242:	
   716                           
   717                           ;Digital_Clock.c: 28:     SSD_Update();
   718  0661  120A  118A  245B  120A  118A  	fcall	_SSD_Update
   719  0666                     l1244:	
   720                           
   721                           ;Digital_Clock.c: 29:     i = i+1;
   722  0666  1283               	bcf	3,5	;RP0=0, select bank0
   723  0667  1303               	bcf	3,6	;RP1=0, select bank0
   724  0668  083A               	movf	main@i,w
   725  0669  3E01               	addlw	1
   726  066A  00FB               	movwf	??_main
   727  066B  087B               	movf	??_main,w
   728  066C  00BA               	movwf	main@i
   729  066D                     l1246:	
   730                           
   731                           ;Digital_Clock.c: 30:     SSD_Set_Symbol(i,SSD_MINUTES_UNITS);
   732  066D  01F0               	clrf	SSD_Set_Symbol@index
   733  066E  083A               	movf	main@i,w
   734  066F  120A  118A  23D9  120A  118A  	fcall	_SSD_Set_Symbol
   735  0674                     l1248:	
   736                           
   737                           ;Digital_Clock.c: 31:     _delay((unsigned long)((1000)*(20000000/4000.0)));
   738  0674  301A               	movlw	26
   739  0675  00FD               	movwf	??_main+2
   740  0676  305E               	movlw	94
   741  0677  00FC               	movwf	??_main+1
   742  0678  306E               	movlw	110
   743  0679  00FB               	movwf	??_main
   744  067A                     u567:	
   745  067A  0BFB               	decfsz	??_main,f
   746  067B  2E7A               	goto	u567
   747  067C  0BFC               	decfsz	??_main+1,f
   748  067D  2E7A               	goto	u567
   749  067E  0BFD               	decfsz	??_main+2,f
   750  067F  2E7A               	goto	u567
   751  0680  0000               	nop
   752  0681                     l1250:	
   753                           
   754                           ;Digital_Clock.c: 32:     SSD_Update();
   755  0681  120A  118A  245B  120A  118A  	fcall	_SSD_Update
   756  0686                     l1252:	
   757                           
   758                           ;Digital_Clock.c: 33:     _delay((unsigned long)((1000)*(20000000/4000.0)));
   759  0686  301A               	movlw	26
   760  0687  00FD               	movwf	??_main+2
   761  0688  305E               	movlw	94
   762  0689  00FC               	movwf	??_main+1
   763  068A  306E               	movlw	110
   764  068B  00FB               	movwf	??_main
   765  068C                     u577:	
   766  068C  0BFB               	decfsz	??_main,f
   767  068D  2E8C               	goto	u577
   768  068E  0BFC               	decfsz	??_main+1,f
   769  068F  2E8C               	goto	u577
   770  0690  0BFD               	decfsz	??_main+2,f
   771  0691  2E8C               	goto	u577
   772  0692  0000               	nop
   773  0693                     l1254:	
   774                           
   775                           ;Digital_Clock.c: 34:     SSD_Update();
   776  0693  120A  118A  245B  120A  118A  	fcall	_SSD_Update
   777  0698                     l1256:	
   778                           
   779                           ;Digital_Clock.c: 35:     _delay((unsigned long)((1000)*(20000000/4000.0)));
   780  0698  301A               	movlw	26
   781  0699  00FD               	movwf	??_main+2
   782  069A  305E               	movlw	94
   783  069B  00FC               	movwf	??_main+1
   784  069C  306E               	movlw	110
   785  069D  00FB               	movwf	??_main
   786  069E                     u587:	
   787  069E  0BFB               	decfsz	??_main,f
   788  069F  2E9E               	goto	u587
   789  06A0  0BFC               	decfsz	??_main+1,f
   790  06A1  2E9E               	goto	u587
   791  06A2  0BFD               	decfsz	??_main+2,f
   792  06A3  2E9E               	goto	u587
   793  06A4  0000               	nop
   794  06A5                     l1258:	
   795                           
   796                           ;Digital_Clock.c: 36:     SSD_Update();
   797  06A5  120A  118A  245B  120A  118A  	fcall	_SSD_Update
   798  06AA                     l1260:	
   799                           
   800                           ;Digital_Clock.c: 37:     _delay((unsigned long)((1000)*(20000000/4000.0)));
   801  06AA  301A               	movlw	26
   802  06AB  00FD               	movwf	??_main+2
   803  06AC  305E               	movlw	94
   804  06AD  00FC               	movwf	??_main+1
   805  06AE  306E               	movlw	110
   806  06AF  00FB               	movwf	??_main
   807  06B0                     u597:	
   808  06B0  0BFB               	decfsz	??_main,f
   809  06B1  2EB0               	goto	u597
   810  06B2  0BFC               	decfsz	??_main+1,f
   811  06B3  2EB0               	goto	u597
   812  06B4  0BFD               	decfsz	??_main+2,f
   813  06B5  2EB0               	goto	u597
   814  06B6  0000               	nop
   815  06B7                     l1262:	
   816                           
   817                           ;Digital_Clock.c: 40:     {;Digital_Clock.c: 41:         _delay((unsigned long)((5)*(200
      +                          00000/4000.0)));
   818  06B7  3021               	movlw	33
   819  06B8  00FC               	movwf	??_main+1
   820  06B9  3076               	movlw	118
   821  06BA  00FB               	movwf	??_main
   822  06BB                     u607:	
   823  06BB  0BFB               	decfsz	??_main,f
   824  06BC  2EBB               	goto	u607
   825  06BD  0BFC               	decfsz	??_main+1,f
   826  06BE  2EBB               	goto	u607
   827  06BF  0000               	nop
   828  06C0                     l1264:	
   829                           
   830                           ;Digital_Clock.c: 42:         SW_Update();
   831  06C0  120A  118A  24C3  120A  118A  	fcall	_SW_Update
   832  06C5                     l1266:	
   833                           
   834                           ;Digital_Clock.c: 43:         if(SW_GetState(SW_PLUS) == SW_PRE_PRESSED)
   835  06C5  3000               	movlw	0
   836  06C6  120A  118A  2401  120A  118A  	fcall	_SW_GetState
   837  06CB  3A01               	xorlw	1
   838  06CC  1D03               	skipz
   839  06CD  2ECF               	goto	u541
   840  06CE  2ED0               	goto	u540
   841  06CF                     u541:	
   842  06CF  2EDD               	goto	l1270
   843  06D0                     u540:	
   844  06D0                     l1268:	
   845                           
   846                           ;Digital_Clock.c: 44:         {;Digital_Clock.c: 45:             SSD_Set_Symbol(++i,SSD_
      +                          MINUTES_UNITS);
   847  06D0  01F0               	clrf	SSD_Set_Symbol@index
   848  06D1  3001               	movlw	1
   849  06D2  00FB               	movwf	??_main
   850  06D3  087B               	movf	??_main,w
   851  06D4  1283               	bcf	3,5	;RP0=0, select bank0
   852  06D5  1303               	bcf	3,6	;RP1=0, select bank0
   853  06D6  07BA               	addwf	main@i,f
   854  06D7  083A               	movf	main@i,w
   855  06D8  120A  118A  23D9  120A  118A  	fcall	_SSD_Set_Symbol
   856  06DD                     l1270:	
   857                           
   858                           ;Digital_Clock.c: 47:         SSD_Update();
   859  06DD  120A  118A  245B  120A  118A  	fcall	_SSD_Update
   860  06E2  2EB7               	goto	l1262
   861  06E3  120A  118A  2800   	ljmp	start
   862  06E6                     __end_of_main:	
   863                           
   864                           	psect	text1
   865  04C3                     __ptext1:	
   866 ;; *************** function _SW_Update *****************
   867 ;; Defined at:
   868 ;;		line 70 in file "SW.c"
   869 ;; Parameters:    Size  Location     Type
   870 ;;		None
   871 ;; Auto vars:     Size  Location     Type
   872 ;;		None
   873 ;; Return value:  Size  Location     Type
   874 ;;                  1    wreg      void 
   875 ;; Registers used:
   876 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   877 ;; Tracked objects:
   878 ;;		On entry : 0/0
   879 ;;		On exit  : 0/0
   880 ;;		Unchanged: 0/0
   881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   882 ;;      Params:         0       0       0       0       0
   883 ;;      Locals:         0       0       0       0       0
   884 ;;      Temps:          2       0       0       0       0
   885 ;;      Totals:         2       0       0       0       0
   886 ;;Total ram usage:        2 bytes
   887 ;; Hardware stack levels used:    1
   888 ;; Hardware stack levels required when called:    2
   889 ;; This function calls:
   890 ;;		_SW_UpdateState
   891 ;; This function is called by:
   892 ;;		_main
   893 ;; This function uses a non-reentrant model
   894 ;;
   895                           
   896                           
   897                           ;psect for function _SW_Update
   898  04C3                     _SW_Update:	
   899  04C3                     l1200:	
   900                           ;incstack = 0
   901                           ; Regs used in _SW_Update: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   902                           
   903                           
   904                           ;SW.c: 75:     SW_DATA[SW_PLUS].samples[0] = SW_DATA[SW_PLUS].samples[1];
   905  04C3  1283               	bcf	3,5	;RP0=0, select bank0
   906  04C4  1303               	bcf	3,6	;RP1=0, select bank0
   907  04C5  0821               	movf	_SW_DATA+1,w
   908  04C6  00F8               	movwf	??_SW_Update
   909  04C7  0878               	movf	??_SW_Update,w
   910  04C8  00A0               	movwf	_SW_DATA
   911  04C9                     l1202:	
   912                           
   913                           ;SW.c: 76:     SW_DATA[SW_PLUS].samples[1] = (((PORTB) >> (0))& 1);
   914  04C9  0806               	movf	6,w	;volatile
   915  04CA  3901               	andlw	1
   916  04CB  00F8               	movwf	??_SW_Update
   917  04CC  0878               	movf	??_SW_Update,w
   918  04CD  00A1               	movwf	_SW_DATA+1
   919  04CE                     l1204:	
   920                           
   921                           ;SW.c: 78:     SW_UpdateState(SW_PLUS);
   922  04CE  3000               	movlw	0
   923  04CF  120A  118A  26E6  120A  118A  	fcall	_SW_UpdateState
   924  04D4                     l1206:	
   925                           
   926                           ;SW.c: 80:     SW_DATA[SW_MINUS].samples[0] = SW_DATA[SW_PLUS].samples[1];
   927  04D4  1283               	bcf	3,5	;RP0=0, select bank0
   928  04D5  1303               	bcf	3,6	;RP1=0, select bank0
   929  04D6  0821               	movf	_SW_DATA+1,w
   930  04D7  00F8               	movwf	??_SW_Update
   931  04D8  0878               	movf	??_SW_Update,w
   932  04D9  00A3               	movwf	_SW_DATA+3
   933  04DA                     l1208:	
   934                           
   935                           ;SW.c: 81:     SW_DATA[SW_MINUS].samples[1] = (((PORTB) >> (1))& 1);
   936  04DA  0806               	movf	6,w	;volatile
   937  04DB  00F8               	movwf	??_SW_Update
   938  04DC  1003               	clrc
   939  04DD  0C78               	rrf	??_SW_Update,w
   940  04DE  3901               	andlw	1
   941  04DF  00F9               	movwf	??_SW_Update+1
   942  04E0  0879               	movf	??_SW_Update+1,w
   943  04E1  00A4               	movwf	_SW_DATA+4
   944  04E2                     l1210:	
   945                           
   946                           ;SW.c: 83:     SW_UpdateState(SW_MINUS);
   947  04E2  3001               	movlw	1
   948  04E3  120A  118A  26E6  120A  118A  	fcall	_SW_UpdateState
   949  04E8                     l1212:	
   950                           
   951                           ;SW.c: 86:     SW_DATA[SW_SET].samples[0] = SW_DATA[SW_PLUS].samples[1];
   952  04E8  1283               	bcf	3,5	;RP0=0, select bank0
   953  04E9  1303               	bcf	3,6	;RP1=0, select bank0
   954  04EA  0821               	movf	_SW_DATA+1,w
   955  04EB  00F8               	movwf	??_SW_Update
   956  04EC  0878               	movf	??_SW_Update,w
   957  04ED  00A6               	movwf	_SW_DATA+6
   958  04EE                     l1214:	
   959                           
   960                           ;SW.c: 87:     SW_DATA[SW_SET].samples[1] = (((PORTB) >> (2))& 1);
   961  04EE  0806               	movf	6,w	;volatile
   962  04EF  00F8               	movwf	??_SW_Update
   963  04F0  3002               	movlw	2
   964  04F1                     u535:	
   965  04F1  1003               	clrc
   966  04F2  0CF8               	rrf	??_SW_Update,f
   967  04F3  3EFF               	addlw	-1
   968  04F4  1D03               	skipz
   969  04F5  2CF1               	goto	u535
   970  04F6  0878               	movf	??_SW_Update,w
   971  04F7  3901               	andlw	1
   972  04F8  00F9               	movwf	??_SW_Update+1
   973  04F9  0879               	movf	??_SW_Update+1,w
   974  04FA  00A7               	movwf	_SW_DATA+7
   975  04FB                     l1216:	
   976                           
   977                           ;SW.c: 89:     SW_UpdateState(SW_SET);
   978  04FB  3002               	movlw	2
   979  04FC  120A  118A  26E6  120A  118A  	fcall	_SW_UpdateState
   980  0501                     l118:	
   981  0501  0008               	return
   982  0502                     __end_of_SW_Update:	
   983                           
   984                           	psect	text2
   985  06E6                     __ptext2:	
   986 ;; *************** function _SW_UpdateState *****************
   987 ;; Defined at:
   988 ;;		line 92 in file "SW.c"
   989 ;; Parameters:    Size  Location     Type
   990 ;;  sw              1    wreg     enum E859
   991 ;; Auto vars:     Size  Location     Type
   992 ;;  sw              1    7[COMMON] enum E859
   993 ;; Return value:  Size  Location     Type
   994 ;;                  1    wreg      void 
   995 ;; Registers used:
   996 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   997 ;; Tracked objects:
   998 ;;		On entry : 0/0
   999 ;;		On exit  : 0/0
  1000 ;;		Unchanged: 0/0
  1001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1002 ;;      Params:         0       0       0       0       0
  1003 ;;      Locals:         1       0       0       0       0
  1004 ;;      Temps:          3       0       0       0       0
  1005 ;;      Totals:         4       0       0       0       0
  1006 ;;Total ram usage:        4 bytes
  1007 ;; Hardware stack levels used:    1
  1008 ;; Hardware stack levels required when called:    1
  1009 ;; This function calls:
  1010 ;;		___bmul
  1011 ;; This function is called by:
  1012 ;;		_SW_Update
  1013 ;; This function uses a non-reentrant model
  1014 ;;
  1015                           
  1016                           
  1017                           ;psect for function _SW_UpdateState
  1018  06E6                     _SW_UpdateState:	
  1019                           
  1020                           ;incstack = 0
  1021                           ; Regs used in _SW_UpdateState: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1022                           ;SW_UpdateState@sw stored from wreg
  1023  06E6  00F7               	movwf	SW_UpdateState@sw
  1024  06E7                     l1126:	
  1025                           
  1026                           ;SW.c: 92: void SW_UpdateState(SW_t sw);SW.c: 93: {;SW.c: 109:     switch(SW_DATA[sw].st
      +                          ate)
  1027  06E7  2FBB               	goto	l1154
  1028  06E8                     l1128:	
  1029                           
  1030                           ;SW.c: 113:             if(SW_DATA[sw].samples[0] == 1 && SW_DATA[sw].samples[1] == 1)
  1031  06E8  3003               	movlw	3
  1032  06E9  00F4               	movwf	??_SW_UpdateState
  1033  06EA  0874               	movf	??_SW_UpdateState,w
  1034  06EB  00F0               	movwf	___bmul@multiplicand
  1035  06EC  0877               	movf	SW_UpdateState@sw,w
  1036  06ED  120A  118A  2415  120A  118A  	fcall	___bmul
  1037  06F2  3E20               	addlw	(low (_SW_DATA| 0))& (0+255)
  1038  06F3  0084               	movwf	4
  1039  06F4  1383               	bcf	3,7	;select IRP bank0
  1040  06F5  0300               	decf	0,w
  1041  06F6  1D03               	btfss	3,2
  1042  06F7  2EF9               	goto	u431
  1043  06F8  2EFA               	goto	u430
  1044  06F9                     u431:	
  1045  06F9  2FDE               	goto	l132
  1046  06FA                     u430:	
  1047  06FA                     l1130:	
  1048  06FA  3003               	movlw	3
  1049  06FB  00F4               	movwf	??_SW_UpdateState
  1050  06FC  0874               	movf	??_SW_UpdateState,w
  1051  06FD  00F0               	movwf	___bmul@multiplicand
  1052  06FE  0877               	movf	SW_UpdateState@sw,w
  1053  06FF  120A  118A  2415  120A  118A  	fcall	___bmul
  1054  0704  3E21               	addlw	(low ((_SW_DATA| 0+1)))& (0+255)
  1055  0705  0084               	movwf	4
  1056  0706  1383               	bcf	3,7	;select IRP bank0
  1057  0707  0300               	decf	0,w
  1058  0708  1D03               	btfss	3,2
  1059  0709  2F0B               	goto	u441
  1060  070A  2F0C               	goto	u440
  1061  070B                     u441:	
  1062  070B  2FDE               	goto	l132
  1063  070C                     u440:	
  1064  070C                     l1132:	
  1065                           
  1066                           ;SW.c: 114:                 SW_DATA[sw].state = SW_RELEASED;
  1067  070C  3003               	movlw	3
  1068  070D  00F4               	movwf	??_SW_UpdateState
  1069  070E  0874               	movf	??_SW_UpdateState,w
  1070  070F  00F0               	movwf	___bmul@multiplicand
  1071  0710  0877               	movf	SW_UpdateState@sw,w
  1072  0711  120A  118A  2415  120A  118A  	fcall	___bmul
  1073  0716  3E22               	addlw	(low ((_SW_DATA| 0+2)))& (0+255)
  1074  0717  0084               	movwf	4
  1075  0718  1383               	bcf	3,7	;select IRP bank0
  1076  0719  0180               	clrf	0
  1077  071A  2FDE               	goto	l132
  1078  071B                     l1134:	
  1079                           
  1080                           ;SW.c: 117:             if(SW_DATA[sw].samples[0] == 0 && SW_DATA[sw].samples[1] == 0)
  1081  071B  3003               	movlw	3
  1082  071C  00F4               	movwf	??_SW_UpdateState
  1083  071D  0874               	movf	??_SW_UpdateState,w
  1084  071E  00F0               	movwf	___bmul@multiplicand
  1085  071F  0877               	movf	SW_UpdateState@sw,w
  1086  0720  120A  118A  2415  120A  118A  	fcall	___bmul
  1087  0725  3E20               	addlw	(low (_SW_DATA| 0))& (0+255)
  1088  0726  0084               	movwf	4
  1089  0727  1383               	bcf	3,7	;select IRP bank0
  1090  0728  0800               	movf	0,w
  1091  0729  1D03               	btfss	3,2
  1092  072A  2F2C               	goto	u451
  1093  072B  2F2D               	goto	u450
  1094  072C                     u451:	
  1095  072C  2FDE               	goto	l132
  1096  072D                     u450:	
  1097  072D                     l1136:	
  1098  072D  3003               	movlw	3
  1099  072E  00F4               	movwf	??_SW_UpdateState
  1100  072F  0874               	movf	??_SW_UpdateState,w
  1101  0730  00F0               	movwf	___bmul@multiplicand
  1102  0731  0877               	movf	SW_UpdateState@sw,w
  1103  0732  120A  118A  2415  120A  118A  	fcall	___bmul
  1104  0737  3E21               	addlw	(low ((_SW_DATA| 0+1)))& (0+255)
  1105  0738  0084               	movwf	4
  1106  0739  1383               	bcf	3,7	;select IRP bank0
  1107  073A  0800               	movf	0,w
  1108  073B  1D03               	btfss	3,2
  1109  073C  2F3E               	goto	u461
  1110  073D  2F3F               	goto	u460
  1111  073E                     u461:	
  1112  073E  2FDE               	goto	l132
  1113  073F                     u460:	
  1114  073F                     l1138:	
  1115                           
  1116                           ;SW.c: 118:                 SW_DATA[sw].state = SW_PRE_PRESSED;
  1117  073F  3003               	movlw	3
  1118  0740  00F4               	movwf	??_SW_UpdateState
  1119  0741  0874               	movf	??_SW_UpdateState,w
  1120  0742  00F0               	movwf	___bmul@multiplicand
  1121  0743  0877               	movf	SW_UpdateState@sw,w
  1122  0744  120A  118A  2415  120A  118A  	fcall	___bmul
  1123  0749  3E22               	addlw	(low ((_SW_DATA| 0+2)))& (0+255)
  1124  074A  0084               	movwf	4
  1125  074B  1383               	bcf	3,7	;select IRP bank0
  1126  074C  0180               	clrf	0
  1127  074D  0A80               	incf	0,f
  1128  074E  2FDE               	goto	l132
  1129  074F                     l1140:	
  1130                           
  1131                           ;SW.c: 121:             if(SW_DATA[sw].samples[0] == 0 && SW_DATA[sw].samples[1] == 0)
  1132  074F  3003               	movlw	3
  1133  0750  00F4               	movwf	??_SW_UpdateState
  1134  0751  0874               	movf	??_SW_UpdateState,w
  1135  0752  00F0               	movwf	___bmul@multiplicand
  1136  0753  0877               	movf	SW_UpdateState@sw,w
  1137  0754  120A  118A  2415  120A  118A  	fcall	___bmul
  1138  0759  3E20               	addlw	(low (_SW_DATA| 0))& (0+255)
  1139  075A  0084               	movwf	4
  1140  075B  1383               	bcf	3,7	;select IRP bank0
  1141  075C  0800               	movf	0,w
  1142  075D  1D03               	btfss	3,2
  1143  075E  2F60               	goto	u471
  1144  075F  2F61               	goto	u470
  1145  0760                     u471:	
  1146  0760  2FDE               	goto	l132
  1147  0761                     u470:	
  1148  0761                     l1142:	
  1149  0761  3003               	movlw	3
  1150  0762  00F4               	movwf	??_SW_UpdateState
  1151  0763  0874               	movf	??_SW_UpdateState,w
  1152  0764  00F0               	movwf	___bmul@multiplicand
  1153  0765  0877               	movf	SW_UpdateState@sw,w
  1154  0766  120A  118A  2415  120A  118A  	fcall	___bmul
  1155  076B  3E21               	addlw	(low ((_SW_DATA| 0+1)))& (0+255)
  1156  076C  0084               	movwf	4
  1157  076D  1383               	bcf	3,7	;select IRP bank0
  1158  076E  0800               	movf	0,w
  1159  076F  1D03               	btfss	3,2
  1160  0770  2F72               	goto	u481
  1161  0771  2F73               	goto	u480
  1162  0772                     u481:	
  1163  0772  2FDE               	goto	l132
  1164  0773                     u480:	
  1165  0773                     l1144:	
  1166                           
  1167                           ;SW.c: 122:                 SW_DATA[sw].state = SW_PRESSED;
  1168  0773  3002               	movlw	2
  1169  0774  00F4               	movwf	??_SW_UpdateState
  1170  0775  3003               	movlw	3
  1171  0776  00F5               	movwf	??_SW_UpdateState+1
  1172  0777  0875               	movf	??_SW_UpdateState+1,w
  1173  0778  00F0               	movwf	___bmul@multiplicand
  1174  0779  0877               	movf	SW_UpdateState@sw,w
  1175  077A  120A  118A  2415  120A  118A  	fcall	___bmul
  1176  077F  3E22               	addlw	(low ((_SW_DATA| 0+2)))& (0+255)
  1177  0780  0084               	movwf	4
  1178  0781  0874               	movf	??_SW_UpdateState,w
  1179  0782  1383               	bcf	3,7	;select IRP bank0
  1180  0783  0080               	movwf	0
  1181  0784  2FDE               	goto	l132
  1182  0785                     l1146:	
  1183                           
  1184                           ;SW.c: 125:             if(SW_DATA[sw].samples[0] == 1 && SW_DATA[sw].samples[1] == 1)
  1185  0785  3003               	movlw	3
  1186  0786  00F4               	movwf	??_SW_UpdateState
  1187  0787  0874               	movf	??_SW_UpdateState,w
  1188  0788  00F0               	movwf	___bmul@multiplicand
  1189  0789  0877               	movf	SW_UpdateState@sw,w
  1190  078A  120A  118A  2415  120A  118A  	fcall	___bmul
  1191  078F  3E20               	addlw	(low (_SW_DATA| 0))& (0+255)
  1192  0790  0084               	movwf	4
  1193  0791  1383               	bcf	3,7	;select IRP bank0
  1194  0792  0300               	decf	0,w
  1195  0793  1D03               	btfss	3,2
  1196  0794  2F96               	goto	u491
  1197  0795  2F97               	goto	u490
  1198  0796                     u491:	
  1199  0796  2FDE               	goto	l132
  1200  0797                     u490:	
  1201  0797                     l1148:	
  1202  0797  3003               	movlw	3
  1203  0798  00F4               	movwf	??_SW_UpdateState
  1204  0799  0874               	movf	??_SW_UpdateState,w
  1205  079A  00F0               	movwf	___bmul@multiplicand
  1206  079B  0877               	movf	SW_UpdateState@sw,w
  1207  079C  120A  118A  2415  120A  118A  	fcall	___bmul
  1208  07A1  3E21               	addlw	(low ((_SW_DATA| 0+1)))& (0+255)
  1209  07A2  0084               	movwf	4
  1210  07A3  1383               	bcf	3,7	;select IRP bank0
  1211  07A4  0300               	decf	0,w
  1212  07A5  1D03               	btfss	3,2
  1213  07A6  2FA8               	goto	u501
  1214  07A7  2FA9               	goto	u500
  1215  07A8                     u501:	
  1216  07A8  2FDE               	goto	l132
  1217  07A9                     u500:	
  1218  07A9                     l1150:	
  1219                           
  1220                           ;SW.c: 126:                 SW_DATA[sw].state = SW_PRE_RELEASED;
  1221  07A9  3003               	movlw	3
  1222  07AA  00F4               	movwf	??_SW_UpdateState
  1223  07AB  3003               	movlw	3
  1224  07AC  00F5               	movwf	??_SW_UpdateState+1
  1225  07AD  0875               	movf	??_SW_UpdateState+1,w
  1226  07AE  00F0               	movwf	___bmul@multiplicand
  1227  07AF  0877               	movf	SW_UpdateState@sw,w
  1228  07B0  120A  118A  2415  120A  118A  	fcall	___bmul
  1229  07B5  3E22               	addlw	(low ((_SW_DATA| 0+2)))& (0+255)
  1230  07B6  0084               	movwf	4
  1231  07B7  0874               	movf	??_SW_UpdateState,w
  1232  07B8  1383               	bcf	3,7	;select IRP bank0
  1233  07B9  0080               	movwf	0
  1234  07BA  2FDE               	goto	l132
  1235  07BB                     l1154:	
  1236  07BB  3003               	movlw	3
  1237  07BC  00F4               	movwf	??_SW_UpdateState
  1238  07BD  0874               	movf	??_SW_UpdateState,w
  1239  07BE  00F0               	movwf	___bmul@multiplicand
  1240  07BF  0877               	movf	SW_UpdateState@sw,w
  1241  07C0  120A  118A  2415  120A  118A  	fcall	___bmul
  1242  07C5  3E22               	addlw	(low ((_SW_DATA| 0+2)))& (0+255)
  1243  07C6  0084               	movwf	4
  1244  07C7  1383               	bcf	3,7	;select IRP bank0
  1245  07C8  0800               	movf	0,w
  1246  07C9  00F5               	movwf	??_SW_UpdateState+1
  1247  07CA  01F6               	clrf	??_SW_UpdateState+2
  1248                           
  1249                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1250                           ; Switch size 1, requested type "simple"
  1251                           ; Number of cases is 1, Range of values is 0 to 0
  1252                           ; switch strategies available:
  1253                           ; Name         Instructions Cycles
  1254                           ; simple_byte            4     3 (average)
  1255                           ; direct_byte           11     8 (fixed)
  1256                           ; jumptable            260     6 (fixed)
  1257                           ;	Chosen strategy is simple_byte
  1258  07CB  0876               	movf	??_SW_UpdateState+2,w
  1259  07CC  3A00               	xorlw	0	; case 0
  1260  07CD  1903               	skipnz
  1261  07CE  2FD0               	goto	l1352
  1262  07CF  2FDE               	goto	l132
  1263  07D0                     l1352:	
  1264                           
  1265                           ; Switch size 1, requested type "simple"
  1266                           ; Number of cases is 4, Range of values is 0 to 3
  1267                           ; switch strategies available:
  1268                           ; Name         Instructions Cycles
  1269                           ; simple_byte           13     7 (average)
  1270                           ; direct_byte           20     8 (fixed)
  1271                           ; jumptable            260     6 (fixed)
  1272                           ;	Chosen strategy is simple_byte
  1273  07D0  0875               	movf	??_SW_UpdateState+1,w
  1274  07D1  3A00               	xorlw	0	; case 0
  1275  07D2  1903               	skipnz
  1276  07D3  2F1B               	goto	l1134
  1277  07D4  3A01               	xorlw	1	; case 1
  1278  07D5  1903               	skipnz
  1279  07D6  2F4F               	goto	l1140
  1280  07D7  3A03               	xorlw	3	; case 2
  1281  07D8  1903               	skipnz
  1282  07D9  2F85               	goto	l1146
  1283  07DA  3A01               	xorlw	1	; case 3
  1284  07DB  1903               	skipnz
  1285  07DC  2EE8               	goto	l1128
  1286  07DD  2FDE               	goto	l132
  1287  07DE                     l132:	
  1288  07DE  0008               	return
  1289  07DF                     __end_of_SW_UpdateState:	
  1290                           
  1291                           	psect	text3
  1292  0401                     __ptext3:	
  1293 ;; *************** function _SW_GetState *****************
  1294 ;; Defined at:
  1295 ;;		line 61 in file "SW.c"
  1296 ;; Parameters:    Size  Location     Type
  1297 ;;  sw              1    wreg     enum E859
  1298 ;; Auto vars:     Size  Location     Type
  1299 ;;  sw              1    6[COMMON] enum E859
  1300 ;;  ret             1    7[COMMON] unsigned char 
  1301 ;; Return value:  Size  Location     Type
  1302 ;;                  1    wreg      unsigned char 
  1303 ;; Registers used:
  1304 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1305 ;; Tracked objects:
  1306 ;;		On entry : 0/0
  1307 ;;		On exit  : 0/0
  1308 ;;		Unchanged: 0/0
  1309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1310 ;;      Params:         0       0       0       0       0
  1311 ;;      Locals:         2       0       0       0       0
  1312 ;;      Temps:          2       0       0       0       0
  1313 ;;      Totals:         4       0       0       0       0
  1314 ;;Total ram usage:        4 bytes
  1315 ;; Hardware stack levels used:    1
  1316 ;; Hardware stack levels required when called:    1
  1317 ;; This function calls:
  1318 ;;		___bmul
  1319 ;; This function is called by:
  1320 ;;		_main
  1321 ;; This function uses a non-reentrant model
  1322 ;;
  1323                           
  1324                           
  1325                           ;psect for function _SW_GetState
  1326  0401                     _SW_GetState:	
  1327                           
  1328                           ;incstack = 0
  1329                           ; Regs used in _SW_GetState: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1330                           ;SW_GetState@sw stored from wreg
  1331  0401  00F6               	movwf	SW_GetState@sw
  1332  0402                     l1218:	
  1333  0402                     l1220:	
  1334                           
  1335                           ;SW.c: 66:     ret = SW_DATA[sw].state;
  1336  0402  3003               	movlw	3
  1337  0403  00F4               	movwf	??_SW_GetState
  1338  0404  0874               	movf	??_SW_GetState,w
  1339  0405  00F0               	movwf	___bmul@multiplicand
  1340  0406  0876               	movf	SW_GetState@sw,w
  1341  0407  120A  118A  2415  120A  118A  	fcall	___bmul
  1342  040C  3E22               	addlw	(low ((_SW_DATA| 0+2)))& (0+255)
  1343  040D  0084               	movwf	4
  1344  040E  1383               	bcf	3,7	;select IRP bank0
  1345  040F  0800               	movf	0,w
  1346  0410  00F5               	movwf	??_SW_GetState+1
  1347  0411  0875               	movf	??_SW_GetState+1,w
  1348  0412  00F7               	movwf	SW_GetState@ret
  1349  0413                     l1222:	
  1350                           
  1351                           ;SW.c: 68:     return ret;
  1352  0413  0877               	movf	SW_GetState@ret,w
  1353  0414                     l115:	
  1354  0414  0008               	return
  1355  0415                     __end_of_SW_GetState:	
  1356                           
  1357                           	psect	text4
  1358  0415                     __ptext4:	
  1359 ;; *************** function ___bmul *****************
  1360 ;; Defined at:
  1361 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8.c"
  1362 ;; Parameters:    Size  Location     Type
  1363 ;;  multiplier      1    wreg     unsigned char 
  1364 ;;  multiplicand    1    0[COMMON] unsigned char 
  1365 ;; Auto vars:     Size  Location     Type
  1366 ;;  multiplier      1    3[COMMON] unsigned char 
  1367 ;;  product         1    2[COMMON] unsigned char 
  1368 ;; Return value:  Size  Location     Type
  1369 ;;                  1    wreg      unsigned char 
  1370 ;; Registers used:
  1371 ;;		wreg, status,2, status,0
  1372 ;; Tracked objects:
  1373 ;;		On entry : 0/0
  1374 ;;		On exit  : 0/0
  1375 ;;		Unchanged: 0/0
  1376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1377 ;;      Params:         1       0       0       0       0
  1378 ;;      Locals:         2       0       0       0       0
  1379 ;;      Temps:          1       0       0       0       0
  1380 ;;      Totals:         4       0       0       0       0
  1381 ;;Total ram usage:        4 bytes
  1382 ;; Hardware stack levels used:    1
  1383 ;; This function calls:
  1384 ;;		Nothing
  1385 ;; This function is called by:
  1386 ;;		_SW_GetState
  1387 ;;		_SW_UpdateState
  1388 ;; This function uses a non-reentrant model
  1389 ;;
  1390                           
  1391                           
  1392                           ;psect for function ___bmul
  1393  0415                     ___bmul:	
  1394                           
  1395                           ;incstack = 0
  1396                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1397                           ;___bmul@multiplier stored from wreg
  1398  0415  00F3               	movwf	___bmul@multiplier
  1399  0416                     l1038:	
  1400  0416  01F2               	clrf	___bmul@product
  1401  0417                     l1040:	
  1402  0417  1C73               	btfss	___bmul@multiplier,0
  1403  0418  2C1A               	goto	u281
  1404  0419  2C1B               	goto	u280
  1405  041A                     u281:	
  1406  041A  2C1F               	goto	l1044
  1407  041B                     u280:	
  1408  041B                     l1042:	
  1409  041B  0870               	movf	___bmul@multiplicand,w
  1410  041C  00F1               	movwf	??___bmul
  1411  041D  0871               	movf	??___bmul,w
  1412  041E  07F2               	addwf	___bmul@product,f
  1413  041F                     l1044:	
  1414  041F  1003               	clrc
  1415  0420  0DF0               	rlf	___bmul@multiplicand,f
  1416  0421                     l1046:	
  1417  0421  1003               	clrc
  1418  0422  0CF3               	rrf	___bmul@multiplier,f
  1419  0423  0873               	movf	___bmul@multiplier,w
  1420  0424  1D03               	btfss	3,2
  1421  0425  2C27               	goto	u291
  1422  0426  2C28               	goto	u290
  1423  0427                     u291:	
  1424  0427  2C17               	goto	l1040
  1425  0428                     u290:	
  1426  0428                     l1048:	
  1427  0428  0872               	movf	___bmul@product,w
  1428  0429                     l244:	
  1429  0429  0008               	return
  1430  042A                     __end_of___bmul:	
  1431                           
  1432                           	psect	text5
  1433  045B                     __ptext5:	
  1434 ;; *************** function _SSD_Update *****************
  1435 ;; Defined at:
  1436 ;;		line 77 in file "SSD.c"
  1437 ;; Parameters:    Size  Location     Type
  1438 ;;		None
  1439 ;; Auto vars:     Size  Location     Type
  1440 ;;		None
  1441 ;; Return value:  Size  Location     Type
  1442 ;;                  1    wreg      void 
  1443 ;; Registers used:
  1444 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1445 ;; Tracked objects:
  1446 ;;		On entry : 0/0
  1447 ;;		On exit  : 0/0
  1448 ;;		Unchanged: 0/0
  1449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1450 ;;      Params:         0       0       0       0       0
  1451 ;;      Locals:         0       0       0       0       0
  1452 ;;      Temps:          0       0       0       0       0
  1453 ;;      Totals:         0       0       0       0       0
  1454 ;;Total ram usage:        0 bytes
  1455 ;; Hardware stack levels used:    1
  1456 ;; Hardware stack levels required when called:    1
  1457 ;; This function calls:
  1458 ;;		_SSD_Disable
  1459 ;;		_SSD_Enable
  1460 ;; This function is called by:
  1461 ;;		_main
  1462 ;; This function uses a non-reentrant model
  1463 ;;
  1464                           
  1465                           
  1466                           ;psect for function _SSD_Update
  1467  045B                     _SSD_Update:	
  1468  045B                     l1188:	
  1469                           ;incstack = 0
  1470                           ; Regs used in _SSD_Update: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1471                           
  1472                           
  1473                           ;SSD.c: 82:     SSD_Disable(currentSSD);
  1474  045B  1283               	bcf	3,5	;RP0=0, select bank0
  1475  045C  1303               	bcf	3,6	;RP1=0, select bank0
  1476  045D  082D               	movf	_currentSSD,w
  1477  045E  120A  118A  242A  120A  118A  	fcall	_SSD_Disable
  1478  0463                     l1190:	
  1479                           
  1480                           ;SSD.c: 84:     currentSSD++;
  1481  0463  3001               	movlw	1
  1482  0464  1283               	bcf	3,5	;RP0=0, select bank0
  1483  0465  1303               	bcf	3,6	;RP1=0, select bank0
  1484  0466  07AD               	addwf	_currentSSD,f
  1485  0467  1803               	skipnc
  1486  0468  0AAE               	incf	_currentSSD+1,f
  1487  0469  3000               	movlw	0
  1488  046A  07AE               	addwf	_currentSSD+1,f
  1489  046B                     l1192:	
  1490                           
  1491                           ;SSD.c: 85:     if(currentSSD > SSD_HOURS_TENS)currentSSD = 0;
  1492  046B  082E               	movf	_currentSSD+1,w
  1493  046C  3A80               	xorlw	128
  1494  046D  00FF               	movwf	btemp+1
  1495  046E  3080               	movlw	128
  1496  046F  027F               	subwf	btemp+1,w
  1497  0470  1D03               	skipz
  1498  0471  2C74               	goto	u525
  1499  0472  3004               	movlw	4
  1500  0473  022D               	subwf	_currentSSD,w
  1501  0474                     u525:	
  1502  0474  1C03               	skipc
  1503  0475  2C77               	goto	u521
  1504  0476  2C78               	goto	u520
  1505  0477                     u521:	
  1506  0477  2C7C               	goto	l1196
  1507  0478                     u520:	
  1508  0478                     l1194:	
  1509  0478  1283               	bcf	3,5	;RP0=0, select bank0
  1510  0479  1303               	bcf	3,6	;RP1=0, select bank0
  1511  047A  01AD               	clrf	_currentSSD
  1512  047B  01AE               	clrf	_currentSSD+1
  1513  047C                     l1196:	
  1514                           
  1515                           ;SSD.c: 87:     (((PORTD))=(SSD_LOT_ARR[Buffer[currentSSD]]));
  1516  047C  1283               	bcf	3,5	;RP0=0, select bank0
  1517  047D  1303               	bcf	3,6	;RP1=0, select bank0
  1518  047E  082D               	movf	_currentSSD,w
  1519  047F  3E29               	addlw	(low (_Buffer| 0))& (0+255)
  1520  0480  0084               	movwf	4
  1521  0481  1383               	bcf	3,7	;select IRP bank0
  1522  0482  0800               	movf	0,w
  1523  0483  3E2F               	addlw	(low (_SSD_LOT_ARR| 0))& (0+255)
  1524  0484  0084               	movwf	4
  1525  0485  0800               	movf	0,w
  1526  0486  0088               	movwf	8	;volatile
  1527  0487                     l1198:	
  1528                           
  1529                           ;SSD.c: 89:     SSD_Enable(currentSSD);
  1530  0487  082D               	movf	_currentSSD,w
  1531  0488  120A  118A  248E  120A  118A  	fcall	_SSD_Enable
  1532  048D                     l79:	
  1533  048D  0008               	return
  1534  048E                     __end_of_SSD_Update:	
  1535                           
  1536                           	psect	text6
  1537  048E                     __ptext6:	
  1538 ;; *************** function _SSD_Enable *****************
  1539 ;; Defined at:
  1540 ;;		line 113 in file "SSD.c"
  1541 ;; Parameters:    Size  Location     Type
  1542 ;;  s               1    wreg     enum E872
  1543 ;; Auto vars:     Size  Location     Type
  1544 ;;  s               1    2[COMMON] enum E872
  1545 ;; Return value:  Size  Location     Type
  1546 ;;                  1    wreg      void 
  1547 ;; Registers used:
  1548 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1549 ;; Tracked objects:
  1550 ;;		On entry : 0/0
  1551 ;;		On exit  : 0/0
  1552 ;;		Unchanged: 0/0
  1553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1554 ;;      Params:         0       0       0       0       0
  1555 ;;      Locals:         1       0       0       0       0
  1556 ;;      Temps:          2       0       0       0       0
  1557 ;;      Totals:         3       0       0       0       0
  1558 ;;Total ram usage:        3 bytes
  1559 ;; Hardware stack levels used:    1
  1560 ;; This function calls:
  1561 ;;		Nothing
  1562 ;; This function is called by:
  1563 ;;		_SSD_Update
  1564 ;; This function uses a non-reentrant model
  1565 ;;
  1566                           
  1567                           
  1568                           ;psect for function _SSD_Enable
  1569  048E                     _SSD_Enable:	
  1570                           
  1571                           ;incstack = 0
  1572                           ; Regs used in _SSD_Enable: [wreg-fsr0h+status,2+status,0]
  1573                           ;SSD_Enable@s stored from wreg
  1574  048E  00F2               	movwf	SSD_Enable@s
  1575  048F                     l1110:	
  1576                           
  1577                           ;SSD.c: 113: void SSD_Enable(SSD_t s);SSD.c: 114: {;SSD.c: 115:     switch(s)
  1578  048F  2CAC               	goto	l1120
  1579  0490                     l1112:	
  1580                           
  1581                           ;SSD.c: 118:             (((PORTB))=((PORTB) & ~(1<<(4)))|(SSD_ON<<(4)));
  1582  0490  1283               	bcf	3,5	;RP0=0, select bank0
  1583  0491  1303               	bcf	3,6	;RP1=0, select bank0
  1584  0492  0806               	movf	6,w	;volatile
  1585  0493  39EF               	andlw	239
  1586  0494  3810               	iorlw	16
  1587  0495  0086               	movwf	6	;volatile
  1588                           
  1589                           ;SSD.c: 119:             break;
  1590  0496  2CC2               	goto	l99
  1591  0497                     l1114:	
  1592                           
  1593                           ;SSD.c: 121:             (((PORTB))=((PORTB) & ~(1<<(5)))|(SSD_ON<<(5)));
  1594  0497  1283               	bcf	3,5	;RP0=0, select bank0
  1595  0498  1303               	bcf	3,6	;RP1=0, select bank0
  1596  0499  0806               	movf	6,w	;volatile
  1597  049A  39DF               	andlw	223
  1598  049B  3820               	iorlw	32
  1599  049C  0086               	movwf	6	;volatile
  1600                           
  1601                           ;SSD.c: 122:             break;
  1602  049D  2CC2               	goto	l99
  1603  049E                     l1116:	
  1604                           
  1605                           ;SSD.c: 124:             (((PORTB))=((PORTB) & ~(1<<(6)))|(SSD_ON<<(6)));
  1606  049E  1283               	bcf	3,5	;RP0=0, select bank0
  1607  049F  1303               	bcf	3,6	;RP1=0, select bank0
  1608  04A0  0806               	movf	6,w	;volatile
  1609  04A1  39BF               	andlw	191
  1610  04A2  3840               	iorlw	64
  1611  04A3  0086               	movwf	6	;volatile
  1612                           
  1613                           ;SSD.c: 125:             break;
  1614  04A4  2CC2               	goto	l99
  1615  04A5                     l1118:	
  1616                           
  1617                           ;SSD.c: 127:             (((PORTB))=((PORTB) & ~(1<<(7)))|(SSD_ON<<(7)));
  1618  04A5  1283               	bcf	3,5	;RP0=0, select bank0
  1619  04A6  1303               	bcf	3,6	;RP1=0, select bank0
  1620  04A7  0806               	movf	6,w	;volatile
  1621  04A8  397F               	andlw	127
  1622  04A9  3880               	iorlw	128
  1623  04AA  0086               	movwf	6	;volatile
  1624                           
  1625                           ;SSD.c: 128:             break;
  1626  04AB  2CC2               	goto	l99
  1627  04AC                     l1120:	
  1628  04AC  0872               	movf	SSD_Enable@s,w
  1629  04AD  00F0               	movwf	??_SSD_Enable
  1630  04AE  01F1               	clrf	??_SSD_Enable+1
  1631                           
  1632                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1633                           ; Switch size 1, requested type "simple"
  1634                           ; Number of cases is 1, Range of values is 0 to 0
  1635                           ; switch strategies available:
  1636                           ; Name         Instructions Cycles
  1637                           ; simple_byte            4     3 (average)
  1638                           ; direct_byte           11     8 (fixed)
  1639                           ; jumptable            260     6 (fixed)
  1640                           ;	Chosen strategy is simple_byte
  1641  04AF  0871               	movf	??_SSD_Enable+1,w
  1642  04B0  3A00               	xorlw	0	; case 0
  1643  04B1  1903               	skipnz
  1644  04B2  2CB4               	goto	l1354
  1645  04B3  2CC2               	goto	l99
  1646  04B4                     l1354:	
  1647                           
  1648                           ; Switch size 1, requested type "simple"
  1649                           ; Number of cases is 4, Range of values is 0 to 3
  1650                           ; switch strategies available:
  1651                           ; Name         Instructions Cycles
  1652                           ; simple_byte           13     7 (average)
  1653                           ; direct_byte           20     8 (fixed)
  1654                           ; jumptable            260     6 (fixed)
  1655                           ;	Chosen strategy is simple_byte
  1656  04B4  0870               	movf	??_SSD_Enable,w
  1657  04B5  3A00               	xorlw	0	; case 0
  1658  04B6  1903               	skipnz
  1659  04B7  2C90               	goto	l1112
  1660  04B8  3A01               	xorlw	1	; case 1
  1661  04B9  1903               	skipnz
  1662  04BA  2C97               	goto	l1114
  1663  04BB  3A03               	xorlw	3	; case 2
  1664  04BC  1903               	skipnz
  1665  04BD  2C9E               	goto	l1116
  1666  04BE  3A01               	xorlw	1	; case 3
  1667  04BF  1903               	skipnz
  1668  04C0  2CA5               	goto	l1118
  1669  04C1  2CC2               	goto	l99
  1670  04C2                     l99:	
  1671  04C2  0008               	return
  1672  04C3                     __end_of_SSD_Enable:	
  1673                           
  1674                           	psect	text7
  1675  042A                     __ptext7:	
  1676 ;; *************** function _SSD_Disable *****************
  1677 ;; Defined at:
  1678 ;;		line 92 in file "SSD.c"
  1679 ;; Parameters:    Size  Location     Type
  1680 ;;  s               1    wreg     enum E872
  1681 ;; Auto vars:     Size  Location     Type
  1682 ;;  s               1    2[COMMON] enum E872
  1683 ;; Return value:  Size  Location     Type
  1684 ;;                  1    wreg      void 
  1685 ;; Registers used:
  1686 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1687 ;; Tracked objects:
  1688 ;;		On entry : 0/0
  1689 ;;		On exit  : 0/0
  1690 ;;		Unchanged: 0/0
  1691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1692 ;;      Params:         0       0       0       0       0
  1693 ;;      Locals:         1       0       0       0       0
  1694 ;;      Temps:          2       0       0       0       0
  1695 ;;      Totals:         3       0       0       0       0
  1696 ;;Total ram usage:        3 bytes
  1697 ;; Hardware stack levels used:    1
  1698 ;; This function calls:
  1699 ;;		Nothing
  1700 ;; This function is called by:
  1701 ;;		_SSD_Update
  1702 ;; This function uses a non-reentrant model
  1703 ;;
  1704                           
  1705                           
  1706                           ;psect for function _SSD_Disable
  1707  042A                     _SSD_Disable:	
  1708                           
  1709                           ;incstack = 0
  1710                           ; Regs used in _SSD_Disable: [wreg-fsr0h+status,2+status,0]
  1711                           ;SSD_Disable@s stored from wreg
  1712  042A  00F2               	movwf	SSD_Disable@s
  1713  042B                     l1094:	
  1714                           
  1715                           ;SSD.c: 92: void SSD_Disable(SSD_t s);SSD.c: 93: {;SSD.c: 94:     switch(s)
  1716  042B  2C44               	goto	l1104
  1717  042C                     l1096:	
  1718                           
  1719                           ;SSD.c: 97:             (((PORTB))=((PORTB) & ~(1<<(4)))|(SSD_OFF<<(4)));
  1720  042C  1283               	bcf	3,5	;RP0=0, select bank0
  1721  042D  1303               	bcf	3,6	;RP1=0, select bank0
  1722  042E  0806               	movf	6,w	;volatile
  1723  042F  39EF               	andlw	239
  1724  0430  0086               	movwf	6	;volatile
  1725                           
  1726                           ;SSD.c: 98:             break;
  1727  0431  2C5A               	goto	l89
  1728  0432                     l1098:	
  1729                           
  1730                           ;SSD.c: 100:             (((PORTB))=((PORTB) & ~(1<<(5)))|(SSD_OFF<<(5)));
  1731  0432  1283               	bcf	3,5	;RP0=0, select bank0
  1732  0433  1303               	bcf	3,6	;RP1=0, select bank0
  1733  0434  0806               	movf	6,w	;volatile
  1734  0435  39DF               	andlw	223
  1735  0436  0086               	movwf	6	;volatile
  1736                           
  1737                           ;SSD.c: 101:             break;
  1738  0437  2C5A               	goto	l89
  1739  0438                     l1100:	
  1740                           
  1741                           ;SSD.c: 103:             (((PORTB))=((PORTB) & ~(1<<(6)))|(SSD_OFF<<(6)));
  1742  0438  1283               	bcf	3,5	;RP0=0, select bank0
  1743  0439  1303               	bcf	3,6	;RP1=0, select bank0
  1744  043A  0806               	movf	6,w	;volatile
  1745  043B  39BF               	andlw	191
  1746  043C  0086               	movwf	6	;volatile
  1747                           
  1748                           ;SSD.c: 104:             break;
  1749  043D  2C5A               	goto	l89
  1750  043E                     l1102:	
  1751                           
  1752                           ;SSD.c: 106:             (((PORTB))=((PORTB) & ~(1<<(7)))|(SSD_OFF<<(7)));
  1753  043E  1283               	bcf	3,5	;RP0=0, select bank0
  1754  043F  1303               	bcf	3,6	;RP1=0, select bank0
  1755  0440  0806               	movf	6,w	;volatile
  1756  0441  397F               	andlw	127
  1757  0442  0086               	movwf	6	;volatile
  1758                           
  1759                           ;SSD.c: 107:             break;
  1760  0443  2C5A               	goto	l89
  1761  0444                     l1104:	
  1762  0444  0872               	movf	SSD_Disable@s,w
  1763  0445  00F0               	movwf	??_SSD_Disable
  1764  0446  01F1               	clrf	??_SSD_Disable+1
  1765                           
  1766                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1767                           ; Switch size 1, requested type "simple"
  1768                           ; Number of cases is 1, Range of values is 0 to 0
  1769                           ; switch strategies available:
  1770                           ; Name         Instructions Cycles
  1771                           ; simple_byte            4     3 (average)
  1772                           ; direct_byte           11     8 (fixed)
  1773                           ; jumptable            260     6 (fixed)
  1774                           ;	Chosen strategy is simple_byte
  1775  0447  0871               	movf	??_SSD_Disable+1,w
  1776  0448  3A00               	xorlw	0	; case 0
  1777  0449  1903               	skipnz
  1778  044A  2C4C               	goto	l1356
  1779  044B  2C5A               	goto	l89
  1780  044C                     l1356:	
  1781                           
  1782                           ; Switch size 1, requested type "simple"
  1783                           ; Number of cases is 4, Range of values is 0 to 3
  1784                           ; switch strategies available:
  1785                           ; Name         Instructions Cycles
  1786                           ; simple_byte           13     7 (average)
  1787                           ; direct_byte           20     8 (fixed)
  1788                           ; jumptable            260     6 (fixed)
  1789                           ;	Chosen strategy is simple_byte
  1790  044C  0870               	movf	??_SSD_Disable,w
  1791  044D  3A00               	xorlw	0	; case 0
  1792  044E  1903               	skipnz
  1793  044F  2C2C               	goto	l1096
  1794  0450  3A01               	xorlw	1	; case 1
  1795  0451  1903               	skipnz
  1796  0452  2C32               	goto	l1098
  1797  0453  3A03               	xorlw	3	; case 2
  1798  0454  1903               	skipnz
  1799  0455  2C38               	goto	l1100
  1800  0456  3A01               	xorlw	1	; case 3
  1801  0457  1903               	skipnz
  1802  0458  2C3E               	goto	l1102
  1803  0459  2C5A               	goto	l89
  1804  045A                     l89:	
  1805  045A  0008               	return
  1806  045B                     __end_of_SSD_Disable:	
  1807                           
  1808                           	psect	text8
  1809  03D9                     __ptext8:	
  1810 ;; *************** function _SSD_Set_Symbol *****************
  1811 ;; Defined at:
  1812 ;;		line 72 in file "SSD.c"
  1813 ;; Parameters:    Size  Location     Type
  1814 ;;  symbol          1    wreg     enum E859
  1815 ;;  index           1    0[COMMON] enum E872
  1816 ;; Auto vars:     Size  Location     Type
  1817 ;;  symbol          1    2[COMMON] enum E859
  1818 ;; Return value:  Size  Location     Type
  1819 ;;                  1    wreg      void 
  1820 ;; Registers used:
  1821 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1822 ;; Tracked objects:
  1823 ;;		On entry : 0/0
  1824 ;;		On exit  : 0/0
  1825 ;;		Unchanged: 0/0
  1826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1827 ;;      Params:         1       0       0       0       0
  1828 ;;      Locals:         1       0       0       0       0
  1829 ;;      Temps:          1       0       0       0       0
  1830 ;;      Totals:         3       0       0       0       0
  1831 ;;Total ram usage:        3 bytes
  1832 ;; Hardware stack levels used:    1
  1833 ;; This function calls:
  1834 ;;		Nothing
  1835 ;; This function is called by:
  1836 ;;		_main
  1837 ;; This function uses a non-reentrant model
  1838 ;;
  1839                           
  1840                           
  1841                           ;psect for function _SSD_Set_Symbol
  1842  03D9                     _SSD_Set_Symbol:	
  1843                           
  1844                           ;incstack = 0
  1845                           ; Regs used in _SSD_Set_Symbol: [wreg-fsr0h+status,2+status,0]
  1846                           ;SSD_Set_Symbol@symbol stored from wreg
  1847  03D9  00F2               	movwf	SSD_Set_Symbol@symbol
  1848  03DA                     l1186:	
  1849                           
  1850                           ;SSD.c: 72: void SSD_Set_Symbol(SSD_Symbol_t symbol,SSD_t index);SSD.c: 73: {;SSD.c: 75:
      +                               Buffer[index] = symbol;
  1851  03DA  0872               	movf	SSD_Set_Symbol@symbol,w
  1852  03DB  00F1               	movwf	??_SSD_Set_Symbol
  1853  03DC  0870               	movf	SSD_Set_Symbol@index,w
  1854  03DD  3E29               	addlw	(low (_Buffer| 0))& (0+255)
  1855  03DE  0084               	movwf	4
  1856  03DF  0871               	movf	??_SSD_Set_Symbol,w
  1857  03E0  1383               	bcf	3,7	;select IRP bank0
  1858  03E1  0080               	movwf	0
  1859  03E2                     l75:	
  1860  03E2  0008               	return
  1861  03E3                     __end_of_SSD_Set_Symbol:	
  1862                           
  1863                           	psect	text9
  1864  05B0                     __ptext9:	
  1865 ;; *************** function _SSD_Init *****************
  1866 ;; Defined at:
  1867 ;;		line 50 in file "SSD.c"
  1868 ;; Parameters:    Size  Location     Type
  1869 ;;		None
  1870 ;; Auto vars:     Size  Location     Type
  1871 ;;  i               2    9[COMMON] int 
  1872 ;; Return value:  Size  Location     Type
  1873 ;;                  1    wreg      void 
  1874 ;; Registers used:
  1875 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1876 ;; Tracked objects:
  1877 ;;		On entry : 0/0
  1878 ;;		On exit  : 0/0
  1879 ;;		Unchanged: 0/0
  1880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1881 ;;      Params:         0       0       0       0       0
  1882 ;;      Locals:         2       0       0       0       0
  1883 ;;      Temps:          1       0       0       0       0
  1884 ;;      Totals:         3       0       0       0       0
  1885 ;;Total ram usage:        3 bytes
  1886 ;; Hardware stack levels used:    1
  1887 ;; Hardware stack levels required when called:    1
  1888 ;; This function calls:
  1889 ;;		_GPIO_Init_Pin
  1890 ;;		_GPIO_Init_Port
  1891 ;; This function is called by:
  1892 ;;		_main
  1893 ;; This function uses a non-reentrant model
  1894 ;;
  1895                           
  1896                           
  1897                           ;psect for function _SSD_Init
  1898  05B0                     _SSD_Init:	
  1899  05B0                     l1160:	
  1900                           ;incstack = 0
  1901                           ; Regs used in _SSD_Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1902                           
  1903                           
  1904                           ;SSD.c: 52:     int i = 0;
  1905  05B0  01F9               	clrf	SSD_Init@i
  1906  05B1  01FA               	clrf	SSD_Init@i+1
  1907  05B2                     l1162:	
  1908                           
  1909                           ;SSD.c: 54:     GPIO_Init_Port(&(TRISD),(0));
  1910  05B2  3088               	movlw	136
  1911  05B3  00F0               	movwf	GPIO_Init_Port@DirRegAddress
  1912  05B4  3000               	movlw	0
  1913  05B5  00F1               	movwf	GPIO_Init_Port@DirRegAddress+1
  1914  05B6  01F2               	clrf	GPIO_Init_Port@dir
  1915  05B7  120A  118A  2502  120A  118A  	fcall	_GPIO_Init_Port
  1916  05BC                     l1168:	
  1917                           
  1918                           ;SSD.c: 56:     {;SSD.c: 57:         Buffer[i] = SSD_NULL;
  1919  05BC  300A               	movlw	10
  1920  05BD  00F8               	movwf	??_SSD_Init
  1921  05BE  0879               	movf	SSD_Init@i,w
  1922  05BF  3E29               	addlw	(low (_Buffer| 0))& (0+255)
  1923  05C0  0084               	movwf	4
  1924  05C1  0878               	movf	??_SSD_Init,w
  1925  05C2  1383               	bcf	3,7	;select IRP bank0
  1926  05C3  0080               	movwf	0
  1927  05C4                     l1170:	
  1928                           
  1929                           ;SSD.c: 58:     }
  1930  05C4  3001               	movlw	1
  1931  05C5  07F9               	addwf	SSD_Init@i,f
  1932  05C6  1803               	skipnc
  1933  05C7  0AFA               	incf	SSD_Init@i+1,f
  1934  05C8  3000               	movlw	0
  1935  05C9  07FA               	addwf	SSD_Init@i+1,f
  1936  05CA                     l1172:	
  1937  05CA  087A               	movf	SSD_Init@i+1,w
  1938  05CB  3A80               	xorlw	128
  1939  05CC  00FF               	movwf	btemp+1
  1940  05CD  3080               	movlw	128
  1941  05CE  027F               	subwf	btemp+1,w
  1942  05CF  1D03               	skipz
  1943  05D0  2DD3               	goto	u515
  1944  05D1  3004               	movlw	4
  1945  05D2  0279               	subwf	SSD_Init@i,w
  1946  05D3                     u515:	
  1947  05D3  1C03               	skipc
  1948  05D4  2DD6               	goto	u511
  1949  05D5  2DD7               	goto	u510
  1950  05D6                     u511:	
  1951  05D6  2DBC               	goto	l1168
  1952  05D7                     u510:	
  1953  05D7                     l1174:	
  1954                           
  1955                           ;SSD.c: 60:     GPIO_Init_Pin(&(TRISB),(4),(0));
  1956  05D7  3086               	movlw	134
  1957  05D8  00F0               	movwf	GPIO_Init_Pin@DirRegAddress
  1958  05D9  3000               	movlw	0
  1959  05DA  00F1               	movwf	GPIO_Init_Pin@DirRegAddress+1
  1960  05DB  3004               	movlw	4
  1961  05DC  00F8               	movwf	??_SSD_Init
  1962  05DD  0878               	movf	??_SSD_Init,w
  1963  05DE  00F2               	movwf	GPIO_Init_Pin@pin_number
  1964  05DF  01F3               	clrf	GPIO_Init_Pin@dir
  1965  05E0  120A  118A  2552  120A  118A  	fcall	_GPIO_Init_Pin
  1966  05E5                     l1176:	
  1967                           
  1968                           ;SSD.c: 61:     (((PORTB))=((PORTB) & ~(1<<(4)))|(SSD_OFF<<(4)));
  1969  05E5  1283               	bcf	3,5	;RP0=0, select bank0
  1970  05E6  1303               	bcf	3,6	;RP1=0, select bank0
  1971  05E7  0806               	movf	6,w	;volatile
  1972  05E8  39EF               	andlw	239
  1973  05E9  0086               	movwf	6	;volatile
  1974  05EA                     l1178:	
  1975                           
  1976                           ;SSD.c: 63:     GPIO_Init_Pin(&(TRISB),(5),(0));
  1977  05EA  3086               	movlw	134
  1978  05EB  00F0               	movwf	GPIO_Init_Pin@DirRegAddress
  1979  05EC  3000               	movlw	0
  1980  05ED  00F1               	movwf	GPIO_Init_Pin@DirRegAddress+1
  1981  05EE  3005               	movlw	5
  1982  05EF  00F8               	movwf	??_SSD_Init
  1983  05F0  0878               	movf	??_SSD_Init,w
  1984  05F1  00F2               	movwf	GPIO_Init_Pin@pin_number
  1985  05F2  01F3               	clrf	GPIO_Init_Pin@dir
  1986  05F3  120A  118A  2552  120A  118A  	fcall	_GPIO_Init_Pin
  1987                           
  1988                           ;SSD.c: 64:     (((PORTB))=((PORTB) & ~(1<<(5)))|(SSD_OFF<<(5)));
  1989  05F8  1283               	bcf	3,5	;RP0=0, select bank0
  1990  05F9  1303               	bcf	3,6	;RP1=0, select bank0
  1991  05FA  0806               	movf	6,w	;volatile
  1992  05FB  39DF               	andlw	223
  1993  05FC  0086               	movwf	6	;volatile
  1994  05FD                     l1180:	
  1995                           
  1996                           ;SSD.c: 66:     GPIO_Init_Pin(&(TRISB),(6),(0));
  1997  05FD  3086               	movlw	134
  1998  05FE  00F0               	movwf	GPIO_Init_Pin@DirRegAddress
  1999  05FF  3000               	movlw	0
  2000  0600  00F1               	movwf	GPIO_Init_Pin@DirRegAddress+1
  2001  0601  3006               	movlw	6
  2002  0602  00F8               	movwf	??_SSD_Init
  2003  0603  0878               	movf	??_SSD_Init,w
  2004  0604  00F2               	movwf	GPIO_Init_Pin@pin_number
  2005  0605  01F3               	clrf	GPIO_Init_Pin@dir
  2006  0606  120A  118A  2552  120A  118A  	fcall	_GPIO_Init_Pin
  2007  060B                     l1182:	
  2008                           
  2009                           ;SSD.c: 67:     (((PORTB))=((PORTB) & ~(1<<(6)))|(SSD_OFF<<(6)));
  2010  060B  1283               	bcf	3,5	;RP0=0, select bank0
  2011  060C  1303               	bcf	3,6	;RP1=0, select bank0
  2012  060D  0806               	movf	6,w	;volatile
  2013  060E  39BF               	andlw	191
  2014  060F  0086               	movwf	6	;volatile
  2015                           
  2016                           ;SSD.c: 69:     GPIO_Init_Pin(&(TRISB),(7),(0));
  2017  0610  3086               	movlw	134
  2018  0611  00F0               	movwf	GPIO_Init_Pin@DirRegAddress
  2019  0612  3000               	movlw	0
  2020  0613  00F1               	movwf	GPIO_Init_Pin@DirRegAddress+1
  2021  0614  3007               	movlw	7
  2022  0615  00F8               	movwf	??_SSD_Init
  2023  0616  0878               	movf	??_SSD_Init,w
  2024  0617  00F2               	movwf	GPIO_Init_Pin@pin_number
  2025  0618  01F3               	clrf	GPIO_Init_Pin@dir
  2026  0619  120A  118A  2552  120A  118A  	fcall	_GPIO_Init_Pin
  2027  061E                     l1184:	
  2028                           
  2029                           ;SSD.c: 70:     (((PORTB))=((PORTB) & ~(1<<(7)))|(SSD_OFF<<(7)));
  2030  061E  1283               	bcf	3,5	;RP0=0, select bank0
  2031  061F  1303               	bcf	3,6	;RP1=0, select bank0
  2032  0620  0806               	movf	6,w	;volatile
  2033  0621  397F               	andlw	127
  2034  0622  0086               	movwf	6	;volatile
  2035  0623                     l72:	
  2036  0623  0008               	return
  2037  0624                     __end_of_SSD_Init:	
  2038                           
  2039                           	psect	text10
  2040  0502                     __ptext10:	
  2041 ;; *************** function _GPIO_Init_Port *****************
  2042 ;; Defined at:
  2043 ;;		line 14 in file "GPIO.c"
  2044 ;; Parameters:    Size  Location     Type
  2045 ;;  DirRegAddres    2    0[COMMON] PTR unsigned char 
  2046 ;;		 -> TRISD(1), 
  2047 ;;  dir             1    2[COMMON] unsigned char 
  2048 ;; Auto vars:     Size  Location     Type
  2049 ;;  ret             1    0        unsigned char 
  2050 ;; Return value:  Size  Location     Type
  2051 ;;                  1    wreg      unsigned char 
  2052 ;; Registers used:
  2053 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2054 ;; Tracked objects:
  2055 ;;		On entry : 0/0
  2056 ;;		On exit  : 0/0
  2057 ;;		Unchanged: 0/0
  2058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2059 ;;      Params:         3       0       0       0       0
  2060 ;;      Locals:         3       0       0       0       0
  2061 ;;      Temps:          1       0       0       0       0
  2062 ;;      Totals:         7       0       0       0       0
  2063 ;;Total ram usage:        7 bytes
  2064 ;; Hardware stack levels used:    1
  2065 ;; This function calls:
  2066 ;;		Nothing
  2067 ;; This function is called by:
  2068 ;;		_SSD_Init
  2069 ;; This function uses a non-reentrant model
  2070 ;;
  2071                           
  2072                           
  2073                           ;psect for function _GPIO_Init_Port
  2074  0502                     _GPIO_Init_Port:	
  2075  0502                     l1052:	
  2076                           ;incstack = 0
  2077                           ; Regs used in _GPIO_Init_Port: [wreg-fsr0h+status,2+status,0]
  2078                           
  2079  0502                     l1054:	
  2080                           
  2081                           ;GPIO.c: 18:     if(*DirRegAddress != (TRISA) && *DirRegAddress != (TRISB) &&
  2082  0502  0870               	movf	GPIO_Init_Port@DirRegAddress,w
  2083  0503  0084               	movwf	4
  2084  0504  1783               	bsf	3,7
  2085  0505  1C71               	btfss	GPIO_Init_Port@DirRegAddress+1,0
  2086  0506  1383               	bcf	3,7
  2087  0507  0800               	movf	0,w
  2088  0508  1683               	bsf	3,5	;RP0=1, select bank1
  2089  0509  1303               	bcf	3,6	;RP1=0, select bank1
  2090  050A  0605               	xorwf	5,w	;volatile
  2091  050B  1903               	skipnz
  2092  050C  2D0E               	goto	u301
  2093  050D  2D0F               	goto	u300
  2094  050E                     u301:	
  2095  050E  2D3C               	goto	l1066
  2096  050F                     u300:	
  2097  050F                     l1056:	
  2098  050F  0870               	movf	GPIO_Init_Port@DirRegAddress,w
  2099  0510  0084               	movwf	4
  2100  0511  1783               	bsf	3,7
  2101  0512  1C71               	btfss	GPIO_Init_Port@DirRegAddress+1,0
  2102  0513  1383               	bcf	3,7
  2103  0514  0800               	movf	0,w
  2104  0515  0606               	xorwf	6,w	;volatile
  2105  0516  1903               	skipnz
  2106  0517  2D19               	goto	u311
  2107  0518  2D1A               	goto	u310
  2108  0519                     u311:	
  2109  0519  2D3C               	goto	l1066
  2110  051A                     u310:	
  2111  051A                     l1058:	
  2112  051A  0870               	movf	GPIO_Init_Port@DirRegAddress,w
  2113  051B  0084               	movwf	4
  2114  051C  1783               	bsf	3,7
  2115  051D  1C71               	btfss	GPIO_Init_Port@DirRegAddress+1,0
  2116  051E  1383               	bcf	3,7
  2117  051F  0800               	movf	0,w
  2118  0520  0607               	xorwf	7,w	;volatile
  2119  0521  1903               	skipnz
  2120  0522  2D24               	goto	u321
  2121  0523  2D25               	goto	u320
  2122  0524                     u321:	
  2123  0524  2D3C               	goto	l1066
  2124  0525                     u320:	
  2125  0525                     l1060:	
  2126  0525  0870               	movf	GPIO_Init_Port@DirRegAddress,w
  2127  0526  0084               	movwf	4
  2128  0527  1783               	bsf	3,7
  2129  0528  1C71               	btfss	GPIO_Init_Port@DirRegAddress+1,0
  2130  0529  1383               	bcf	3,7
  2131  052A  0800               	movf	0,w
  2132  052B  0608               	xorwf	8,w	;volatile
  2133  052C  1903               	skipnz
  2134  052D  2D2F               	goto	u331
  2135  052E  2D30               	goto	u330
  2136  052F                     u331:	
  2137  052F  2D3C               	goto	l1066
  2138  0530                     u330:	
  2139  0530                     l1062:	
  2140  0530  0870               	movf	GPIO_Init_Port@DirRegAddress,w
  2141  0531  0084               	movwf	4
  2142  0532  1783               	bsf	3,7
  2143  0533  1C71               	btfss	GPIO_Init_Port@DirRegAddress+1,0
  2144  0534  1383               	bcf	3,7
  2145  0535  0800               	movf	0,w
  2146  0536  0609               	xorwf	9,w	;volatile
  2147  0537  1903               	skipnz
  2148  0538  2D3A               	goto	u341
  2149  0539  2D3B               	goto	u340
  2150  053A                     u341:	
  2151  053A  2D3C               	goto	l1066
  2152  053B                     u340:	
  2153  053B                     l1064:	
  2154                           
  2155                           ;GPIO.c: 24:     }
  2156  053B  2D51               	goto	l19
  2157  053C                     l1066:	
  2158                           
  2159                           ;GPIO.c: 26:     {;GPIO.c: 27:         ((*DirRegAddress)=(dir)?(~0):(0));
  2160  053C  0872               	movf	GPIO_Init_Port@dir,w
  2161  053D  1D03               	btfss	3,2
  2162  053E  2D40               	goto	u351
  2163  053F  2D41               	goto	u350
  2164  0540                     u351:	
  2165  0540  2D44               	goto	l1070
  2166  0541                     u350:	
  2167  0541                     l1068:	
  2168  0541  01F5               	clrf	_GPIO_Init_Port$31
  2169  0542  01F6               	clrf	_GPIO_Init_Port$31+1
  2170  0543  2D48               	goto	l1072
  2171  0544                     l1070:	
  2172  0544  30FF               	movlw	255
  2173  0545  00F5               	movwf	_GPIO_Init_Port$31
  2174  0546  30FF               	movlw	255
  2175  0547  00F6               	movwf	_GPIO_Init_Port$31+1
  2176  0548                     l1072:	
  2177  0548  0875               	movf	_GPIO_Init_Port$31,w
  2178  0549  00F3               	movwf	??_GPIO_Init_Port
  2179  054A  0870               	movf	GPIO_Init_Port@DirRegAddress,w
  2180  054B  0084               	movwf	4
  2181  054C  1783               	bsf	3,7
  2182  054D  1C71               	btfss	GPIO_Init_Port@DirRegAddress+1,0
  2183  054E  1383               	bcf	3,7
  2184  054F  0873               	movf	??_GPIO_Init_Port,w
  2185  0550  0080               	movwf	0
  2186  0551                     l19:	
  2187  0551  0008               	return
  2188  0552                     __end_of_GPIO_Init_Port:	
  2189                           
  2190                           	psect	text11
  2191  0552                     __ptext11:	
  2192 ;; *************** function _GPIO_Init_Pin *****************
  2193 ;; Defined at:
  2194 ;;		line 34 in file "GPIO.c"
  2195 ;; Parameters:    Size  Location     Type
  2196 ;;  DirRegAddres    2    0[COMMON] PTR unsigned char 
  2197 ;;		 -> RAM(512), TRISB(1), 
  2198 ;;  pin_number      1    2[COMMON] unsigned char 
  2199 ;;  dir             1    3[COMMON] unsigned char 
  2200 ;; Auto vars:     Size  Location     Type
  2201 ;;  ret             1    0        unsigned char 
  2202 ;; Return value:  Size  Location     Type
  2203 ;;                  1    wreg      unsigned char 
  2204 ;; Registers used:
  2205 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2206 ;; Tracked objects:
  2207 ;;		On entry : 0/0
  2208 ;;		On exit  : 0/0
  2209 ;;		Unchanged: 0/0
  2210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2211 ;;      Params:         4       0       0       0       0
  2212 ;;      Locals:         1       0       0       0       0
  2213 ;;      Temps:          3       0       0       0       0
  2214 ;;      Totals:         8       0       0       0       0
  2215 ;;Total ram usage:        8 bytes
  2216 ;; Hardware stack levels used:    1
  2217 ;; This function calls:
  2218 ;;		Nothing
  2219 ;; This function is called by:
  2220 ;;		_SSD_Init
  2221 ;;		_SW_Init
  2222 ;; This function uses a non-reentrant model
  2223 ;;
  2224                           
  2225                           
  2226                           ;psect for function _GPIO_Init_Pin
  2227  0552                     _GPIO_Init_Pin:	
  2228  0552                     l1076:	
  2229                           ;incstack = 0
  2230                           ; Regs used in _GPIO_Init_Pin: [wreg-fsr0h+status,2+status,0]
  2231                           
  2232  0552                     l1078:	
  2233                           
  2234                           ;GPIO.c: 38:     if(*DirRegAddress != (TRISA) && *DirRegAddress != (TRISB) &&
  2235  0552  0870               	movf	GPIO_Init_Pin@DirRegAddress,w
  2236  0553  0084               	movwf	4
  2237  0554  1783               	bsf	3,7
  2238  0555  1C71               	btfss	GPIO_Init_Pin@DirRegAddress+1,0
  2239  0556  1383               	bcf	3,7
  2240  0557  0800               	movf	0,w
  2241  0558  1683               	bsf	3,5	;RP0=1, select bank1
  2242  0559  1303               	bcf	3,6	;RP1=0, select bank1
  2243  055A  0605               	xorwf	5,w	;volatile
  2244  055B  1903               	skipnz
  2245  055C  2D5E               	goto	u361
  2246  055D  2D5F               	goto	u360
  2247  055E                     u361:	
  2248  055E  2D8C               	goto	l1090
  2249  055F                     u360:	
  2250  055F                     l1080:	
  2251  055F  0870               	movf	GPIO_Init_Pin@DirRegAddress,w
  2252  0560  0084               	movwf	4
  2253  0561  1783               	bsf	3,7
  2254  0562  1C71               	btfss	GPIO_Init_Pin@DirRegAddress+1,0
  2255  0563  1383               	bcf	3,7
  2256  0564  0800               	movf	0,w
  2257  0565  0606               	xorwf	6,w	;volatile
  2258  0566  1903               	skipnz
  2259  0567  2D69               	goto	u371
  2260  0568  2D6A               	goto	u370
  2261  0569                     u371:	
  2262  0569  2D8C               	goto	l1090
  2263  056A                     u370:	
  2264  056A                     l1082:	
  2265  056A  0870               	movf	GPIO_Init_Pin@DirRegAddress,w
  2266  056B  0084               	movwf	4
  2267  056C  1783               	bsf	3,7
  2268  056D  1C71               	btfss	GPIO_Init_Pin@DirRegAddress+1,0
  2269  056E  1383               	bcf	3,7
  2270  056F  0800               	movf	0,w
  2271  0570  0607               	xorwf	7,w	;volatile
  2272  0571  1903               	skipnz
  2273  0572  2D74               	goto	u381
  2274  0573  2D75               	goto	u380
  2275  0574                     u381:	
  2276  0574  2D8C               	goto	l1090
  2277  0575                     u380:	
  2278  0575                     l1084:	
  2279  0575  0870               	movf	GPIO_Init_Pin@DirRegAddress,w
  2280  0576  0084               	movwf	4
  2281  0577  1783               	bsf	3,7
  2282  0578  1C71               	btfss	GPIO_Init_Pin@DirRegAddress+1,0
  2283  0579  1383               	bcf	3,7
  2284  057A  0800               	movf	0,w
  2285  057B  0608               	xorwf	8,w	;volatile
  2286  057C  1903               	skipnz
  2287  057D  2D7F               	goto	u391
  2288  057E  2D80               	goto	u390
  2289  057F                     u391:	
  2290  057F  2D8C               	goto	l1090
  2291  0580                     u390:	
  2292  0580                     l1086:	
  2293  0580  0870               	movf	GPIO_Init_Pin@DirRegAddress,w
  2294  0581  0084               	movwf	4
  2295  0582  1783               	bsf	3,7
  2296  0583  1C71               	btfss	GPIO_Init_Pin@DirRegAddress+1,0
  2297  0584  1383               	bcf	3,7
  2298  0585  0800               	movf	0,w
  2299  0586  0609               	xorwf	9,w	;volatile
  2300  0587  1903               	skipnz
  2301  0588  2D8A               	goto	u401
  2302  0589  2D8B               	goto	u400
  2303  058A                     u401:	
  2304  058A  2D8C               	goto	l1090
  2305  058B                     u400:	
  2306  058B                     l1088:	
  2307                           
  2308                           ;GPIO.c: 44:     }
  2309  058B  2DAF               	goto	l24
  2310  058C                     l1090:	
  2311                           
  2312                           ;GPIO.c: 46:     {;GPIO.c: 47:         ((*DirRegAddress)=(*DirRegAddress & ~(1<<pin_numb
      +                          er))|(dir<<pin_number));
  2313  058C  0873               	movf	GPIO_Init_Pin@dir,w
  2314  058D  00F4               	movwf	??_GPIO_Init_Pin
  2315  058E  0A72               	incf	GPIO_Init_Pin@pin_number,w
  2316  058F  2D92               	goto	u414
  2317  0590                     u415:	
  2318  0590  1003               	clrc
  2319  0591  0DF4               	rlf	??_GPIO_Init_Pin,f
  2320  0592                     u414:	
  2321  0592  3EFF               	addlw	-1
  2322  0593  1D03               	skipz
  2323  0594  2D90               	goto	u415
  2324  0595  0870               	movf	GPIO_Init_Pin@DirRegAddress,w
  2325  0596  0084               	movwf	4
  2326  0597  1783               	bsf	3,7
  2327  0598  1C71               	btfss	GPIO_Init_Pin@DirRegAddress+1,0
  2328  0599  1383               	bcf	3,7
  2329  059A  3001               	movlw	1
  2330  059B  00F5               	movwf	??_GPIO_Init_Pin+1
  2331  059C  0A72               	incf	GPIO_Init_Pin@pin_number,w
  2332  059D  2DA0               	goto	u424
  2333  059E                     u425:	
  2334  059E  1003               	clrc
  2335  059F  0DF5               	rlf	??_GPIO_Init_Pin+1,f
  2336  05A0                     u424:	
  2337  05A0  3EFF               	addlw	-1
  2338  05A1  1D03               	skipz
  2339  05A2  2D9E               	goto	u425
  2340  05A3  0875               	movf	??_GPIO_Init_Pin+1,w
  2341  05A4  3AFF               	xorlw	255
  2342  05A5  0500               	andwf	0,w
  2343  05A6  0474               	iorwf	??_GPIO_Init_Pin,w
  2344  05A7  00F6               	movwf	??_GPIO_Init_Pin+2
  2345  05A8  0870               	movf	GPIO_Init_Pin@DirRegAddress,w
  2346  05A9  0084               	movwf	4
  2347  05AA  1783               	bsf	3,7
  2348  05AB  1C71               	btfss	GPIO_Init_Pin@DirRegAddress+1,0
  2349  05AC  1383               	bcf	3,7
  2350  05AD  0876               	movf	??_GPIO_Init_Pin+2,w
  2351  05AE  0080               	movwf	0
  2352  05AF                     l24:	
  2353  05AF  0008               	return
  2354  05B0                     __end_of_GPIO_Init_Pin:	
  2355  007E                     btemp	set	126	;btemp
  2356  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        11
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      1      27
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    GPIO_Init_Pin@DirRegAddress	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), TRISB(SFR1[1]), 

    GPIO_Init_Port@DirRegAddress	PTR unsigned char  size(2) Largest target is 1
		 -> TRISD(SFR1[1]), 


Critical Paths under _main in COMMON

    _main->_SSD_Init
    _SW_Update->_SW_UpdateState
    _SW_UpdateState->___bmul
    _SW_GetState->___bmul
    _SSD_Update->_SSD_Disable
    _SSD_Update->_SSD_Enable
    _SSD_Init->_GPIO_Init_Pin

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    3652
                                             11 COMMON     3     3      0
                                              0 BANK0      1     1      0
                           _SSD_Init
                     _SSD_Set_Symbol
                         _SSD_Update
                        _SW_GetState
                          _SW_Update
 ---------------------------------------------------------------------------------
 (1) _SW_Update                                            2     2      0     742
                                              8 COMMON     2     2      0
                     _SW_UpdateState
 ---------------------------------------------------------------------------------
 (2) _SW_UpdateState                                       4     4      0     742
                                              4 COMMON     4     4      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) _SW_GetState                                          4     4      0     502
                                              4 COMMON     4     4      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     456
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _SSD_Update                                           0     0      0      44
                        _SSD_Disable
                         _SSD_Enable
 ---------------------------------------------------------------------------------
 (2) _SSD_Enable                                           3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _SSD_Disable                                          3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _SSD_Set_Symbol                                       3     2      1     500
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (1) _SSD_Init                                             3     3      0    1774
                                              8 COMMON     3     3      0
                      _GPIO_Init_Pin
                     _GPIO_Init_Port
 ---------------------------------------------------------------------------------
 (2) _GPIO_Init_Port                                       7     4      3     338
                                              0 COMMON     7     4      3
 ---------------------------------------------------------------------------------
 (2) _GPIO_Init_Pin                                        8     4      4    1368
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SSD_Init
     _GPIO_Init_Pin
     _GPIO_Init_Port
   _SSD_Set_Symbol
   _SSD_Update
     _SSD_Disable
     _SSD_Enable
   _SW_GetState
     ___bmul
   _SW_Update
     _SW_UpdateState
       ___bmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      1      1B       5       33.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      29      12        0.0%
ABS                  0      0      29       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Jan 06 18:03:17 2020

                          pc 0002                   _SSD_Update 045B               ___bmul@product 0072  
                __CFG_CP$OFF 0000          __end_of_SW_GetState 0415                           l24 05AF  
                         l19 0551                           l72 0623                           l75 03E2  
                         l79 048D                           l89 045A                           l99 04C2  
                         fsr 0004                          l115 0414                          l132 07DE  
                        l118 0501                          l244 0429                          u300 050F  
                        u301 050E                          u310 051A                          u311 0519  
                        u400 058B                          u320 0525                          u401 058A  
                        u321 0524                          u330 0530                          u331 052F  
                        u340 053B                          u500 07A9                          u341 053A  
                        u501 07A8                          u414 0592                          u350 0541  
                        u510 05D7                          u430 06FA                          u415 0590  
                        u351 0540                          u511 05D6                          u431 06F9  
                        u424 05A0                          u360 055F                          u520 0478  
                        u280 041B                          u440 070C                          u425 059E  
                        u361 055E                          u521 0477                          u281 041A  
                        u441 070B                          u370 056A                          u290 0428  
                        u450 072D                 __CFG_CPD$OFF 0000                          u371 0569  
                        u515 05D3                          u291 0427                          u451 072C  
                        u380 0575                          u460 073F                          u540 06D0  
                        u381 0574                          u525 0474                          u461 073E  
                        u541 06CF                          u390 0580                          u470 0761  
                        u391 057F                          u471 0760                          u535 04F1  
                        u607 06BB                          u480 0773                          u481 0772  
                        u490 0797                          u491 0796                          u557 065A  
                        u567 067A                          u577 068C                          u587 069E  
                        u597 06B0                          fsr0 0004                          indf 0000  
               __CFG_FOSC$HS 0000                 __CFG_LVP$OFF 0000                         l1100 0438  
                       l1102 043E                         l1110 048F                         l1104 0444  
                       l1112 0490                         l1120 04AC                         l1040 0417  
                       l1200 04C3                         l1114 0497                         l1042 041B  
                       l1130 06FA                         l1210 04E2                         l1202 04C9  
                       l1060 0525                         l1052 0502                         l1116 049E  
                       l1044 041F                         l1220 0402                         l1140 074F  
                       l1132 070C                         l1212 04E8                         l1204 04CE  
                       l1070 0544                         l1062 0530                         l1054 0502  
                       l1118 04A5                         l1046 0421                         l1038 0416  
                       l1222 0413                         l1150 07A9                         l1142 0761  
                       l1134 071B                         l1126 06E7                         l1214 04EE  
                       l1206 04D4                         l1230 062C                         l1080 055F  
                       l1072 0548                         l1064 053B                         l1056 050F  
                       l1160 05B0                         l1048 0428                         l1144 0773  
                       l1136 072D                         l1128 06E8                         l1216 04FB  
                       l1208 04DA                         l1240 0654                         l1232 0633  
                       l1082 056A                         l1090 058C                         l1058 051A  
                       l1066 053C                         l1170 05C4                         l1162 05B2  
                       l1218 0402                         l1146 0785                         l1138 073F  
                       l1154 07BB                         l1250 0681                         l1242 0661  
                       l1234 063B                         l1226 0624                         l1084 0575  
                       l1076 0552                         l1068 0541                         l1180 05FD  
                       l1172 05CA                         l1148 0797                         l1260 06AA  
                       l1252 0686                         l1244 0666                         l1236 0645  
                       l1228 0627                         l1086 0580                         l1078 0552  
                       l1182 060B                         l1174 05D7                         l1094 042B  
                       l1190 0463                         l1270 06DD                         l1262 06B7  
                       l1254 0693                         l1246 066D                         l1238 064F  
                       l1088 058B                         l1184 061E                         l1176 05E5  
                       l1168 05BC                         l1096 042C                         l1192 046B  
                       l1352 07D0                         l1264 06C0                         l1256 0698  
                       l1248 0674                         l1178 05EA                         l1186 03DA  
                       l1098 0432                         l1354 04B4                         l1194 0478  
                       l1266 06C5                         l1258 06A5                         l1356 044C  
                       l1196 047C                         l1188 045B                         l1268 06D0  
                       l1198 0487                 __CFG_WRT$OFF 0000                         _main 0624  
                       btemp 007E                         start 0000            ___bmul@multiplier 0073  
              _GPIO_Init_Pin 0552               _SSD_Set_Symbol 03D9                        ?_main 0070  
              __CFG_WDTE$OFF 0000                        _PORTB 0006                        _PORTD 0008  
                      _TRISA 0085                        _TRISB 0086                        _TRISC 0087  
                      _TRISD 0088                        _TRISE 0089            _GPIO_Init_Port$31 0075  
                      main@i 003A             __end_of_SSD_Init 0624               __CFG_BOREN$OFF 0000  
                      pclath 000A                        status 0003                        wtemp0 007E  
               SSD_Disable@s 0072      __size_of_SW_UpdateState 00F9                  _SW_GetState 0401  
                ?_SSD_Enable 0070               ?_GPIO_Init_Pin 0070              __initialization 07DF  
               __end_of_main 06E6       __end_of_SSD_Set_Symbol 03E3               _GPIO_Init_Port 0502  
                ?_SSD_Update 0070                       ??_main 007B           __size_of_SW_Update 003F  
GPIO_Init_Port@DirRegAddress 0070   GPIO_Init_Pin@DirRegAddress 0070                       _Buffer 0029  
             __CFG_PWRTE$OFF 0000       __end_of_GPIO_Init_Port 0552                       ___bmul 0415  
            ?_SSD_Set_Symbol 0070          __size_of_SSD_Enable 0035          __size_of_SSD_Update 0033  
    __end_of__initialization 07FC              ??_GPIO_Init_Pin 0074             GPIO_Init_Pin@dir 0073  
          __end_of_SW_Update 0502                 ?_SSD_Disable 0070          ___bmul@multiplicand 0070  
            ?_GPIO_Init_Port 0070               __pcstackCOMMON 0070                 __pidataBANK0 03E3  
                  ?_SSD_Init 0070                SW_GetState@sw 0076                   __pbssBANK0 0020  
             _SW_UpdateState 06E6                   __pmaintext 0624                      ?___bmul 0070  
                 ??_SSD_Init 0078       __end_of_SW_UpdateState 07DF                      _SW_DATA 0020  
        SSD_Set_Symbol@index 0070                    SSD_Init@i 0079                 ?_SW_GetState 0070  
               ??_SSD_Enable 0070              __size_of___bmul 0015                 ??_SSD_Update 0073  
                 _currentSSD 002D                      __ptext1 04C3                      __ptext2 06E6  
                    __ptext3 0401                      __ptext4 0415                      __ptext5 045B  
                    __ptext6 048E                      __ptext7 042A                      __ptext8 03D9  
                    __ptext9 05B0           __end_of_SSD_Enable 04C3         end_of_initialization 07FC  
            ?_SW_UpdateState 0070           __end_of_SSD_Update 048E             ??_SSD_Set_Symbol 0071  
       __size_of_SSD_Disable 0031      GPIO_Init_Pin@pin_number 0072             ??_GPIO_Init_Port 0073  
          GPIO_Init_Port@dir 0072                    _SW_Update 04C3               __end_of___bmul 042A  
                SSD_Enable@s 0072            __size_of_SSD_Init 0074          start_initialization 07DF  
      __end_of_GPIO_Init_Pin 05B0               SW_GetState@ret 0077                     ??___bmul 0071  
       __size_of_SW_GetState 0014                   init_fetch0 03EE                   ?_SW_Update 0070  
                __pdataBANK0 002F                    ___latbits 0002                __pcstackBANK0 003A  
           ??_SW_UpdateState 0074             SW_UpdateState@sw 0077                  ??_SW_Update 0078  
                   _SSD_Init 05B0         SSD_Set_Symbol@symbol 0072                ??_SSD_Disable 0070  
                   __ptext10 0502                     __ptext11 0552                __size_of_main 00C2  
        __end_of_SSD_Disable 045B      __size_of_SSD_Set_Symbol 000A                     init_ram0 03F2  
              ??_SW_GetState 0074      __size_of_GPIO_Init_Port 0050       __size_of_GPIO_Init_Pin 005E  
                _SSD_LOT_ARR 002F                  _SSD_Disable 042A                   _SSD_Enable 048E  
