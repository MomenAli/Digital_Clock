Version 4.0 HI-TECH Software Intermediate Code
"65 ./SSD.h
[; ;./SSD.h: 65: void SSD_Init(void);
[v _SSD_Init `(v ~T0 @X0 0 ef ]
"54 Disp.c
[; ;Disp.c: 54:     SSD_Set_Symbol(SSD_0,SSD_MINUTES_UNITS);
[c E850 0 1 2 3 4 5 6 7 8 9 10 .. ]
[n E850 . SSD_0 SSD_1 SSD_2 SSD_3 SSD_4 SSD_5 SSD_6 SSD_7 SSD_8 SSD_9 SSD_NULL  ]
[c E863 0 1 2 3 .. ]
[n E863 . SSD_MINUTES_UNITS SSD_MINUTES_TENS SSD_HOURS_UNITS SSD_HOURS_TENS  ]
"66 ./SSD.h
[; ;./SSD.h: 66: void SSD_Set_Symbol(SSD_Symbol_t symbol,SSD_t index);
[v _SSD_Set_Symbol `(v ~T0 @X0 0 ef2`E850`E863 ]
"26 Disp.c
[; ;Disp.c: 26: void DISP_Normal_Operation(void);
[v _DISP_Normal_Operation `(v ~T0 @X0 0 ef ]
"30
[; ;Disp.c: 30: void DISP_Set_Hours_Operation(void);
[v _DISP_Set_Hours_Operation `(v ~T0 @X0 0 ef ]
"34
[; ;Disp.c: 34: void DISP_Set_Minutes_Operation(void);
[v _DISP_Set_Minutes_Operation `(v ~T0 @X0 0 ef ]
"89
[; ;Disp.c: 89:     }
[c E889 0 1 2 .. ]
[n E889 . CL_NORMAL CL_SET_HOURS CL_SET_MINUTES  ]
"48 ./Clock.h
[; ;./Clock.h: 48: Mode_t CLOCK_GetMode(void);
[v _CLOCK_GetMode `(E889 ~T0 @X0 0 ef ]
"21
[; ;./Clock.h: 21: {
[s S95 `uc 1 `uc 1 `uc 1 `ui 1 ]
[n S95 . hours minuts seconds mSeconds ]
"52
[; ;./Clock.h: 52: void CLOCK_GetTime(Time_t * t);
[v _CLOCK_GetTime `(v ~T0 @X0 0 ef1`*S95 ]
"68 ./SSD.h
[; ;./SSD.h: 68: void SSD_Toggle_Second_Dot(void);
[v _SSD_Toggle_Second_Dot `(v ~T0 @X0 0 ef ]
"54 C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 54: __asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
"61
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 61: __asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
"68
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 68: __asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
"75
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 75: __asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
"161
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 161: __asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
"168
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 168: __asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
"218
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 218: __asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
"280
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 280: __asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
"342
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 342: __asm("PORTD equ 08h");
[; <" PORTD equ 08h ;# ">
"404
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 404: __asm("PORTE equ 09h");
[; <" PORTE equ 09h ;# ">
"436
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 436: __asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
"456
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 456: __asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
"534
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 534: __asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
"596
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 596: __asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
"636
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 636: __asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
"643
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 643: __asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
"650
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 650: __asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
"657
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 657: __asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
"732
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 732: __asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
"739
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 739: __asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
"810
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 810: __asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
"817
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 817: __asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
"887
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 887: __asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
"894
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 894: __asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
"901
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 901: __asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
"908
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 908: __asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
"966
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 966: __asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
"1061
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1061: __asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
"1068
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1068: __asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
"1075
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1075: __asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
"1082
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1082: __asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
"1089
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1089: __asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
"1096
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1096: __asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
"1154
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1154: __asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
"1161
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1161: __asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
"1257
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1257: __asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
"1327
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1327: __asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
"1377
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1377: __asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
"1439
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1439: __asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
"1501
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1501: __asm("TRISD equ 088h");
[; <" TRISD equ 088h ;# ">
"1563
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1563: __asm("TRISE equ 089h");
[; <" TRISE equ 089h ;# ">
"1620
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1620: __asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
"1682
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1682: __asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
"1722
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1722: __asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
"1756
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1756: __asm("SSPCON2 equ 091h");
[; <" SSPCON2 equ 091h ;# ">
"1818
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1818: __asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
"1825
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1825: __asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
"1832
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1832: __asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
"2001
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2001: __asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
"2082
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2082: __asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
"2089
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2089: __asm("CMCON equ 09Ch");
[; <" CMCON equ 09Ch ;# ">
"2159
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2159: __asm("CVRCON equ 09Dh");
[; <" CVRCON equ 09Dh ;# ">
"2224
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2224: __asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
"2231
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2231: __asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
"2290
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2290: __asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
"2297
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2297: __asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
"2304
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2304: __asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
"2311
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2311: __asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
"2318
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2318: __asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
"2363
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2363: __asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
"39 ./HW.h
[p x FOSC = HS ]
"40
[p x WDTE = OFF ]
"41
[p x PWRTE = OFF ]
"42
[p x BOREN = OFF ]
"43
[p x LVP = OFF ]
"44
[p x CPD = OFF ]
"45
[p x WRT = OFF ]
"46
[p x CP = OFF ]
"21 Disp.c
[; ;Disp.c: 21: static u8_t Disp_Blink_counter;
[v _Disp_Blink_counter `uc ~T0 @X0 1 s ]
"49
[; ;Disp.c: 49: void Disp_Init(void)
[v _Disp_Init `(v ~T0 @X0 1 ef ]
"50
[; ;Disp.c: 50: {
{
[e :U _Disp_Init ]
[f ]
"52
[; ;Disp.c: 52:     SSD_Init();
[e ( _SSD_Init ..  ]
"54
[; ;Disp.c: 54:     SSD_Set_Symbol(SSD_0,SSD_MINUTES_UNITS);
[e ( _SSD_Set_Symbol (2 , . `E850 0 . `E863 0 ]
"55
[; ;Disp.c: 55:     SSD_Set_Symbol(SSD_0,SSD_MINUTES_TENS);
[e ( _SSD_Set_Symbol (2 , . `E850 0 . `E863 1 ]
"56
[; ;Disp.c: 56:     SSD_Set_Symbol(SSD_0,SSD_HOURS_UNITS);
[e ( _SSD_Set_Symbol (2 , . `E850 0 . `E863 2 ]
"57
[; ;Disp.c: 57:     SSD_Set_Symbol(SSD_0,SSD_HOURS_TENS);
[e ( _SSD_Set_Symbol (2 , . `E850 0 . `E863 3 ]
"59
[; ;Disp.c: 59:     Disp_Blink_counter = 0;
[e = _Disp_Blink_counter -> -> 0 `i `uc ]
"60
[; ;Disp.c: 60: }
[e :UE 96 ]
}
"61
[; ;Disp.c: 61: void Disp_Update(void)
[v _Disp_Update `(v ~T0 @X0 1 ef ]
"62
[; ;Disp.c: 62: {
{
[e :U _Disp_Update ]
[f ]
"66
[; ;Disp.c: 66:     static u8_t DISP_Time_Counter = 0;
[v F910 `uc ~T0 @X0 1 s DISP_Time_Counter ]
[i F910
-> -> 0 `i `uc
]
"67
[; ;Disp.c: 67:     DISP_Time_Counter += (5);
[e =+ F910 -> -> 5 `i `uc ]
"69
[; ;Disp.c: 69:     if(DISP_Time_Counter != (20))
[e $ ! != -> F910 `i -> 20 `i 98  ]
"70
[; ;Disp.c: 70:     {
{
"71
[; ;Disp.c: 71:         return;
[e $UE 97  ]
"72
[; ;Disp.c: 72:     }
}
[e :U 98 ]
"73
[; ;Disp.c: 73:     DISP_Time_Counter = 0;
[e = F910 -> -> 0 `i `uc ]
"75
[; ;Disp.c: 75:     switch(CLOCK_GetMode())
[e $U 100  ]
"76
[; ;Disp.c: 76:     {
{
"77
[; ;Disp.c: 77:         case CL_NORMAL:
[e :U 101 ]
"79
[; ;Disp.c: 79:             DISP_Normal_Operation();
[e ( _DISP_Normal_Operation ..  ]
"80
[; ;Disp.c: 80:             break;
[e $U 99  ]
"81
[; ;Disp.c: 81:         case CL_SET_HOURS:
[e :U 102 ]
"83
[; ;Disp.c: 83:             DISP_Set_Hours_Operation();
[e ( _DISP_Set_Hours_Operation ..  ]
"84
[; ;Disp.c: 84:             break;
[e $U 99  ]
"85
[; ;Disp.c: 85:         case CL_SET_MINUTES:
[e :U 103 ]
"87
[; ;Disp.c: 87:             DISP_Set_Minutes_Operation();
[e ( _DISP_Set_Minutes_Operation ..  ]
"88
[; ;Disp.c: 88:             break;
[e $U 99  ]
"89
[; ;Disp.c: 89:     }
}
[e $U 99  ]
[e :U 100 ]
[e [\ -> ( _CLOCK_GetMode ..  `ui , $ -> . `E889 0 `ui 101
 , $ -> . `E889 1 `ui 102
 , $ -> . `E889 2 `ui 103
 99 ]
[e :U 99 ]
"90
[; ;Disp.c: 90: }
[e :UE 97 ]
}
"98
[; ;Disp.c: 98: void DISP_Normal_Operation(void)
[v _DISP_Normal_Operation `(v ~T0 @X0 1 ef ]
"99
[; ;Disp.c: 99: {
{
[e :U _DISP_Normal_Operation ]
[f ]
"101
[; ;Disp.c: 101:     Time_t tt;
[v _tt `S95 ~T0 @X0 1 a ]
"102
[; ;Disp.c: 102:     CLOCK_GetTime(&tt);
[e ( _CLOCK_GetTime (1 &U _tt ]
"105
[; ;Disp.c: 105:     SSD_Set_Symbol(tt.hours/10,SSD_HOURS_TENS);
[e ( _SSD_Set_Symbol (2 , -> / -> . _tt 0 `i -> 10 `i `E850 . `E863 3 ]
"106
[; ;Disp.c: 106:     SSD_Set_Symbol(tt.hours%10,SSD_HOURS_UNITS);
[e ( _SSD_Set_Symbol (2 , -> % -> . _tt 0 `i -> 10 `i `E850 . `E863 2 ]
"108
[; ;Disp.c: 108:     SSD_Set_Symbol(tt.minuts/10,SSD_MINUTES_TENS);
[e ( _SSD_Set_Symbol (2 , -> / -> . _tt 1 `i -> 10 `i `E850 . `E863 1 ]
"109
[; ;Disp.c: 109:     SSD_Set_Symbol(tt.minuts%10,SSD_MINUTES_UNITS);
[e ( _SSD_Set_Symbol (2 , -> % -> . _tt 1 `i -> 10 `i `E850 . `E863 0 ]
"110
[; ;Disp.c: 110:     Disp_Blink_counter++;
[e ++ _Disp_Blink_counter -> -> 1 `i `uc ]
"111
[; ;Disp.c: 111:     if(Disp_Blink_counter>= 25)
[e $ ! >= -> _Disp_Blink_counter `i -> 25 `i 105  ]
"112
[; ;Disp.c: 112:     {
{
"113
[; ;Disp.c: 113:         SSD_Toggle_Second_Dot();
[e ( _SSD_Toggle_Second_Dot ..  ]
"114
[; ;Disp.c: 114:         Disp_Blink_counter = 0;
[e = _Disp_Blink_counter -> -> 0 `i `uc ]
"115
[; ;Disp.c: 115:     }
}
[e :U 105 ]
"123
[; ;Disp.c: 123: }
[e :UE 104 ]
}
"127
[; ;Disp.c: 127: void DISP_Set_Hours_Operation(void)
[v _DISP_Set_Hours_Operation `(v ~T0 @X0 1 ef ]
"128
[; ;Disp.c: 128: {
{
[e :U _DISP_Set_Hours_Operation ]
[f ]
"131
[; ;Disp.c: 131:     Time_t tt;
[v _tt `S95 ~T0 @X0 1 a ]
"132
[; ;Disp.c: 132:     CLOCK_GetTime(&tt);
[e ( _CLOCK_GetTime (1 &U _tt ]
"134
[; ;Disp.c: 134:     SSD_Set_Symbol(tt.minuts/10,SSD_MINUTES_TENS);
[e ( _SSD_Set_Symbol (2 , -> / -> . _tt 1 `i -> 10 `i `E850 . `E863 1 ]
"135
[; ;Disp.c: 135:     SSD_Set_Symbol(tt.minuts%10,SSD_MINUTES_UNITS);
[e ( _SSD_Set_Symbol (2 , -> % -> . _tt 1 `i -> 10 `i `E850 . `E863 0 ]
"136
[; ;Disp.c: 136:     if(Disp_Blink_counter < 25)
[e $ ! < -> _Disp_Blink_counter `i -> 25 `i 107  ]
"137
[; ;Disp.c: 137:     {
{
"139
[; ;Disp.c: 139:         SSD_Set_Symbol(tt.hours/10,SSD_HOURS_TENS);
[e ( _SSD_Set_Symbol (2 , -> / -> . _tt 0 `i -> 10 `i `E850 . `E863 3 ]
"140
[; ;Disp.c: 140:         SSD_Set_Symbol(tt.hours%10,SSD_HOURS_UNITS);
[e ( _SSD_Set_Symbol (2 , -> % -> . _tt 0 `i -> 10 `i `E850 . `E863 2 ]
"141
[; ;Disp.c: 141:     }
}
[e :U 107 ]
"142
[; ;Disp.c: 142:     if(Disp_Blink_counter>25)
[e $ ! > -> _Disp_Blink_counter `i -> 25 `i 108  ]
"143
[; ;Disp.c: 143:     {
{
"145
[; ;Disp.c: 145:         SSD_Set_Symbol(SSD_NULL,SSD_HOURS_TENS);
[e ( _SSD_Set_Symbol (2 , . `E850 10 . `E863 3 ]
"146
[; ;Disp.c: 146:         SSD_Set_Symbol(SSD_NULL,SSD_HOURS_UNITS);
[e ( _SSD_Set_Symbol (2 , . `E850 10 . `E863 2 ]
"147
[; ;Disp.c: 147:     }
}
[e :U 108 ]
"148
[; ;Disp.c: 148:     if(Disp_Blink_counter>=50)
[e $ ! >= -> _Disp_Blink_counter `i -> 50 `i 109  ]
"149
[; ;Disp.c: 149:     {
{
"151
[; ;Disp.c: 151:         Disp_Blink_counter = 0;
[e = _Disp_Blink_counter -> -> 0 `i `uc ]
"152
[; ;Disp.c: 152:     }
}
[e :U 109 ]
"153
[; ;Disp.c: 153: }
[e :UE 106 ]
}
"157
[; ;Disp.c: 157: void DISP_Set_Minutes_Operation(void)
[v _DISP_Set_Minutes_Operation `(v ~T0 @X0 1 ef ]
"158
[; ;Disp.c: 158: {
{
[e :U _DISP_Set_Minutes_Operation ]
[f ]
"161
[; ;Disp.c: 161:     Time_t tt;
[v _tt `S95 ~T0 @X0 1 a ]
"162
[; ;Disp.c: 162:     CLOCK_GetTime(&tt);
[e ( _CLOCK_GetTime (1 &U _tt ]
"165
[; ;Disp.c: 165:     SSD_Set_Symbol(tt.hours/10,SSD_HOURS_TENS);
[e ( _SSD_Set_Symbol (2 , -> / -> . _tt 0 `i -> 10 `i `E850 . `E863 3 ]
"166
[; ;Disp.c: 166:     SSD_Set_Symbol(tt.hours%10,SSD_HOURS_UNITS);
[e ( _SSD_Set_Symbol (2 , -> % -> . _tt 0 `i -> 10 `i `E850 . `E863 2 ]
"174
[; ;Disp.c: 174:     if(Disp_Blink_counter < 25)
[e $ ! < -> _Disp_Blink_counter `i -> 25 `i 111  ]
"175
[; ;Disp.c: 175:     {
{
"177
[; ;Disp.c: 177:         SSD_Set_Symbol(tt.minuts/10,SSD_MINUTES_TENS);
[e ( _SSD_Set_Symbol (2 , -> / -> . _tt 1 `i -> 10 `i `E850 . `E863 1 ]
"178
[; ;Disp.c: 178:         SSD_Set_Symbol(tt.minuts%10,SSD_MINUTES_UNITS);
[e ( _SSD_Set_Symbol (2 , -> % -> . _tt 1 `i -> 10 `i `E850 . `E863 0 ]
"179
[; ;Disp.c: 179:     }
}
[e :U 111 ]
"180
[; ;Disp.c: 180:     if(Disp_Blink_counter>25)
[e $ ! > -> _Disp_Blink_counter `i -> 25 `i 112  ]
"181
[; ;Disp.c: 181:     {
{
"183
[; ;Disp.c: 183:         SSD_Set_Symbol(SSD_NULL,SSD_MINUTES_TENS);
[e ( _SSD_Set_Symbol (2 , . `E850 10 . `E863 1 ]
"184
[; ;Disp.c: 184:         SSD_Set_Symbol(SSD_NULL,SSD_MINUTES_UNITS);
[e ( _SSD_Set_Symbol (2 , . `E850 10 . `E863 0 ]
"185
[; ;Disp.c: 185:     }
}
[e :U 112 ]
"186
[; ;Disp.c: 186:     if(Disp_Blink_counter>=50)
[e $ ! >= -> _Disp_Blink_counter `i -> 50 `i 113  ]
"187
[; ;Disp.c: 187:     {
{
"189
[; ;Disp.c: 189:         Disp_Blink_counter = 0;
[e = _Disp_Blink_counter -> -> 0 `i `uc ]
"190
[; ;Disp.c: 190:     }
}
[e :U 113 ]
"191
[; ;Disp.c: 191: }
[e :UE 110 ]
}
