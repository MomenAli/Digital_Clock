Version 4.0 HI-TECH Software Intermediate Code
"43 SW.c
[; ;SW.c: 43: {
[s S95 `uc -> 2 `i `uc 1 ]
[n S95 . samples state ]
"63 ./GPIO.h
[; ;./GPIO.h: 63: u8_t GPIO_Init_Pin(u8_t * DirRegAddress ,u8_t pin_number,u8_t dir );
[v _GPIO_Init_Pin `(uc ~T0 @X0 0 ef3`*uc`uc`uc ]
"1375 C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1375: extern volatile unsigned char TRISB __attribute__((address(0x086)));
[v _TRISB `Vuc ~T0 @X0 0 e@134 ]
"60 SW.c
[; ;SW.c: 60:     SW_DATA[SW_PLUS].state = SW_RELEASED;
[c E859 0 1 2 .. ]
[n E859 . SW_PLUS SW_MINUS SW_SET  ]
[c E864 0 1 2 3 .. ]
[n E864 . SW_RELEASED SW_PRE_PRESSED SW_PRESSED SW_PRE_RELEASED  ]
"216 C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 216: extern volatile unsigned char PORTB __attribute__((address(0x006)));
[v _PORTB `Vuc ~T0 @X0 0 e@6 ]
"22 SW.c
[; ;SW.c: 22: void SW_UpdateState(SW_t sw);
[v _SW_UpdateState `(v ~T0 @X0 0 ef1`E859 ]
"54 C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 54: __asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
"61
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 61: __asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
"68
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 68: __asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
"75
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 75: __asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
"161
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 161: __asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
"168
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 168: __asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
"218
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 218: __asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
"280
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 280: __asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
"342
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 342: __asm("PORTD equ 08h");
[; <" PORTD equ 08h ;# ">
"404
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 404: __asm("PORTE equ 09h");
[; <" PORTE equ 09h ;# ">
"436
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 436: __asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
"456
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 456: __asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
"534
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 534: __asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
"596
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 596: __asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
"636
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 636: __asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
"643
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 643: __asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
"650
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 650: __asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
"657
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 657: __asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
"732
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 732: __asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
"739
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 739: __asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
"810
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 810: __asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
"817
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 817: __asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
"887
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 887: __asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
"894
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 894: __asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
"901
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 901: __asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
"908
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 908: __asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
"966
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 966: __asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
"1061
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1061: __asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
"1068
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1068: __asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
"1075
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1075: __asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
"1082
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1082: __asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
"1089
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1089: __asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
"1096
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1096: __asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
"1154
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1154: __asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
"1161
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1161: __asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
"1257
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1257: __asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
"1327
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1327: __asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
"1377
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1377: __asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
"1439
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1439: __asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
"1501
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1501: __asm("TRISD equ 088h");
[; <" TRISD equ 088h ;# ">
"1563
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1563: __asm("TRISE equ 089h");
[; <" TRISE equ 089h ;# ">
"1620
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1620: __asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
"1682
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1682: __asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
"1722
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1722: __asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
"1756
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1756: __asm("SSPCON2 equ 091h");
[; <" SSPCON2 equ 091h ;# ">
"1818
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1818: __asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
"1825
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1825: __asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
"1832
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1832: __asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
"2001
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2001: __asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
"2082
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2082: __asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
"2089
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2089: __asm("CMCON equ 09Ch");
[; <" CMCON equ 09Ch ;# ">
"2159
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2159: __asm("CVRCON equ 09Dh");
[; <" CVRCON equ 09Dh ;# ">
"2224
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2224: __asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
"2231
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2231: __asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
"2290
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2290: __asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
"2297
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2297: __asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
"2304
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2304: __asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
"2311
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2311: __asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
"2318
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2318: __asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
"2363
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2363: __asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
"39 ./HW.h
[p x FOSC = HS ]
"40
[p x WDTE = OFF ]
"41
[p x PWRTE = OFF ]
"42
[p x BOREN = OFF ]
"43
[p x LVP = OFF ]
"44
[p x CPD = OFF ]
"45
[p x WRT = OFF ]
"46
[p x CP = OFF ]
"51 SW.c
[; ;SW.c: 51:  static SW_DATA_t SW_DATA[(3)];
[v _SW_DATA `S95 ~T0 @X0 -> 3 `i s ]
"55
[; ;SW.c: 55: void SW_Init(void)
[v _SW_Init `(v ~T0 @X0 1 ef ]
"56
[; ;SW.c: 56: {
{
[e :U _SW_Init ]
[f ]
"59
[; ;SW.c: 59:     GPIO_Init_Pin(&(TRISB),(0),(1));
[e ( _GPIO_Init_Pin (3 , , -> &U _TRISB `*uc -> -> 0 `i `uc -> -> 1 `i `uc ]
"60
[; ;SW.c: 60:     SW_DATA[SW_PLUS].state = SW_RELEASED;
[e = . *U + &U _SW_DATA * -> . `E859 0 `ux -> -> # *U &U _SW_DATA `ui `ux 1 -> . `E864 0 `uc ]
"61
[; ;SW.c: 61:     SW_DATA[SW_PLUS].samples[0] = (1);
[e = *U + &U . *U + &U _SW_DATA * -> . `E859 0 `ux -> -> # *U &U _SW_DATA `ui `ux 0 * -> -> -> 0 `i `ui `ux -> -> # *U &U . *U + &U _SW_DATA * -> . `E859 0 `ux -> -> # *U &U _SW_DATA `ui `ux 0 `ui `ux -> -> 1 `i `uc ]
"62
[; ;SW.c: 62:     SW_DATA[SW_PLUS].samples[1] = (1);
[e = *U + &U . *U + &U _SW_DATA * -> . `E859 0 `ux -> -> # *U &U _SW_DATA `ui `ux 0 * -> -> -> 1 `i `ui `ux -> -> # *U &U . *U + &U _SW_DATA * -> . `E859 0 `ux -> -> # *U &U _SW_DATA `ui `ux 0 `ui `ux -> -> 1 `i `uc ]
"64
[; ;SW.c: 64:     GPIO_Init_Pin(&(TRISB),(1),(1));
[e ( _GPIO_Init_Pin (3 , , -> &U _TRISB `*uc -> -> 1 `i `uc -> -> 1 `i `uc ]
"65
[; ;SW.c: 65:     SW_DATA[SW_MINUS].state = SW_RELEASED;
[e = . *U + &U _SW_DATA * -> . `E859 1 `ux -> -> # *U &U _SW_DATA `ui `ux 1 -> . `E864 0 `uc ]
"66
[; ;SW.c: 66:     SW_DATA[SW_MINUS].samples[0] = (1);
[e = *U + &U . *U + &U _SW_DATA * -> . `E859 1 `ux -> -> # *U &U _SW_DATA `ui `ux 0 * -> -> -> 0 `i `ui `ux -> -> # *U &U . *U + &U _SW_DATA * -> . `E859 1 `ux -> -> # *U &U _SW_DATA `ui `ux 0 `ui `ux -> -> 1 `i `uc ]
"67
[; ;SW.c: 67:     SW_DATA[SW_MINUS].samples[1] = (1);
[e = *U + &U . *U + &U _SW_DATA * -> . `E859 1 `ux -> -> # *U &U _SW_DATA `ui `ux 0 * -> -> -> 1 `i `ui `ux -> -> # *U &U . *U + &U _SW_DATA * -> . `E859 1 `ux -> -> # *U &U _SW_DATA `ui `ux 0 `ui `ux -> -> 1 `i `uc ]
"69
[; ;SW.c: 69:     GPIO_Init_Pin(&(TRISB),(2),(1));
[e ( _GPIO_Init_Pin (3 , , -> &U _TRISB `*uc -> -> 2 `i `uc -> -> 1 `i `uc ]
"70
[; ;SW.c: 70:     SW_DATA[SW_SET].state = SW_RELEASED;
[e = . *U + &U _SW_DATA * -> . `E859 2 `ux -> -> # *U &U _SW_DATA `ui `ux 1 -> . `E864 0 `uc ]
"71
[; ;SW.c: 71:     SW_DATA[SW_SET].samples[0] = (1);
[e = *U + &U . *U + &U _SW_DATA * -> . `E859 2 `ux -> -> # *U &U _SW_DATA `ui `ux 0 * -> -> -> 0 `i `ui `ux -> -> # *U &U . *U + &U _SW_DATA * -> . `E859 2 `ux -> -> # *U &U _SW_DATA `ui `ux 0 `ui `ux -> -> 1 `i `uc ]
"72
[; ;SW.c: 72:     SW_DATA[SW_SET].samples[1] = (1);
[e = *U + &U . *U + &U _SW_DATA * -> . `E859 2 `ux -> -> # *U &U _SW_DATA `ui `ux 0 * -> -> -> 1 `i `ui `ux -> -> # *U &U . *U + &U _SW_DATA * -> . `E859 2 `ux -> -> # *U &U _SW_DATA `ui `ux 0 `ui `ux -> -> 1 `i `uc ]
"74
[; ;SW.c: 74: }
[e :UE 96 ]
}
"75
[; ;SW.c: 75: u8_t SW_GetState(SW_t sw)
[v _SW_GetState `(uc ~T0 @X0 1 ef1`E859 ]
"76
[; ;SW.c: 76: {
{
[e :U _SW_GetState ]
"75
[; ;SW.c: 75: u8_t SW_GetState(SW_t sw)
[v _sw `E859 ~T0 @X0 1 r1 ]
"76
[; ;SW.c: 76: {
[f ]
"77
[; ;SW.c: 77:     u8_t ret =0;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"80
[; ;SW.c: 80:     ret = SW_DATA[sw].state;
[e = _ret . *U + &U _SW_DATA * -> _sw `ux -> -> # *U &U _SW_DATA `ui `ux 1 ]
"82
[; ;SW.c: 82:     return ret;
[e ) _ret ]
[e $UE 97  ]
"83
[; ;SW.c: 83: }
[e :UE 97 ]
}
"85
[; ;SW.c: 85: void SW_Update(void)
[v _SW_Update `(v ~T0 @X0 1 ef ]
"87
[; ;SW.c: 87: {
{
[e :U _SW_Update ]
[f ]
"91
[; ;SW.c: 91:     static u8_t SW_Time_Counter = 15;
[v F890 `uc ~T0 @X0 1 s SW_Time_Counter ]
[i F890
-> -> 15 `i `uc
]
"92
[; ;SW.c: 92:     SW_Time_Counter += (5);
[e =+ F890 -> -> 5 `i `uc ]
"94
[; ;SW.c: 94:     if(SW_Time_Counter != (20))
[e $ ! != -> F890 `i -> 20 `i 99  ]
"95
[; ;SW.c: 95:     {
{
"96
[; ;SW.c: 96:         return;
[e $UE 98  ]
"97
[; ;SW.c: 97:     }
}
[e :U 99 ]
"98
[; ;SW.c: 98:     SW_Time_Counter = 0;
[e = F890 -> -> 0 `i `uc ]
"100
[; ;SW.c: 100:     SW_DATA[SW_PLUS].samples[0] = SW_DATA[SW_PLUS].samples[1];
[e = *U + &U . *U + &U _SW_DATA * -> . `E859 0 `ux -> -> # *U &U _SW_DATA `ui `ux 0 * -> -> -> 0 `i `ui `ux -> -> # *U &U . *U + &U _SW_DATA * -> . `E859 0 `ux -> -> # *U &U _SW_DATA `ui `ux 0 `ui `ux *U + &U . *U + &U _SW_DATA * -> . `E859 0 `ux -> -> # *U &U _SW_DATA `ui `ux 0 * -> -> -> 1 `i `ui `ux -> -> # *U &U . *U + &U _SW_DATA * -> . `E859 0 `ux -> -> # *U &U _SW_DATA `ui `ux 0 `ui `ux ]
"101
[; ;SW.c: 101:     SW_DATA[SW_PLUS].samples[1] = (((PORTB) >> (0))& 1);
[e = *U + &U . *U + &U _SW_DATA * -> . `E859 0 `ux -> -> # *U &U _SW_DATA `ui `ux 0 * -> -> -> 1 `i `ui `ux -> -> # *U &U . *U + &U _SW_DATA * -> . `E859 0 `ux -> -> # *U &U _SW_DATA `ui `ux 0 `ui `ux -> & >> -> _PORTB `i -> 0 `i -> 1 `i `uc ]
"103
[; ;SW.c: 103:     SW_UpdateState(SW_PLUS);
[e ( _SW_UpdateState (1 . `E859 0 ]
"105
[; ;SW.c: 105:     SW_DATA[SW_MINUS].samples[0] = SW_DATA[SW_MINUS].samples[1];
[e = *U + &U . *U + &U _SW_DATA * -> . `E859 1 `ux -> -> # *U &U _SW_DATA `ui `ux 0 * -> -> -> 0 `i `ui `ux -> -> # *U &U . *U + &U _SW_DATA * -> . `E859 1 `ux -> -> # *U &U _SW_DATA `ui `ux 0 `ui `ux *U + &U . *U + &U _SW_DATA * -> . `E859 1 `ux -> -> # *U &U _SW_DATA `ui `ux 0 * -> -> -> 1 `i `ui `ux -> -> # *U &U . *U + &U _SW_DATA * -> . `E859 1 `ux -> -> # *U &U _SW_DATA `ui `ux 0 `ui `ux ]
"106
[; ;SW.c: 106:     SW_DATA[SW_MINUS].samples[1] = (((PORTB) >> (1))& 1);
[e = *U + &U . *U + &U _SW_DATA * -> . `E859 1 `ux -> -> # *U &U _SW_DATA `ui `ux 0 * -> -> -> 1 `i `ui `ux -> -> # *U &U . *U + &U _SW_DATA * -> . `E859 1 `ux -> -> # *U &U _SW_DATA `ui `ux 0 `ui `ux -> & >> -> _PORTB `i -> 1 `i -> 1 `i `uc ]
"108
[; ;SW.c: 108:     SW_UpdateState(SW_MINUS);
[e ( _SW_UpdateState (1 . `E859 1 ]
"111
[; ;SW.c: 111:     SW_DATA[SW_SET].samples[0] = SW_DATA[SW_SET].samples[1];
[e = *U + &U . *U + &U _SW_DATA * -> . `E859 2 `ux -> -> # *U &U _SW_DATA `ui `ux 0 * -> -> -> 0 `i `ui `ux -> -> # *U &U . *U + &U _SW_DATA * -> . `E859 2 `ux -> -> # *U &U _SW_DATA `ui `ux 0 `ui `ux *U + &U . *U + &U _SW_DATA * -> . `E859 2 `ux -> -> # *U &U _SW_DATA `ui `ux 0 * -> -> -> 1 `i `ui `ux -> -> # *U &U . *U + &U _SW_DATA * -> . `E859 2 `ux -> -> # *U &U _SW_DATA `ui `ux 0 `ui `ux ]
"112
[; ;SW.c: 112:     SW_DATA[SW_SET].samples[1] = (((PORTB) >> (2))& 1);
[e = *U + &U . *U + &U _SW_DATA * -> . `E859 2 `ux -> -> # *U &U _SW_DATA `ui `ux 0 * -> -> -> 1 `i `ui `ux -> -> # *U &U . *U + &U _SW_DATA * -> . `E859 2 `ux -> -> # *U &U _SW_DATA `ui `ux 0 `ui `ux -> & >> -> _PORTB `i -> 2 `i -> 1 `i `uc ]
"114
[; ;SW.c: 114:     SW_UpdateState(SW_SET);
[e ( _SW_UpdateState (1 . `E859 2 ]
"115
[; ;SW.c: 115:     if(SW_DATA[SW_SET].state == SW_PRE_PRESSED )
[e $ ! == -> . *U + &U _SW_DATA * -> . `E859 2 `ux -> -> # *U &U _SW_DATA `ui `ux 1 `i -> . `E864 1 `i 100  ]
"116
[; ;SW.c: 116:         (((PORTB))=((PORTB) ^(1<<(3))));
[e = _PORTB -> ^ -> _PORTB `i << -> 1 `i -> 3 `i `uc ]
[e :U 100 ]
"117
[; ;SW.c: 117: }
[e :UE 98 ]
}
"119
[; ;SW.c: 119: void SW_UpdateState(SW_t sw)
[v _SW_UpdateState `(v ~T0 @X0 1 ef1`E859 ]
"120
[; ;SW.c: 120: {
{
[e :U _SW_UpdateState ]
"119
[; ;SW.c: 119: void SW_UpdateState(SW_t sw)
[v _sw `E859 ~T0 @X0 1 r1 ]
"120
[; ;SW.c: 120: {
[f ]
"136
[; ;SW.c: 136:     switch(SW_DATA[sw].state)
[e $U 103  ]
"137
[; ;SW.c: 137:     {
{
"139
[; ;SW.c: 139:         case SW_PRE_RELEASED:
[e :U 104 ]
"140
[; ;SW.c: 140:             if(SW_DATA[sw].samples[0] == (1) && SW_DATA[sw].samples[1] == (1))
[e $ ! && == -> *U + &U . *U + &U _SW_DATA * -> _sw `ux -> -> # *U &U _SW_DATA `ui `ux 0 * -> -> -> 0 `i `ui `ux -> -> # *U &U . *U + &U _SW_DATA * -> _sw `ux -> -> # *U &U _SW_DATA `ui `ux 0 `ui `ux `i -> 1 `i == -> *U + &U . *U + &U _SW_DATA * -> _sw `ux -> -> # *U &U _SW_DATA `ui `ux 0 * -> -> -> 1 `i `ui `ux -> -> # *U &U . *U + &U _SW_DATA * -> _sw `ux -> -> # *U &U _SW_DATA `ui `ux 0 `ui `ux `i -> 1 `i 105  ]
"141
[; ;SW.c: 141:                 SW_DATA[sw].state = SW_RELEASED;
[e = . *U + &U _SW_DATA * -> _sw `ux -> -> # *U &U _SW_DATA `ui `ux 1 -> . `E864 0 `uc ]
[e :U 105 ]
"142
[; ;SW.c: 142:             break;
[e $U 102  ]
"143
[; ;SW.c: 143:         case SW_RELEASED:
[e :U 106 ]
"144
[; ;SW.c: 144:             if(SW_DATA[sw].samples[0] == (0) && SW_DATA[sw].samples[1] == (0))
[e $ ! && == -> *U + &U . *U + &U _SW_DATA * -> _sw `ux -> -> # *U &U _SW_DATA `ui `ux 0 * -> -> -> 0 `i `ui `ux -> -> # *U &U . *U + &U _SW_DATA * -> _sw `ux -> -> # *U &U _SW_DATA `ui `ux 0 `ui `ux `i -> 0 `i == -> *U + &U . *U + &U _SW_DATA * -> _sw `ux -> -> # *U &U _SW_DATA `ui `ux 0 * -> -> -> 1 `i `ui `ux -> -> # *U &U . *U + &U _SW_DATA * -> _sw `ux -> -> # *U &U _SW_DATA `ui `ux 0 `ui `ux `i -> 0 `i 107  ]
"145
[; ;SW.c: 145:                 SW_DATA[sw].state = SW_PRE_PRESSED;
[e = . *U + &U _SW_DATA * -> _sw `ux -> -> # *U &U _SW_DATA `ui `ux 1 -> . `E864 1 `uc ]
[e :U 107 ]
"146
[; ;SW.c: 146:             break;
[e $U 102  ]
"147
[; ;SW.c: 147:         case SW_PRE_PRESSED:
[e :U 108 ]
"148
[; ;SW.c: 148:             if(SW_DATA[sw].samples[0] == (0) && SW_DATA[sw].samples[1] == (0))
[e $ ! && == -> *U + &U . *U + &U _SW_DATA * -> _sw `ux -> -> # *U &U _SW_DATA `ui `ux 0 * -> -> -> 0 `i `ui `ux -> -> # *U &U . *U + &U _SW_DATA * -> _sw `ux -> -> # *U &U _SW_DATA `ui `ux 0 `ui `ux `i -> 0 `i == -> *U + &U . *U + &U _SW_DATA * -> _sw `ux -> -> # *U &U _SW_DATA `ui `ux 0 * -> -> -> 1 `i `ui `ux -> -> # *U &U . *U + &U _SW_DATA * -> _sw `ux -> -> # *U &U _SW_DATA `ui `ux 0 `ui `ux `i -> 0 `i 109  ]
"149
[; ;SW.c: 149:                 SW_DATA[sw].state = SW_PRESSED;
[e = . *U + &U _SW_DATA * -> _sw `ux -> -> # *U &U _SW_DATA `ui `ux 1 -> . `E864 2 `uc ]
[e :U 109 ]
"150
[; ;SW.c: 150:             break;
[e $U 102  ]
"151
[; ;SW.c: 151:         case SW_PRESSED:
[e :U 110 ]
"152
[; ;SW.c: 152:             if(SW_DATA[sw].samples[0] == (1) && SW_DATA[sw].samples[1] == (1))
[e $ ! && == -> *U + &U . *U + &U _SW_DATA * -> _sw `ux -> -> # *U &U _SW_DATA `ui `ux 0 * -> -> -> 0 `i `ui `ux -> -> # *U &U . *U + &U _SW_DATA * -> _sw `ux -> -> # *U &U _SW_DATA `ui `ux 0 `ui `ux `i -> 1 `i == -> *U + &U . *U + &U _SW_DATA * -> _sw `ux -> -> # *U &U _SW_DATA `ui `ux 0 * -> -> -> 1 `i `ui `ux -> -> # *U &U . *U + &U _SW_DATA * -> _sw `ux -> -> # *U &U _SW_DATA `ui `ux 0 `ui `ux `i -> 1 `i 111  ]
"153
[; ;SW.c: 153:                 SW_DATA[sw].state = SW_PRE_RELEASED;
[e = . *U + &U _SW_DATA * -> _sw `ux -> -> # *U &U _SW_DATA `ui `ux 1 -> . `E864 3 `uc ]
[e :U 111 ]
"154
[; ;SW.c: 154:             break;
[e $U 102  ]
"155
[; ;SW.c: 155:         default:
[e :U 112 ]
"157
[; ;SW.c: 157:             break;
[e $U 102  ]
"158
[; ;SW.c: 158:     }
}
[e $U 102  ]
[e :U 103 ]
[e [\ -> . *U + &U _SW_DATA * -> _sw `ux -> -> # *U &U _SW_DATA `ui `ux 1 `i , $ . `E864 3 104
 , $ . `E864 0 106
 , $ . `E864 1 108
 , $ . `E864 2 110
 112 ]
[e :U 102 ]
"159
[; ;SW.c: 159: }
[e :UE 101 ]
}
